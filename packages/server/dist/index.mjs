import*as i from'jsonwebtoken';var t=class{constructor(r={}){this.secretKey=r.secretKey||"gameshield-default-secret",this.minConfidence=r.minConfidence??.7,this.checkExpiration=r.checkExpiration??true,this.customValidator=r.customValidator;}async validate(r){if(!r)return {success:false,error:"Token is required"};try{if(!r.startsWith("GS_"))return {success:!1,error:"Invalid token format"};let e=this.extractTokenData(r);return e?this.checkExpiration&&e.exp&&e.exp<Date.now()?{success:!1,error:"Token has expired"}:e.gameResult.success?!e.behaviorMetrics.isHuman||e.behaviorMetrics.confidence<this.minConfidence?{success:!1,error:"Behavior analysis indicates bot-like behavior",score:e.behaviorMetrics.confidence}:this.customValidator&&!await Promise.resolve(this.customValidator(e))?{success:!1,error:"Custom validation failed"}:{success:!0,data:e,score:e.behaviorMetrics.confidence}:{success:!1,error:"Game was not completed successfully"}:{success:!1,error:"Invalid token data"}}catch(e){return {success:false,error:`Validation error: ${e instanceof Error?e.message:String(e)}`}}}extractTokenData(r){try{let e=r.substring(3),a=atob(e);return JSON.parse(a)}catch(e){return console.error("Error extracting token data:",e),null}}createSignedToken(r){return i.sign(r,this.secretKey,{expiresIn:"5m"})}verifySignedToken(r){try{return i.verify(r,this.secretKey)}catch(e){return console.error("Error verifying token:",e),null}}};async function l(o,r={}){return new t(r).validate(o)}export{t as TokenValidator,l as verifyToken};//# sourceMappingURL=index.mjs.map
//# sourceMappingURL=index.mjs.map