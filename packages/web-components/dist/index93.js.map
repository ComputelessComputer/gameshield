{"version":3,"file":"index93.js","sources":["../../../node_modules/.pnpm/@pixi+compressed-textures@7.4.3_@pixi+assets@7.4.3_@pixi+core@7.4.3__@pixi+core@7.4.3/node_modules/@pixi/compressed-textures/lib/loaders/detectCompressedTextures.mjs"],"sourcesContent":["import { ExtensionType, settings, extensions as extensions$1 } from \"@pixi/core\";\nlet storedGl, extensions;\nfunction getCompressedTextureExtensions() {\n  extensions = {\n    bptc: storedGl.getExtension(\"EXT_texture_compression_bptc\"),\n    astc: storedGl.getExtension(\"WEBGL_compressed_texture_astc\"),\n    etc: storedGl.getExtension(\"WEBGL_compressed_texture_etc\"),\n    s3tc: storedGl.getExtension(\"WEBGL_compressed_texture_s3tc\"),\n    s3tc_sRGB: storedGl.getExtension(\"WEBGL_compressed_texture_s3tc_srgb\"),\n    /* eslint-disable-line camelcase */\n    pvrtc: storedGl.getExtension(\"WEBGL_compressed_texture_pvrtc\") || storedGl.getExtension(\"WEBKIT_WEBGL_compressed_texture_pvrtc\"),\n    etc1: storedGl.getExtension(\"WEBGL_compressed_texture_etc1\"),\n    atc: storedGl.getExtension(\"WEBGL_compressed_texture_atc\")\n  };\n}\nconst detectCompressedTextures = {\n  extension: {\n    type: ExtensionType.DetectionParser,\n    priority: 2\n  },\n  test: async () => {\n    const gl = settings.ADAPTER.createCanvas().getContext(\"webgl\");\n    return gl ? (storedGl = gl, !0) : (console.warn(\"WebGL not available for compressed textures.\"), !1);\n  },\n  add: async (formats) => {\n    extensions || getCompressedTextureExtensions();\n    const textureFormats = [];\n    for (const extensionName in extensions)\n      extensions[extensionName] && textureFormats.push(extensionName);\n    return [...textureFormats, ...formats];\n  },\n  remove: async (formats) => (extensions || getCompressedTextureExtensions(), formats.filter((f) => !(f in extensions)))\n};\nextensions$1.add(detectCompressedTextures);\nexport {\n  detectCompressedTextures\n};\n//# sourceMappingURL=detectCompressedTextures.mjs.map\n"],"names":["storedGl","extensions","getCompressedTextureExtensions","detectCompressedTextures","ExtensionType","gl","settings","formats","textureFormats","extensionName","f","extensions$1"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAIA,GAAUC;AACd,SAASC,IAAiC;AACxC,EAAAD,IAAa;AAAA,IACX,MAAMD,EAAS,aAAa,8BAA8B;AAAA,IAC1D,MAAMA,EAAS,aAAa,+BAA+B;AAAA,IAC3D,KAAKA,EAAS,aAAa,8BAA8B;AAAA,IACzD,MAAMA,EAAS,aAAa,+BAA+B;AAAA,IAC3D,WAAWA,EAAS,aAAa,oCAAoC;AAAA;AAAA,IAErE,OAAOA,EAAS,aAAa,gCAAgC,KAAKA,EAAS,aAAa,uCAAuC;AAAA,IAC/H,MAAMA,EAAS,aAAa,+BAA+B;AAAA,IAC3D,KAAKA,EAAS,aAAa,8BAA8B;AAAA,EAC7D;AACA;AACK,MAACG,IAA2B;AAAA,EAC/B,WAAW;AAAA,IACT,MAAMC,EAAc;AAAA,IACpB,UAAU;AAAA,EACX;AAAA,EACD,MAAM,YAAY;AAChB,UAAMC,IAAKC,EAAS,QAAQ,aAAY,EAAG,WAAW,OAAO;AAC7D,WAAOD,KAAML,IAAWK,GAAI,OAAO,QAAQ,KAAK,8CAA8C,GAAG;AAAA,EAClG;AAAA,EACD,KAAK,OAAOE,MAAY;AACtB,IAAAN,KAAcC,EAA8B;AAC5C,UAAMM,IAAiB,CAAA;AACvB,eAAWC,KAAiBR;AAC1B,MAAAA,EAAWQ,CAAa,KAAKD,EAAe,KAAKC,CAAa;AAChE,WAAO,CAAC,GAAGD,GAAgB,GAAGD,CAAO;AAAA,EACtC;AAAA,EACD,QAAQ,OAAOA,OAAaN,KAAcC,EAA8B,GAAIK,EAAQ,OAAO,CAACG,MAAM,EAAEA,KAAKT,EAAW;AACtH;AACAU,EAAa,IAAIR,CAAwB;","x_google_ignoreList":[0]}