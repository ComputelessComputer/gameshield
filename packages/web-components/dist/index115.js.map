{"version":3,"file":"index115.js","sources":["../../../node_modules/.pnpm/@pixi+sprite-tiling@7.4.3_@pixi+core@7.4.3_@pixi+display@7.4.3_@pixi+core@7.4.3__@pixi+_76c57bb3294f4ac25a7599840afa24d2/node_modules/@pixi/sprite-tiling/lib/TilingSpriteRenderer.mjs"],"sourcesContent":["import { Matrix, ObjectRenderer, QuadUv, State, Shader, WRAP_MODES, Color, utils, ExtensionType, extensions } from \"@pixi/core\";\nimport gl2FragmentSrc from \"./sprite-tiling.frag.mjs\";\nimport gl2VertexSrc from \"./sprite-tiling.vert.mjs\";\nimport gl1FragmentSrc from \"./sprite-tiling-fallback.frag.mjs\";\nimport gl1VertexSrc from \"./sprite-tiling-fallback.vert.mjs\";\nimport fragmentSimpleSrc from \"./sprite-tiling-simple.frag.mjs\";\nconst tempMat = new Matrix();\nclass TilingSpriteRenderer extends ObjectRenderer {\n  /**\n   * constructor for renderer\n   * @param {PIXI.Renderer} renderer - The renderer this tiling awesomeness works for.\n   */\n  constructor(renderer) {\n    super(renderer), renderer.runners.contextChange.add(this), this.quad = new QuadUv(), this.state = State.for2d();\n  }\n  /** Creates shaders when context is initialized. */\n  contextChange() {\n    const renderer = this.renderer, uniforms = { globals: renderer.globalUniforms };\n    this.simpleShader = Shader.from(gl1VertexSrc, fragmentSimpleSrc, uniforms), this.shader = renderer.context.webGLVersion > 1 ? Shader.from(gl2VertexSrc, gl2FragmentSrc, uniforms) : Shader.from(gl1VertexSrc, gl1FragmentSrc, uniforms);\n  }\n  /**\n   * @param {PIXI.TilingSprite} ts - tilingSprite to be rendered\n   */\n  render(ts) {\n    const renderer = this.renderer, quad = this.quad;\n    let vertices = quad.vertices;\n    vertices[0] = vertices[6] = ts._width * -ts.anchor.x, vertices[1] = vertices[3] = ts._height * -ts.anchor.y, vertices[2] = vertices[4] = ts._width * (1 - ts.anchor.x), vertices[5] = vertices[7] = ts._height * (1 - ts.anchor.y);\n    const anchorX = ts.uvRespectAnchor ? ts.anchor.x : 0, anchorY = ts.uvRespectAnchor ? ts.anchor.y : 0;\n    vertices = quad.uvs, vertices[0] = vertices[6] = -anchorX, vertices[1] = vertices[3] = -anchorY, vertices[2] = vertices[4] = 1 - anchorX, vertices[5] = vertices[7] = 1 - anchorY, quad.invalidate();\n    const tex = ts._texture, baseTex = tex.baseTexture, premultiplied = baseTex.alphaMode > 0, lt = ts.tileTransform.localTransform, uv = ts.uvMatrix;\n    let isSimple = baseTex.isPowerOfTwo && tex.frame.width === baseTex.width && tex.frame.height === baseTex.height;\n    isSimple && (baseTex._glTextures[renderer.CONTEXT_UID] ? isSimple = baseTex.wrapMode !== WRAP_MODES.CLAMP : baseTex.wrapMode === WRAP_MODES.CLAMP && (baseTex.wrapMode = WRAP_MODES.REPEAT));\n    const shader = isSimple ? this.simpleShader : this.shader, w = tex.width, h = tex.height, W = ts._width, H = ts._height;\n    tempMat.set(\n      lt.a * w / W,\n      lt.b * w / H,\n      lt.c * h / W,\n      lt.d * h / H,\n      lt.tx / W,\n      lt.ty / H\n    ), tempMat.invert(), isSimple ? tempMat.prepend(uv.mapCoord) : (shader.uniforms.uMapCoord = uv.mapCoord.toArray(!0), shader.uniforms.uClampFrame = uv.uClampFrame, shader.uniforms.uClampOffset = uv.uClampOffset), shader.uniforms.uTransform = tempMat.toArray(!0), shader.uniforms.uColor = Color.shared.setValue(ts.tint).premultiply(ts.worldAlpha, premultiplied).toArray(shader.uniforms.uColor), shader.uniforms.translationMatrix = ts.transform.worldTransform.toArray(!0), shader.uniforms.uSampler = tex, renderer.shader.bind(shader), renderer.geometry.bind(quad), this.state.blendMode = utils.correctBlendMode(ts.blendMode, premultiplied), renderer.state.set(this.state), renderer.geometry.draw(this.renderer.gl.TRIANGLES, 6, 0);\n  }\n}\nTilingSpriteRenderer.extension = {\n  name: \"tilingSprite\",\n  type: ExtensionType.RendererPlugin\n};\nextensions.add(TilingSpriteRenderer);\nexport {\n  TilingSpriteRenderer\n};\n//# sourceMappingURL=TilingSpriteRenderer.mjs.map\n"],"names":["tempMat","Matrix","TilingSpriteRenderer","ObjectRenderer","renderer","QuadUv","State","uniforms","Shader","gl1VertexSrc","fragmentSimpleSrc","gl2VertexSrc","gl2FragmentSrc","gl1FragmentSrc","ts","quad","vertices","anchorX","anchorY","tex","baseTex","premultiplied","lt","uv","isSimple","WRAP_MODES","shader","h","W","H","Color","utils.correctBlendMode","ExtensionType","extensions"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,MAAMA,IAAU,IAAIC;AACpB,MAAMC,UAA6BC,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA,EAKhD,YAAYC,GAAU;AACpB,UAAMA,CAAQ,GAAGA,EAAS,QAAQ,cAAc,IAAI,IAAI,GAAG,KAAK,OAAO,IAAIC,KAAU,KAAK,QAAQC,EAAM;EACzG;AAAA;AAAA,EAED,gBAAgB;AACd,UAAMF,IAAW,KAAK,UAAUG,IAAW,EAAE,SAASH,EAAS;AAC/D,SAAK,eAAeI,EAAO,KAAKC,GAAcC,GAAmBH,CAAQ,GAAG,KAAK,SAASH,EAAS,QAAQ,eAAe,IAAII,EAAO,KAAKG,GAAcC,GAAgBL,CAAQ,IAAIC,EAAO,KAAKC,GAAcI,GAAgBN,CAAQ;AAAA,EACvO;AAAA;AAAA;AAAA;AAAA,EAID,OAAOO,GAAI;AACT,UAAMV,IAAW,KAAK,UAAUW,IAAO,KAAK;AAC5C,QAAIC,IAAWD,EAAK;AACpB,IAAAC,EAAS,CAAC,IAAIA,EAAS,CAAC,IAAIF,EAAG,SAAS,CAACA,EAAG,OAAO,GAAGE,EAAS,CAAC,IAAIA,EAAS,CAAC,IAAIF,EAAG,UAAU,CAACA,EAAG,OAAO,GAAGE,EAAS,CAAC,IAAIA,EAAS,CAAC,IAAIF,EAAG,UAAU,IAAIA,EAAG,OAAO,IAAIE,EAAS,CAAC,IAAIA,EAAS,CAAC,IAAIF,EAAG,WAAW,IAAIA,EAAG,OAAO;AAChO,UAAMG,IAAUH,EAAG,kBAAkBA,EAAG,OAAO,IAAI,GAAGI,IAAUJ,EAAG,kBAAkBA,EAAG,OAAO,IAAI;AACnG,IAAAE,IAAWD,EAAK,KAAKC,EAAS,CAAC,IAAIA,EAAS,CAAC,IAAI,CAACC,GAASD,EAAS,CAAC,IAAIA,EAAS,CAAC,IAAI,CAACE,GAASF,EAAS,CAAC,IAAIA,EAAS,CAAC,IAAI,IAAIC,GAASD,EAAS,CAAC,IAAIA,EAAS,CAAC,IAAI,IAAIE,GAASH,EAAK;AACxL,UAAMI,IAAML,EAAG,UAAUM,IAAUD,EAAI,aAAaE,IAAgBD,EAAQ,YAAY,GAAGE,IAAKR,EAAG,cAAc,gBAAgBS,IAAKT,EAAG;AACzI,QAAIU,IAAWJ,EAAQ,gBAAgBD,EAAI,MAAM,UAAUC,EAAQ,SAASD,EAAI,MAAM,WAAWC,EAAQ;AACzG,IAAAI,MAAaJ,EAAQ,YAAYhB,EAAS,WAAW,IAAIoB,IAAWJ,EAAQ,aAAaK,EAAW,QAAQL,EAAQ,aAAaK,EAAW,UAAUL,EAAQ,WAAWK,EAAW;AACpL,UAAMC,IAASF,IAAW,KAAK,eAAe,KAAK,QAAQ,IAAIL,EAAI,OAAOQ,IAAIR,EAAI,QAAQS,IAAId,EAAG,QAAQe,IAAIf,EAAG;AAChH,IAAAd,EAAQ;AAAA,MACNsB,EAAG,IAAI,IAAIM;AAAA,MACXN,EAAG,IAAI,IAAIO;AAAA,MACXP,EAAG,IAAIK,IAAIC;AAAA,MACXN,EAAG,IAAIK,IAAIE;AAAA,MACXP,EAAG,KAAKM;AAAA,MACRN,EAAG,KAAKO;AAAA,IACT,GAAE7B,EAAQ,UAAUwB,IAAWxB,EAAQ,QAAQuB,EAAG,QAAQ,KAAKG,EAAO,SAAS,YAAYH,EAAG,SAAS,QAAQ,EAAE,GAAGG,EAAO,SAAS,cAAcH,EAAG,aAAaG,EAAO,SAAS,eAAeH,EAAG,eAAeG,EAAO,SAAS,aAAa1B,EAAQ,QAAQ,EAAE,GAAG0B,EAAO,SAAS,SAASI,EAAM,OAAO,SAAShB,EAAG,IAAI,EAAE,YAAYA,EAAG,YAAYO,CAAa,EAAE,QAAQK,EAAO,SAAS,MAAM,GAAGA,EAAO,SAAS,oBAAoBZ,EAAG,UAAU,eAAe,QAAQ,EAAE,GAAGY,EAAO,SAAS,WAAWP,GAAKf,EAAS,OAAO,KAAKsB,CAAM,GAAGtB,EAAS,SAAS,KAAKW,CAAI,GAAG,KAAK,MAAM,YAAYgB,EAAuBjB,EAAG,WAAWO,CAAa,GAAGjB,EAAS,MAAM,IAAI,KAAK,KAAK,GAAGA,EAAS,SAAS,KAAK,KAAK,SAAS,GAAG,WAAW,GAAG,CAAC;AAAA,EACttB;AACH;AACAF,EAAqB,YAAY;AAAA,EAC/B,MAAM;AAAA,EACN,MAAM8B,EAAc;AACtB;AACAC,EAAW,IAAI/B,CAAoB;","x_google_ignoreList":[0]}