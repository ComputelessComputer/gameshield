{"version":3,"file":"index577.js","sources":["../../../node_modules/.pnpm/pixi.js@8.8.1/node_modules/pixi.js/lib/scene/text/utils/generateTextStyleKey.mjs"],"sourcesContent":["import { Color } from '../../../color/Color.mjs';\n\n\"use strict\";\nconst valuesToIterateForKeys = [\n  \"align\",\n  \"breakWords\",\n  \"cssOverrides\",\n  \"fontVariant\",\n  \"fontWeight\",\n  \"leading\",\n  \"letterSpacing\",\n  \"lineHeight\",\n  \"padding\",\n  \"textBaseline\",\n  \"trim\",\n  \"whiteSpace\",\n  \"wordWrap\",\n  \"wordWrapWidth\",\n  \"fontFamily\",\n  \"fontStyle\",\n  \"fontSize\"\n];\nfunction generateTextStyleKey(style) {\n  const key = [];\n  let index = 0;\n  for (let i = 0; i < valuesToIterateForKeys.length; i++) {\n    const prop = `_${valuesToIterateForKeys[i]}`;\n    key[index++] = style[prop];\n  }\n  index = addFillStyleKey(style._fill, key, index);\n  index = addStokeStyleKey(style._stroke, key, index);\n  index = addDropShadowKey(style.dropShadow, key, index);\n  return key.join(\"-\");\n}\nfunction addFillStyleKey(fillStyle, key, index) {\n  if (!fillStyle)\n    return index;\n  key[index++] = fillStyle.color;\n  key[index++] = fillStyle.alpha;\n  key[index++] = fillStyle.fill?.styleKey;\n  return index;\n}\nfunction addStokeStyleKey(strokeStyle, key, index) {\n  if (!strokeStyle)\n    return index;\n  index = addFillStyleKey(strokeStyle, key, index);\n  key[index++] = strokeStyle.width;\n  key[index++] = strokeStyle.alignment;\n  key[index++] = strokeStyle.cap;\n  key[index++] = strokeStyle.join;\n  key[index++] = strokeStyle.miterLimit;\n  return index;\n}\nfunction addDropShadowKey(dropShadow, key, index) {\n  if (!dropShadow)\n    return index;\n  key[index++] = dropShadow.alpha;\n  key[index++] = dropShadow.angle;\n  key[index++] = dropShadow.blur;\n  key[index++] = dropShadow.distance;\n  key[index++] = Color.shared.setValue(dropShadow.color).toNumber();\n  return index;\n}\n\nexport { generateTextStyleKey };\n//# sourceMappingURL=generateTextStyleKey.mjs.map\n"],"names":["valuesToIterateForKeys","generateTextStyleKey","style","key","index","i","prop","addFillStyleKey","addStokeStyleKey","addDropShadowKey","fillStyle","_a","strokeStyle","dropShadow","Color"],"mappings":";AAGA,MAAMA,IAAyB;AAAA,EAC7B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AACA,SAASC,EAAqBC,GAAO;AACnC,QAAMC,IAAM,CAAA;AACZ,MAAIC,IAAQ;AACZ,WAASC,IAAI,GAAGA,IAAIL,EAAuB,QAAQK,KAAK;AACtD,UAAMC,IAAO,IAAIN,EAAuBK,CAAC,CAAC;AAC1C,IAAAF,EAAIC,GAAO,IAAIF,EAAMI,CAAI;AAAA,EAC1B;AACD,SAAAF,IAAQG,EAAgBL,EAAM,OAAOC,GAAKC,CAAK,GAC/CA,IAAQI,EAAiBN,EAAM,SAASC,GAAKC,CAAK,GAClDA,IAAQK,EAAiBP,EAAM,YAAYC,GAAKC,CAAK,GAC9CD,EAAI,KAAK,GAAG;AACrB;AACA,SAASI,EAAgBG,GAAWP,GAAKC,GAAO;;AAC9C,SAAKM,MAELP,EAAIC,GAAO,IAAIM,EAAU,OACzBP,EAAIC,GAAO,IAAIM,EAAU,OACzBP,EAAIC,GAAO,KAAIO,IAAAD,EAAU,SAAV,gBAAAC,EAAgB,WACxBP;AACT;AACA,SAASI,EAAiBI,GAAaT,GAAKC,GAAO;AACjD,SAAKQ,MAELR,IAAQG,EAAgBK,GAAaT,GAAKC,CAAK,GAC/CD,EAAIC,GAAO,IAAIQ,EAAY,OAC3BT,EAAIC,GAAO,IAAIQ,EAAY,WAC3BT,EAAIC,GAAO,IAAIQ,EAAY,KAC3BT,EAAIC,GAAO,IAAIQ,EAAY,MAC3BT,EAAIC,GAAO,IAAIQ,EAAY,aACpBR;AACT;AACA,SAASK,EAAiBI,GAAYV,GAAKC,GAAO;AAChD,SAAKS,MAELV,EAAIC,GAAO,IAAIS,EAAW,OAC1BV,EAAIC,GAAO,IAAIS,EAAW,OAC1BV,EAAIC,GAAO,IAAIS,EAAW,MAC1BV,EAAIC,GAAO,IAAIS,EAAW,UAC1BV,EAAIC,GAAO,IAAIU,EAAM,OAAO,SAASD,EAAW,KAAK,EAAE,aAChDT;AACT;","x_google_ignoreList":[0]}