{"version":3,"file":"index157.js","sources":["../../../node_modules/.pnpm/@pixi+assets@7.4.3_@pixi+core@7.4.3/node_modules/@pixi/assets/lib/cache/Cache.mjs"],"sourcesContent":["import { Texture, BaseTexture } from \"@pixi/core\";\nimport \"../utils/index.mjs\";\nimport { convertToList } from \"../utils/convertToList.mjs\";\nclass CacheClass {\n  constructor() {\n    this._parsers = [], this._cache = /* @__PURE__ */ new Map(), this._cacheMap = /* @__PURE__ */ new Map();\n  }\n  /** Clear all entries. */\n  reset() {\n    this._cacheMap.clear(), this._cache.clear();\n  }\n  /**\n   * Check if the key exists\n   * @param key - The key to check\n   */\n  has(key) {\n    return this._cache.has(key);\n  }\n  /**\n   * Fetch entry by key\n   * @param key - The key of the entry to get\n   */\n  get(key) {\n    const result = this._cache.get(key);\n    return result || console.warn(`[Assets] Asset id ${key} was not found in the Cache`), result;\n  }\n  /**\n   * Set a value by key or keys name\n   * @param key - The key or keys to set\n   * @param value - The value to store in the cache or from which cacheable assets will be derived.\n   */\n  set(key, value) {\n    const keys = convertToList(key);\n    let cacheableAssets;\n    for (let i = 0; i < this.parsers.length; i++) {\n      const parser = this.parsers[i];\n      if (parser.test(value)) {\n        cacheableAssets = parser.getCacheableAssets(keys, value);\n        break;\n      }\n    }\n    cacheableAssets || (cacheableAssets = {}, keys.forEach((key2) => {\n      cacheableAssets[key2] = value;\n    }));\n    const cacheKeys = Object.keys(cacheableAssets), cachedAssets = {\n      cacheKeys,\n      keys\n    };\n    if (keys.forEach((key2) => {\n      this._cacheMap.set(key2, cachedAssets);\n    }), cacheKeys.forEach((key2) => {\n      const val = cacheableAssets ? cacheableAssets[key2] : value;\n      this._cache.has(key2) && this._cache.get(key2) !== val && console.warn(\"[Cache] already has key:\", key2), this._cache.set(key2, cacheableAssets[key2]);\n    }), value instanceof Texture) {\n      const texture = value;\n      keys.forEach((key2) => {\n        texture.baseTexture !== Texture.EMPTY.baseTexture && BaseTexture.addToCache(texture.baseTexture, key2), Texture.addToCache(texture, key2);\n      });\n    }\n  }\n  /**\n   * Remove entry by key\n   *\n   * This function will also remove any associated alias from the cache also.\n   * @param key - The key of the entry to remove\n   */\n  remove(key) {\n    if (!this._cacheMap.has(key)) {\n      console.warn(`[Assets] Asset id ${key} was not found in the Cache`);\n      return;\n    }\n    const cacheMap = this._cacheMap.get(key);\n    cacheMap.cacheKeys.forEach((key2) => {\n      this._cache.delete(key2);\n    }), cacheMap.keys.forEach((key2) => {\n      this._cacheMap.delete(key2);\n    });\n  }\n  /** All loader parsers registered */\n  get parsers() {\n    return this._parsers;\n  }\n}\nconst Cache = new CacheClass();\nexport {\n  Cache\n};\n//# sourceMappingURL=Cache.mjs.map\n"],"names":["CacheClass","key","result","value","keys","convertToList","cacheableAssets","i","parser","key2","cacheKeys","cachedAssets","val","Texture","texture","BaseTexture","cacheMap","Cache"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,MAAMA,EAAW;AAAA,EACf,cAAc;AACZ,SAAK,WAAW,IAAI,KAAK,SAAyB,oBAAI,IAAG,GAAI,KAAK,YAA4B,oBAAI,IAAG;AAAA,EACtG;AAAA;AAAA,EAED,QAAQ;AACN,SAAK,UAAU,MAAK,GAAI,KAAK,OAAO;EACrC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,IAAIC,GAAK;AACP,WAAO,KAAK,OAAO,IAAIA,CAAG;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,IAAIA,GAAK;AACP,UAAMC,IAAS,KAAK,OAAO,IAAID,CAAG;AAClC,WAAOC,KAAU,QAAQ,KAAK,qBAAqBD,CAAG,6BAA6B,GAAGC;AAAA,EACvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,IAAID,GAAKE,GAAO;AACd,UAAMC,IAAOC,EAAcJ,CAAG;AAC9B,QAAIK;AACJ,aAASC,IAAI,GAAGA,IAAI,KAAK,QAAQ,QAAQA,KAAK;AAC5C,YAAMC,IAAS,KAAK,QAAQD,CAAC;AAC7B,UAAIC,EAAO,KAAKL,CAAK,GAAG;AACtB,QAAAG,IAAkBE,EAAO,mBAAmBJ,GAAMD,CAAK;AACvD;AAAA,MACD;AAAA,IACF;AACD,IAAAG,MAAoBA,IAAkB,CAAE,GAAEF,EAAK,QAAQ,CAACK,MAAS;AAC/D,MAAAH,EAAgBG,CAAI,IAAIN;AAAA,IACzB,CAAA;AACD,UAAMO,IAAY,OAAO,KAAKJ,CAAe,GAAGK,IAAe;AAAA,MAC7D,WAAAD;AAAA,MACA,MAAAN;AAAA,IACN;AACI,QAAIA,EAAK,QAAQ,CAACK,MAAS;AACzB,WAAK,UAAU,IAAIA,GAAME,CAAY;AAAA,IACtC,CAAA,GAAGD,EAAU,QAAQ,CAACD,MAAS;AAC9B,YAAMG,IAAMN,IAAkBA,EAAgBG,CAAI,IAAIN;AACtD,WAAK,OAAO,IAAIM,CAAI,KAAK,KAAK,OAAO,IAAIA,CAAI,MAAMG,KAAO,QAAQ,KAAK,4BAA4BH,CAAI,GAAG,KAAK,OAAO,IAAIA,GAAMH,EAAgBG,CAAI,CAAC;AAAA,IAC3J,CAAK,GAAGN,aAAiBU,GAAS;AAC5B,YAAMC,IAAUX;AAChB,MAAAC,EAAK,QAAQ,CAACK,MAAS;AACrB,QAAAK,EAAQ,gBAAgBD,EAAQ,MAAM,eAAeE,EAAY,WAAWD,EAAQ,aAAaL,CAAI,GAAGI,EAAQ,WAAWC,GAASL,CAAI;AAAA,MAChJ,CAAO;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,OAAOR,GAAK;AACV,QAAI,CAAC,KAAK,UAAU,IAAIA,CAAG,GAAG;AAC5B,cAAQ,KAAK,qBAAqBA,CAAG,6BAA6B;AAClE;AAAA,IACD;AACD,UAAMe,IAAW,KAAK,UAAU,IAAIf,CAAG;AACvC,IAAAe,EAAS,UAAU,QAAQ,CAACP,MAAS;AACnC,WAAK,OAAO,OAAOA,CAAI;AAAA,IACxB,CAAA,GAAGO,EAAS,KAAK,QAAQ,CAACP,MAAS;AAClC,WAAK,UAAU,OAAOA,CAAI;AAAA,IAChC,CAAK;AAAA,EACF;AAAA;AAAA,EAED,IAAI,UAAU;AACZ,WAAO,KAAK;AAAA,EACb;AACH;AACK,MAACQ,KAAQ,IAAIjB,EAAU;","x_google_ignoreList":[0]}