{"version":3,"file":"index71.js","sources":["../../../node_modules/.pnpm/@pixi+core@7.4.3/node_modules/@pixi/core/lib/textures/TextureGCSystem.mjs"],"sourcesContent":["import { GC_MODES } from \"@pixi/constants\";\nimport { ExtensionType, extensions } from \"@pixi/extensions\";\nconst _TextureGCSystem = class _TextureGCSystem2 {\n  /** @param renderer - The renderer this System works for. */\n  constructor(renderer) {\n    this.renderer = renderer, this.count = 0, this.checkCount = 0, this.maxIdle = _TextureGCSystem2.defaultMaxIdle, this.checkCountMax = _TextureGCSystem2.defaultCheckCountMax, this.mode = _TextureGCSystem2.defaultMode;\n  }\n  /**\n   * Checks to see when the last time a texture was used.\n   * If the texture has not been used for a specified amount of time, it will be removed from the GPU.\n   */\n  postrender() {\n    this.renderer.objectRenderer.renderingToScreen && (this.count++, this.mode !== GC_MODES.MANUAL && (this.checkCount++, this.checkCount > this.checkCountMax && (this.checkCount = 0, this.run())));\n  }\n  /**\n   * Checks to see when the last time a texture was used.\n   * If the texture has not been used for a specified amount of time, it will be removed from the GPU.\n   */\n  run() {\n    const tm = this.renderer.texture, managedTextures = tm.managedTextures;\n    let wasRemoved = !1;\n    for (let i = 0; i < managedTextures.length; i++) {\n      const texture = managedTextures[i];\n      texture.resource && this.count - texture.touched > this.maxIdle && (tm.destroyTexture(texture, !0), managedTextures[i] = null, wasRemoved = !0);\n    }\n    if (wasRemoved) {\n      let j = 0;\n      for (let i = 0; i < managedTextures.length; i++)\n        managedTextures[i] !== null && (managedTextures[j++] = managedTextures[i]);\n      managedTextures.length = j;\n    }\n  }\n  /**\n   * Removes all the textures within the specified displayObject and its children from the GPU.\n   * @param {PIXI.DisplayObject} displayObject - the displayObject to remove the textures from.\n   */\n  unload(displayObject) {\n    const tm = this.renderer.texture, texture = displayObject._texture;\n    texture && !texture.framebuffer && tm.destroyTexture(texture);\n    for (let i = displayObject.children.length - 1; i >= 0; i--)\n      this.unload(displayObject.children[i]);\n  }\n  destroy() {\n    this.renderer = null;\n  }\n};\n_TextureGCSystem.defaultMode = GC_MODES.AUTO, /**\n* Default maximum idle frames before a texture is destroyed by garbage collection.\n* @static\n* @default 3600\n* @see PIXI.TextureGCSystem#maxIdle\n*/\n_TextureGCSystem.defaultMaxIdle = 60 * 60, /**\n* Default frames between two garbage collections.\n* @static\n* @default 600\n* @see PIXI.TextureGCSystem#checkCountMax\n*/\n_TextureGCSystem.defaultCheckCountMax = 60 * 10, /** @ignore */\n_TextureGCSystem.extension = {\n  type: ExtensionType.RendererSystem,\n  name: \"textureGC\"\n};\nlet TextureGCSystem = _TextureGCSystem;\nextensions.add(TextureGCSystem);\nexport {\n  TextureGCSystem\n};\n//# sourceMappingURL=TextureGCSystem.mjs.map\n"],"names":["_TextureGCSystem","_TextureGCSystem2","renderer","GC_MODES","tm","managedTextures","wasRemoved","i","texture","j","displayObject","ExtensionType","TextureGCSystem","extensions"],"mappings":";;AAEA,MAAMA,IAAmB,MAAMC,EAAkB;AAAA;AAAA,EAE/C,YAAYC,GAAU;AACpB,SAAK,WAAWA,GAAU,KAAK,QAAQ,GAAG,KAAK,aAAa,GAAG,KAAK,UAAUD,EAAkB,gBAAgB,KAAK,gBAAgBA,EAAkB,sBAAsB,KAAK,OAAOA,EAAkB;AAAA,EAC5M;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,aAAa;AACX,SAAK,SAAS,eAAe,sBAAsB,KAAK,SAAS,KAAK,SAASE,EAAS,WAAW,KAAK,cAAc,KAAK,aAAa,KAAK,kBAAkB,KAAK,aAAa,GAAG,KAAK,IAAK;AAAA,EAC/L;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,MAAM;AACJ,UAAMC,IAAK,KAAK,SAAS,SAASC,IAAkBD,EAAG;AACvD,QAAIE,IAAa;AACjB,aAASC,IAAI,GAAGA,IAAIF,EAAgB,QAAQE,KAAK;AAC/C,YAAMC,IAAUH,EAAgBE,CAAC;AACjC,MAAAC,EAAQ,YAAY,KAAK,QAAQA,EAAQ,UAAU,KAAK,YAAYJ,EAAG,eAAeI,GAAS,EAAE,GAAGH,EAAgBE,CAAC,IAAI,MAAMD,IAAa;AAAA,IAC7I;AACD,QAAIA,GAAY;AACd,UAAIG,IAAI;AACR,eAASF,IAAI,GAAGA,IAAIF,EAAgB,QAAQE;AAC1C,QAAAF,EAAgBE,CAAC,MAAM,SAASF,EAAgBI,GAAG,IAAIJ,EAAgBE,CAAC;AAC1E,MAAAF,EAAgB,SAASI;AAAA,IAC1B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,OAAOC,GAAe;AACpB,UAAMN,IAAK,KAAK,SAAS,SAASI,IAAUE,EAAc;AAC1D,IAAAF,KAAW,CAACA,EAAQ,eAAeJ,EAAG,eAAeI,CAAO;AAC5D,aAASD,IAAIG,EAAc,SAAS,SAAS,GAAGH,KAAK,GAAGA;AACtD,WAAK,OAAOG,EAAc,SAASH,CAAC,CAAC;AAAA,EACxC;AAAA,EACD,UAAU;AACR,SAAK,WAAW;AAAA,EACjB;AACH;AACAP,EAAiB,cAAcG,EAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAMxCH,EAAiB,iBAAiB,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAMvCA,EAAiB,uBAAuB,KAAK;AAC7CA,EAAiB,YAAY;AAAA,EAC3B,MAAMW,EAAc;AAAA,EACpB,MAAM;AACR;AACG,IAACC,IAAkBZ;AACtBa,EAAW,IAAID,CAAe;","x_google_ignoreList":[0]}