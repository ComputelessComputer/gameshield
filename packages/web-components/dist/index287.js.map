{"version":3,"file":"index287.js","sources":["../../../node_modules/.pnpm/@pixi+graphics@7.4.3_@pixi+core@7.4.3_@pixi+display@7.4.3_@pixi+core@7.4.3__@pixi+sprit_3c40fa602f454a6b22dad0b27bc41147/node_modules/@pixi/graphics/lib/utils/ArcUtils.mjs"],"sourcesContent":["import { PI_2 } from \"@pixi/core\";\nimport { curves } from \"../const.mjs\";\nclass ArcUtils {\n  /**\n   * Calculate information of the arc for {@link PIXI.Graphics.arcTo}.\n   * @private\n   * @param x1 - The x-coordinate of the first control point of the arc\n   * @param y1 - The y-coordinate of the first control point of the arc\n   * @param x2 - The x-coordinate of the second control point of the arc\n   * @param y2 - The y-coordinate of the second control point of the arc\n   * @param radius - The radius of the arc\n   * @param points - Collection of points to add to\n   * @returns - If the arc length is valid, return center of circle, radius and other info otherwise `null`.\n   */\n  static curveTo(x1, y1, x2, y2, radius, points) {\n    const fromX = points[points.length - 2], a1 = points[points.length - 1] - y1, b1 = fromX - x1, a2 = y2 - y1, b2 = x2 - x1, mm = Math.abs(a1 * b2 - b1 * a2);\n    if (mm < 1e-8 || radius === 0)\n      return (points[points.length - 2] !== x1 || points[points.length - 1] !== y1) && points.push(x1, y1), null;\n    const dd = a1 * a1 + b1 * b1, cc = a2 * a2 + b2 * b2, tt = a1 * a2 + b1 * b2, k1 = radius * Math.sqrt(dd) / mm, k2 = radius * Math.sqrt(cc) / mm, j1 = k1 * tt / dd, j2 = k2 * tt / cc, cx = k1 * b2 + k2 * b1, cy = k1 * a2 + k2 * a1, px = b1 * (k2 + j1), py = a1 * (k2 + j1), qx = b2 * (k1 + j2), qy = a2 * (k1 + j2), startAngle = Math.atan2(py - cy, px - cx), endAngle = Math.atan2(qy - cy, qx - cx);\n    return {\n      cx: cx + x1,\n      cy: cy + y1,\n      radius,\n      startAngle,\n      endAngle,\n      anticlockwise: b1 * a2 > b2 * a1\n    };\n  }\n  /**\n   * The arc method creates an arc/curve (used to create circles, or parts of circles).\n   * @private\n   * @param _startX - Start x location of arc\n   * @param _startY - Start y location of arc\n   * @param cx - The x-coordinate of the center of the circle\n   * @param cy - The y-coordinate of the center of the circle\n   * @param radius - The radius of the circle\n   * @param startAngle - The starting angle, in radians (0 is at the 3 o'clock position\n   *  of the arc's circle)\n   * @param endAngle - The ending angle, in radians\n   * @param _anticlockwise - Specifies whether the drawing should be\n   *  counter-clockwise or clockwise. False is default, and indicates clockwise, while true\n   *  indicates counter-clockwise.\n   * @param points - Collection of points to add to\n   */\n  static arc(_startX, _startY, cx, cy, radius, startAngle, endAngle, _anticlockwise, points) {\n    const sweep = endAngle - startAngle, n = curves._segmentsCount(\n      Math.abs(sweep) * radius,\n      Math.ceil(Math.abs(sweep) / PI_2) * 40\n    ), theta = sweep / (n * 2), theta2 = theta * 2, cTheta = Math.cos(theta), sTheta = Math.sin(theta), segMinus = n - 1, remainder = segMinus % 1 / segMinus;\n    for (let i = 0; i <= segMinus; ++i) {\n      const real = i + remainder * i, angle = theta + startAngle + theta2 * real, c = Math.cos(angle), s = -Math.sin(angle);\n      points.push(\n        (cTheta * c + sTheta * s) * radius + cx,\n        (cTheta * -s + sTheta * c) * radius + cy\n      );\n    }\n  }\n}\nexport {\n  ArcUtils\n};\n//# sourceMappingURL=ArcUtils.mjs.map\n"],"names":["ArcUtils","x1","y1","x2","y2","radius","points","fromX","a1","b1","a2","b2","mm","dd","cc","tt","k1","k2","j1","j2","cx","cy","px","py","qx","qy","startAngle","endAngle","_startX","_startY","_anticlockwise","sweep","n","curves","PI_2","theta","theta2","cTheta","sTheta","segMinus","remainder","i","real","angle","c","s"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,MAAMA,GAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYb,OAAO,QAAQC,GAAIC,GAAIC,GAAIC,GAAIC,GAAQC,GAAQ;AAC7C,UAAMC,IAAQD,EAAOA,EAAO,SAAS,CAAC,GAAGE,IAAKF,EAAOA,EAAO,SAAS,CAAC,IAAIJ,GAAIO,IAAKF,IAAQN,GAAIS,IAAKN,IAAKF,GAAIS,IAAKR,IAAKF,GAAIW,IAAK,KAAK,IAAIJ,IAAKG,IAAKF,IAAKC,CAAE;AAC1J,QAAIE,IAAK,QAAQP,MAAW;AAC1B,cAAQC,EAAOA,EAAO,SAAS,CAAC,MAAML,KAAMK,EAAOA,EAAO,SAAS,CAAC,MAAMJ,MAAOI,EAAO,KAAKL,GAAIC,CAAE,GAAG;AACxG,UAAMW,IAAKL,IAAKA,IAAKC,IAAKA,GAAIK,IAAKJ,IAAKA,IAAKC,IAAKA,GAAII,IAAKP,IAAKE,IAAKD,IAAKE,GAAIK,IAAKX,IAAS,KAAK,KAAKQ,CAAE,IAAID,GAAIK,IAAKZ,IAAS,KAAK,KAAKS,CAAE,IAAIF,GAAIM,IAAKF,IAAKD,IAAKF,GAAIM,IAAKF,IAAKF,IAAKD,GAAIM,IAAKJ,IAAKL,IAAKM,IAAKR,GAAIY,IAAKL,IAAKN,IAAKO,IAAKT,GAAIc,IAAKb,KAAMQ,IAAKC,IAAKK,IAAKf,KAAMS,IAAKC,IAAKM,IAAKb,KAAMK,IAAKG,IAAKM,IAAKf,KAAMM,IAAKG,IAAKO,IAAa,KAAK,MAAMH,IAAKF,GAAIC,IAAKF,CAAE,GAAGO,IAAW,KAAK,MAAMF,IAAKJ,GAAIG,IAAKJ,CAAE;AAC7Y,WAAO;AAAA,MACL,IAAIA,IAAKnB;AAAA,MACT,IAAIoB,IAAKnB;AAAA,MACT,QAAAG;AAAA,MACA,YAAAqB;AAAA,MACA,UAAAC;AAAA,MACA,eAAelB,IAAKC,IAAKC,IAAKH;AAAA,IACpC;AAAA,EACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBD,OAAO,IAAIoB,GAASC,GAAST,GAAIC,GAAIhB,GAAQqB,GAAYC,GAAUG,GAAgBxB,GAAQ;AACzF,UAAMyB,IAAQJ,IAAWD,GAAYM,IAAIC,EAAO;AAAA,MAC9C,KAAK,IAAIF,CAAK,IAAI1B;AAAA,MAClB,KAAK,KAAK,KAAK,IAAI0B,CAAK,IAAIG,CAAI,IAAI;AAAA,IACrC,GAAEC,IAAQJ,KAASC,IAAI,IAAII,IAASD,IAAQ,GAAGE,IAAS,KAAK,IAAIF,CAAK,GAAGG,IAAS,KAAK,IAAIH,CAAK,GAAGI,IAAWP,IAAI,GAAGQ,IAAYD,IAAW,IAAIA;AACjJ,aAASE,IAAI,GAAGA,KAAKF,GAAU,EAAEE,GAAG;AAClC,YAAMC,IAAOD,IAAID,IAAYC,GAAGE,IAAQR,IAAQT,IAAaU,IAASM,GAAME,IAAI,KAAK,IAAID,CAAK,GAAGE,IAAI,CAAC,KAAK,IAAIF,CAAK;AACpH,MAAArC,EAAO;AAAA,SACJ+B,IAASO,IAAIN,IAASO,KAAKxC,IAASe;AAAA,SACpCiB,IAAS,CAACQ,IAAIP,IAASM,KAAKvC,IAASgB;AAAA,MAC9C;AAAA,IACK;AAAA,EACF;AACH;","x_google_ignoreList":[0]}