{"version":3,"file":"index153.js","sources":["../../../node_modules/.pnpm/pixi.js@8.8.1/node_modules/pixi.js/lib/extensions/Extensions.mjs"],"sourcesContent":["\"use strict\";\nvar ExtensionType = /* @__PURE__ */ ((ExtensionType2) => {\n  ExtensionType2[\"Application\"] = \"application\";\n  ExtensionType2[\"WebGLPipes\"] = \"webgl-pipes\";\n  ExtensionType2[\"WebGLPipesAdaptor\"] = \"webgl-pipes-adaptor\";\n  ExtensionType2[\"WebGLSystem\"] = \"webgl-system\";\n  ExtensionType2[\"WebGPUPipes\"] = \"webgpu-pipes\";\n  ExtensionType2[\"WebGPUPipesAdaptor\"] = \"webgpu-pipes-adaptor\";\n  ExtensionType2[\"WebGPUSystem\"] = \"webgpu-system\";\n  ExtensionType2[\"CanvasSystem\"] = \"canvas-system\";\n  ExtensionType2[\"CanvasPipesAdaptor\"] = \"canvas-pipes-adaptor\";\n  ExtensionType2[\"CanvasPipes\"] = \"canvas-pipes\";\n  ExtensionType2[\"Asset\"] = \"asset\";\n  ExtensionType2[\"LoadParser\"] = \"load-parser\";\n  ExtensionType2[\"ResolveParser\"] = \"resolve-parser\";\n  ExtensionType2[\"CacheParser\"] = \"cache-parser\";\n  ExtensionType2[\"DetectionParser\"] = \"detection-parser\";\n  ExtensionType2[\"MaskEffect\"] = \"mask-effect\";\n  ExtensionType2[\"BlendMode\"] = \"blend-mode\";\n  ExtensionType2[\"TextureSource\"] = \"texture-source\";\n  ExtensionType2[\"Environment\"] = \"environment\";\n  ExtensionType2[\"ShapeBuilder\"] = \"shape-builder\";\n  ExtensionType2[\"Batcher\"] = \"batcher\";\n  return ExtensionType2;\n})(ExtensionType || {});\nconst normalizeExtension = (ext) => {\n  if (typeof ext === \"function\" || typeof ext === \"object\" && ext.extension) {\n    if (!ext.extension) {\n      throw new Error(\"Extension class must have an extension object\");\n    }\n    const metadata = typeof ext.extension !== \"object\" ? { type: ext.extension } : ext.extension;\n    ext = { ...metadata, ref: ext };\n  }\n  if (typeof ext === \"object\") {\n    ext = { ...ext };\n  } else {\n    throw new Error(\"Invalid extension type\");\n  }\n  if (typeof ext.type === \"string\") {\n    ext.type = [ext.type];\n  }\n  return ext;\n};\nconst normalizeExtensionPriority = (ext, defaultPriority) => normalizeExtension(ext).priority ?? defaultPriority;\nconst extensions = {\n  /** @ignore */\n  _addHandlers: {},\n  /** @ignore */\n  _removeHandlers: {},\n  /** @ignore */\n  _queue: {},\n  /**\n   * Remove extensions from PixiJS.\n   * @param extensions - Extensions to be removed.\n   * @returns {extensions} For chaining.\n   */\n  remove(...extensions2) {\n    extensions2.map(normalizeExtension).forEach((ext) => {\n      ext.type.forEach((type) => this._removeHandlers[type]?.(ext));\n    });\n    return this;\n  },\n  /**\n   * Register new extensions with PixiJS.\n   * @param extensions - The spread of extensions to add to PixiJS.\n   * @returns {extensions} For chaining.\n   */\n  add(...extensions2) {\n    extensions2.map(normalizeExtension).forEach((ext) => {\n      ext.type.forEach((type) => {\n        const handlers = this._addHandlers;\n        const queue = this._queue;\n        if (!handlers[type]) {\n          queue[type] = queue[type] || [];\n          queue[type]?.push(ext);\n        } else {\n          handlers[type]?.(ext);\n        }\n      });\n    });\n    return this;\n  },\n  /**\n   * Internal method to handle extensions by name.\n   * @param type - The extension type.\n   * @param onAdd  - Function handler when extensions are added/registered {@link StrictExtensionFormat}.\n   * @param onRemove  - Function handler when extensions are removed/unregistered {@link StrictExtensionFormat}.\n   * @returns {extensions} For chaining.\n   */\n  handle(type, onAdd, onRemove) {\n    const addHandlers = this._addHandlers;\n    const removeHandlers = this._removeHandlers;\n    if (addHandlers[type] || removeHandlers[type]) {\n      throw new Error(`Extension type ${type} already has a handler`);\n    }\n    addHandlers[type] = onAdd;\n    removeHandlers[type] = onRemove;\n    const queue = this._queue;\n    if (queue[type]) {\n      queue[type]?.forEach((ext) => onAdd(ext));\n      delete queue[type];\n    }\n    return this;\n  },\n  /**\n   * Handle a type, but using a map by `name` property.\n   * @param type - Type of extension to handle.\n   * @param map - The object map of named extensions.\n   * @returns {extensions} For chaining.\n   */\n  handleByMap(type, map) {\n    return this.handle(\n      type,\n      (extension) => {\n        if (extension.name) {\n          map[extension.name] = extension.ref;\n        }\n      },\n      (extension) => {\n        if (extension.name) {\n          delete map[extension.name];\n        }\n      }\n    );\n  },\n  /**\n   * Handle a type, but using a list of extensions with a `name` property.\n   * @param type - Type of extension to handle.\n   * @param map - The array of named extensions.\n   * @param defaultPriority - Fallback priority if none is defined.\n   * @returns {extensions} For chaining.\n   */\n  handleByNamedList(type, map, defaultPriority = -1) {\n    return this.handle(\n      type,\n      (extension) => {\n        const index = map.findIndex((item) => item.name === extension.name);\n        if (index >= 0)\n          return;\n        map.push({ name: extension.name, value: extension.ref });\n        map.sort((a, b) => normalizeExtensionPriority(b.value, defaultPriority) - normalizeExtensionPriority(a.value, defaultPriority));\n      },\n      (extension) => {\n        const index = map.findIndex((item) => item.name === extension.name);\n        if (index !== -1) {\n          map.splice(index, 1);\n        }\n      }\n    );\n  },\n  /**\n   * Handle a type, but using a list of extensions.\n   * @param type - Type of extension to handle.\n   * @param list - The list of extensions.\n   * @param defaultPriority - The default priority to use if none is specified.\n   * @returns {extensions} For chaining.\n   */\n  handleByList(type, list, defaultPriority = -1) {\n    return this.handle(\n      type,\n      (extension) => {\n        if (list.includes(extension.ref)) {\n          return;\n        }\n        list.push(extension.ref);\n        list.sort((a, b) => normalizeExtensionPriority(b, defaultPriority) - normalizeExtensionPriority(a, defaultPriority));\n      },\n      (extension) => {\n        const index = list.indexOf(extension.ref);\n        if (index !== -1) {\n          list.splice(index, 1);\n        }\n      }\n    );\n  },\n  /**\n   * Mixin the source object into the target object.\n   * @param Target - The target object to mix into.\n   * @param sources - The source(s) object to mix from\n   */\n  mixin(Target, ...sources) {\n    for (const source of sources) {\n      Object.defineProperties(Target.prototype, Object.getOwnPropertyDescriptors(source));\n    }\n  }\n};\n\nexport { ExtensionType, extensions, normalizeExtensionPriority };\n//# sourceMappingURL=Extensions.mjs.map\n"],"names":["ExtensionType","ExtensionType2","normalizeExtension","ext","normalizeExtensionPriority","defaultPriority","extensions","extensions2","type","_a","_b","handlers","queue","onAdd","onRemove","addHandlers","removeHandlers","map","extension","item","a","b","index","list","Target","sources","source"],"mappings":"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","x_google_ignoreList":[0]}