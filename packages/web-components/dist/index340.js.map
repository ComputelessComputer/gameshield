{"version":3,"file":"index340.js","sources":["../../../node_modules/.pnpm/pixi.js@8.8.1/node_modules/pixi.js/lib/assets/cache/Cache.mjs"],"sourcesContent":["import { warn } from '../../utils/logging/warn.mjs';\nimport { convertToList } from '../utils/convertToList.mjs';\n\n\"use strict\";\nclass CacheClass {\n  constructor() {\n    this._parsers = [];\n    this._cache = /* @__PURE__ */ new Map();\n    this._cacheMap = /* @__PURE__ */ new Map();\n  }\n  /** Clear all entries. */\n  reset() {\n    this._cacheMap.clear();\n    this._cache.clear();\n  }\n  /**\n   * Check if the key exists\n   * @param key - The key to check\n   */\n  has(key) {\n    return this._cache.has(key);\n  }\n  /**\n   * Fetch entry by key\n   * @param key - The key of the entry to get\n   */\n  get(key) {\n    const result = this._cache.get(key);\n    if (!result) {\n      warn(`[Assets] Asset id ${key} was not found in the Cache`);\n    }\n    return result;\n  }\n  /**\n   * Set a value by key or keys name\n   * @param key - The key or keys to set\n   * @param value - The value to store in the cache or from which cacheable assets will be derived.\n   */\n  set(key, value) {\n    const keys = convertToList(key);\n    let cacheableAssets;\n    for (let i = 0; i < this.parsers.length; i++) {\n      const parser = this.parsers[i];\n      if (parser.test(value)) {\n        cacheableAssets = parser.getCacheableAssets(keys, value);\n        break;\n      }\n    }\n    const cacheableMap = new Map(Object.entries(cacheableAssets || {}));\n    if (!cacheableAssets) {\n      keys.forEach((key2) => {\n        cacheableMap.set(key2, value);\n      });\n    }\n    const cacheKeys = [...cacheableMap.keys()];\n    const cachedAssets = {\n      cacheKeys,\n      keys\n    };\n    keys.forEach((key2) => {\n      this._cacheMap.set(key2, cachedAssets);\n    });\n    cacheKeys.forEach((key2) => {\n      const val = cacheableAssets ? cacheableAssets[key2] : value;\n      if (this._cache.has(key2) && this._cache.get(key2) !== val) {\n        warn(\"[Cache] already has key:\", key2);\n      }\n      this._cache.set(key2, cacheableMap.get(key2));\n    });\n  }\n  /**\n   * Remove entry by key\n   *\n   * This function will also remove any associated alias from the cache also.\n   * @param key - The key of the entry to remove\n   */\n  remove(key) {\n    if (!this._cacheMap.has(key)) {\n      warn(`[Assets] Asset id ${key} was not found in the Cache`);\n      return;\n    }\n    const cacheMap = this._cacheMap.get(key);\n    const cacheKeys = cacheMap.cacheKeys;\n    cacheKeys.forEach((key2) => {\n      this._cache.delete(key2);\n    });\n    cacheMap.keys.forEach((key2) => {\n      this._cacheMap.delete(key2);\n    });\n  }\n  /** All loader parsers registered */\n  get parsers() {\n    return this._parsers;\n  }\n}\nconst Cache = new CacheClass();\n\nexport { Cache };\n//# sourceMappingURL=Cache.mjs.map\n"],"names":["CacheClass","key","result","warn","value","keys","convertToList","cacheableAssets","i","parser","cacheableMap","key2","cacheKeys","cachedAssets","val","cacheMap","Cache"],"mappings":";;AAIA,MAAMA,EAAW;AAAA,EACf,cAAc;AACZ,SAAK,WAAW,IAChB,KAAK,SAAyB,oBAAI,OAClC,KAAK,YAA4B,oBAAI;EACtC;AAAA;AAAA,EAED,QAAQ;AACN,SAAK,UAAU,SACf,KAAK,OAAO;EACb;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,IAAIC,GAAK;AACP,WAAO,KAAK,OAAO,IAAIA,CAAG;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,IAAIA,GAAK;AACP,UAAMC,IAAS,KAAK,OAAO,IAAID,CAAG;AAClC,WAAKC,KACHC,EAAK,qBAAqBF,CAAG,6BAA6B,GAErDC;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,IAAID,GAAKG,GAAO;AACd,UAAMC,IAAOC,EAAcL,CAAG;AAC9B,QAAIM;AACJ,aAASC,IAAI,GAAGA,IAAI,KAAK,QAAQ,QAAQA,KAAK;AAC5C,YAAMC,IAAS,KAAK,QAAQD,CAAC;AAC7B,UAAIC,EAAO,KAAKL,CAAK,GAAG;AACtB,QAAAG,IAAkBE,EAAO,mBAAmBJ,GAAMD,CAAK;AACvD;AAAA,MACD;AAAA,IACF;AACD,UAAMM,IAAe,IAAI,IAAI,OAAO,QAAQH,KAAmB,CAAE,CAAA,CAAC;AAClE,IAAKA,KACHF,EAAK,QAAQ,CAACM,MAAS;AACrB,MAAAD,EAAa,IAAIC,GAAMP,CAAK;AAAA,IACpC,CAAO;AAEH,UAAMQ,IAAY,CAAC,GAAGF,EAAa,KAAM,CAAA,GACnCG,IAAe;AAAA,MACnB,WAAAD;AAAA,MACA,MAAAP;AAAA,IACN;AACI,IAAAA,EAAK,QAAQ,CAACM,MAAS;AACrB,WAAK,UAAU,IAAIA,GAAME,CAAY;AAAA,IAC3C,CAAK,GACDD,EAAU,QAAQ,CAACD,MAAS;AAC1B,YAAMG,IAAMP,IAAkBA,EAAgBI,CAAI,IAAIP;AACtD,MAAI,KAAK,OAAO,IAAIO,CAAI,KAAK,KAAK,OAAO,IAAIA,CAAI,MAAMG,KACrDX,EAAK,4BAA4BQ,CAAI,GAEvC,KAAK,OAAO,IAAIA,GAAMD,EAAa,IAAIC,CAAI,CAAC;AAAA,IAClD,CAAK;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,OAAOV,GAAK;AACV,QAAI,CAAC,KAAK,UAAU,IAAIA,CAAG,GAAG;AAC5B,MAAAE,EAAK,qBAAqBF,CAAG,6BAA6B;AAC1D;AAAA,IACD;AACD,UAAMc,IAAW,KAAK,UAAU,IAAId,CAAG;AAEvC,IADkBc,EAAS,UACjB,QAAQ,CAACJ,MAAS;AAC1B,WAAK,OAAO,OAAOA,CAAI;AAAA,IAC7B,CAAK,GACDI,EAAS,KAAK,QAAQ,CAACJ,MAAS;AAC9B,WAAK,UAAU,OAAOA,CAAI;AAAA,IAChC,CAAK;AAAA,EACF;AAAA;AAAA,EAED,IAAI,UAAU;AACZ,WAAO,KAAK;AAAA,EACb;AACH;AACK,MAACK,IAAQ,IAAIhB,EAAU;","x_google_ignoreList":[0]}