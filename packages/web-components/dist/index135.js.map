{"version":3,"file":"index135.js","sources":["../../../node_modules/.pnpm/@pixi+filter-blur@7.4.3_@pixi+core@7.4.3/node_modules/@pixi/filter-blur/lib/BlurFilter.mjs"],"sourcesContent":["import { Filter, CLEAR_MODES } from \"@pixi/core\";\nimport { BlurFilterPass } from \"./BlurFilterPass.mjs\";\nclass BlurFilter extends Filter {\n  /**\n   * @param strength - The strength of the blur filter.\n   * @param quality - The quality of the blur filter.\n   * @param {number|null} [resolution=PIXI.Filter.defaultResolution] - The resolution of the blur filter.\n   * @param kernelSize - The kernelSize of the blur filter.Options: 5, 7, 9, 11, 13, 15.\n   */\n  constructor(strength = 8, quality = 4, resolution = Filter.defaultResolution, kernelSize = 5) {\n    super(), this._repeatEdgePixels = !1, this.blurXFilter = new BlurFilterPass(!0, strength, quality, resolution, kernelSize), this.blurYFilter = new BlurFilterPass(!1, strength, quality, resolution, kernelSize), this.resolution = resolution, this.quality = quality, this.blur = strength, this.repeatEdgePixels = !1;\n  }\n  /**\n   * Applies the filter.\n   * @param filterManager - The manager.\n   * @param input - The input target.\n   * @param output - The output target.\n   * @param clearMode - How to clear\n   */\n  apply(filterManager, input, output, clearMode) {\n    const xStrength = Math.abs(this.blurXFilter.strength), yStrength = Math.abs(this.blurYFilter.strength);\n    if (xStrength && yStrength) {\n      const renderTarget = filterManager.getFilterTexture();\n      this.blurXFilter.apply(filterManager, input, renderTarget, CLEAR_MODES.CLEAR), this.blurYFilter.apply(filterManager, renderTarget, output, clearMode), filterManager.returnFilterTexture(renderTarget);\n    } else\n      yStrength ? this.blurYFilter.apply(filterManager, input, output, clearMode) : this.blurXFilter.apply(filterManager, input, output, clearMode);\n  }\n  updatePadding() {\n    this._repeatEdgePixels ? this.padding = 0 : this.padding = Math.max(Math.abs(this.blurXFilter.strength), Math.abs(this.blurYFilter.strength)) * 2;\n  }\n  /**\n   * Sets the strength of both the blurX and blurY properties simultaneously\n   * @default 2\n   */\n  get blur() {\n    return this.blurXFilter.blur;\n  }\n  set blur(value) {\n    this.blurXFilter.blur = this.blurYFilter.blur = value, this.updatePadding();\n  }\n  /**\n   * Sets the number of passes for blur. More passes means higher quality bluring.\n   * @default 1\n   */\n  get quality() {\n    return this.blurXFilter.quality;\n  }\n  set quality(value) {\n    this.blurXFilter.quality = this.blurYFilter.quality = value;\n  }\n  /**\n   * Sets the strength of the blurX property\n   * @default 2\n   */\n  get blurX() {\n    return this.blurXFilter.blur;\n  }\n  set blurX(value) {\n    this.blurXFilter.blur = value, this.updatePadding();\n  }\n  /**\n   * Sets the strength of the blurY property\n   * @default 2\n   */\n  get blurY() {\n    return this.blurYFilter.blur;\n  }\n  set blurY(value) {\n    this.blurYFilter.blur = value, this.updatePadding();\n  }\n  /**\n   * Sets the blendmode of the filter\n   * @default PIXI.BLEND_MODES.NORMAL\n   */\n  get blendMode() {\n    return this.blurYFilter.blendMode;\n  }\n  set blendMode(value) {\n    this.blurYFilter.blendMode = value;\n  }\n  /**\n   * If set to true the edge of the target will be clamped\n   * @default false\n   */\n  get repeatEdgePixels() {\n    return this._repeatEdgePixels;\n  }\n  set repeatEdgePixels(value) {\n    this._repeatEdgePixels = value, this.updatePadding();\n  }\n}\nexport {\n  BlurFilter\n};\n//# sourceMappingURL=BlurFilter.mjs.map\n"],"names":["BlurFilter","Filter","strength","quality","resolution","kernelSize","BlurFilterPass","filterManager","input","output","clearMode","xStrength","yStrength","renderTarget","CLEAR_MODES","value"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,MAAMA,WAAmBC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO9B,YAAYC,IAAW,GAAGC,IAAU,GAAGC,IAAaH,EAAO,mBAAmBI,IAAa,GAAG;AAC5F,UAAK,GAAI,KAAK,oBAAoB,IAAI,KAAK,cAAc,IAAIC,EAAe,IAAIJ,GAAUC,GAASC,GAAYC,CAAU,GAAG,KAAK,cAAc,IAAIC,EAAe,IAAIJ,GAAUC,GAASC,GAAYC,CAAU,GAAG,KAAK,aAAaD,GAAY,KAAK,UAAUD,GAAS,KAAK,OAAOD,GAAU,KAAK,mBAAmB;AAAA,EACvT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQD,MAAMK,GAAeC,GAAOC,GAAQC,GAAW;AAC7C,UAAMC,IAAY,KAAK,IAAI,KAAK,YAAY,QAAQ,GAAGC,IAAY,KAAK,IAAI,KAAK,YAAY,QAAQ;AACrG,QAAID,KAAaC,GAAW;AAC1B,YAAMC,IAAeN,EAAc;AACnC,WAAK,YAAY,MAAMA,GAAeC,GAAOK,GAAcC,EAAY,KAAK,GAAG,KAAK,YAAY,MAAMP,GAAeM,GAAcJ,GAAQC,CAAS,GAAGH,EAAc,oBAAoBM,CAAY;AAAA,IACtM;AACC,MAAAD,IAAY,KAAK,YAAY,MAAML,GAAeC,GAAOC,GAAQC,CAAS,IAAI,KAAK,YAAY,MAAMH,GAAeC,GAAOC,GAAQC,CAAS;AAAA,EAC/I;AAAA,EACD,gBAAgB;AACd,SAAK,oBAAoB,KAAK,UAAU,IAAI,KAAK,UAAU,KAAK,IAAI,KAAK,IAAI,KAAK,YAAY,QAAQ,GAAG,KAAK,IAAI,KAAK,YAAY,QAAQ,CAAC,IAAI;AAAA,EACjJ;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,IAAI,OAAO;AACT,WAAO,KAAK,YAAY;AAAA,EACzB;AAAA,EACD,IAAI,KAAKK,GAAO;AACd,SAAK,YAAY,OAAO,KAAK,YAAY,OAAOA,GAAO,KAAK;EAC7D;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,IAAI,UAAU;AACZ,WAAO,KAAK,YAAY;AAAA,EACzB;AAAA,EACD,IAAI,QAAQA,GAAO;AACjB,SAAK,YAAY,UAAU,KAAK,YAAY,UAAUA;AAAA,EACvD;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,IAAI,QAAQ;AACV,WAAO,KAAK,YAAY;AAAA,EACzB;AAAA,EACD,IAAI,MAAMA,GAAO;AACf,SAAK,YAAY,OAAOA,GAAO,KAAK,cAAa;AAAA,EAClD;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,IAAI,QAAQ;AACV,WAAO,KAAK,YAAY;AAAA,EACzB;AAAA,EACD,IAAI,MAAMA,GAAO;AACf,SAAK,YAAY,OAAOA,GAAO,KAAK,cAAa;AAAA,EAClD;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,IAAI,YAAY;AACd,WAAO,KAAK,YAAY;AAAA,EACzB;AAAA,EACD,IAAI,UAAUA,GAAO;AACnB,SAAK,YAAY,YAAYA;AAAA,EAC9B;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,IAAI,mBAAmB;AACrB,WAAO,KAAK;AAAA,EACb;AAAA,EACD,IAAI,iBAAiBA,GAAO;AAC1B,SAAK,oBAAoBA,GAAO,KAAK,cAAa;AAAA,EACnD;AACH;","x_google_ignoreList":[0]}