{"version":3,"file":"index13.js","sources":["../src/games/dino-run-game.ts"],"sourcesContent":["import { Game, GameOptions } from '../types';\nimport * as PIXI from 'pixi.js';\n\ninterface Obstacle {\n  graphics: PIXI.Graphics;\n  x: number;\n  width: number;\n  height: number;\n}\n\n/**\n * DinoRunGame\n * \n * A simple Dino Run game implementation for GameShield CAPTCHA.\n */\nexport class DinoRunGame implements Game {\n  private app: PIXI.Application | null = null;\n  private dino: PIXI.Graphics | null = null;\n  private ground: PIXI.Graphics | null = null;\n  private obstacles: Obstacle[] = [];\n  private scoreText: PIXI.Text | null = null;\n  private instructionText: PIXI.Text | null = null;\n  \n  private dinoY = 0;\n  private dinoVelocity = 0;\n  private isJumping = false;\n  private score = 0;\n  private targetScore = 10; // Score needed to pass the CAPTCHA\n  private gameStarted = false;\n  private gameEnded = false;\n  private obstacleTimer = 0;\n  private gravity = 0.5;\n  private gameSpeed = 5;\n  \n  private readonly options: GameOptions;\n  \n  constructor(options: GameOptions) {\n    this.options = options;\n    \n    // Adjust difficulty\n    switch (options.difficulty) {\n      case 'easy':\n        this.targetScore = 5;\n        this.gameSpeed = 4;\n        break;\n      case 'medium':\n        this.targetScore = 10;\n        this.gameSpeed = 5;\n        break;\n      case 'hard':\n        this.targetScore = 15;\n        this.gameSpeed = 6;\n        break;\n    }\n  }\n  \n  /**\n   * Mount the game to a container element\n   */\n  public async mount(container: HTMLElement): Promise<void> {\n    // Create PIXI application\n    this.app = new PIXI.Application({\n      width: this.options.width,\n      height: this.options.height,\n      backgroundColor: 0x1a1a1a,\n      resolution: window.devicePixelRatio || 1,\n      antialias: true\n    });\n    \n    // Add the canvas to the container\n    container.appendChild(this.app.view as unknown as HTMLCanvasElement);\n    \n    // Create game elements\n    this.createGameElements();\n    \n    // Add event listeners\n    window.addEventListener('keydown', this.handleKeyDown.bind(this));\n    window.addEventListener('mousedown', this.handleMouseDown.bind(this));\n    window.addEventListener('touchstart', this.handleTouchStart.bind(this));\n    \n    // Start game loop\n    this.app.ticker.add(this.gameLoop.bind(this));\n  }\n  \n  /**\n   * Destroy the game and clean up resources\n   */\n  public destroy(): void {\n    if (this.app) {\n      // Remove event listeners\n      window.removeEventListener('keydown', this.handleKeyDown.bind(this));\n      window.removeEventListener('mousedown', this.handleMouseDown.bind(this));\n      window.removeEventListener('touchstart', this.handleTouchStart.bind(this));\n      \n      // Destroy PIXI application\n      this.app.destroy(true, { children: true, texture: true, baseTexture: true });\n      this.app = null;\n    }\n    \n    // Reset game state\n    this.dino = null;\n    this.ground = null;\n    this.obstacles = [];\n    this.scoreText = null;\n    this.instructionText = null;\n    this.gameStarted = false;\n    this.gameEnded = false;\n    this.score = 0;\n  }\n  \n  /**\n   * Create game elements\n   */\n  private createGameElements(): void {\n    if (!this.app) return;\n    \n    // Create ground\n    this.ground = new PIXI.Graphics();\n    this.ground.beginFill(0x333333);\n    this.ground.drawRect(0, 0, this.app.screen.width, 2);\n    this.ground.endFill();\n    this.ground.y = this.app.screen.height - 50;\n    this.app.stage.addChild(this.ground);\n    \n    // Create dino\n    this.dino = new PIXI.Graphics();\n    this.dino.beginFill(0x00ff00);\n    this.dino.drawRect(0, 0, 30, 50);\n    this.dino.endFill();\n    this.dino.x = 50;\n    this.dino.y = this.ground.y - this.dino.height;\n    this.dinoY = this.dino.y;\n    this.app.stage.addChild(this.dino);\n    \n    // Create score text\n    this.scoreText = new PIXI.Text(`Score: ${this.score}/${this.targetScore}`, {\n      fontFamily: 'Arial',\n      fontSize: 16,\n      fill: 0xffffff\n    });\n    this.scoreText.x = 10;\n    this.scoreText.y = 10;\n    this.app.stage.addChild(this.scoreText);\n    \n    // Create instruction text\n    this.instructionText = new PIXI.Text('Press SPACE, click, or tap to jump', {\n      fontFamily: 'Arial',\n      fontSize: 20,\n      fill: 0xffffff\n    });\n    this.instructionText.x = this.app.screen.width / 2 - this.instructionText.width / 2;\n    this.instructionText.y = this.app.screen.height / 2 - 50;\n    this.app.stage.addChild(this.instructionText);\n  }\n  \n  /**\n   * Create a new obstacle\n   */\n  private createObstacle(): void {\n    if (!this.app || !this.ground) return;\n    \n    // Random height between 20 and 40\n    const height = Math.random() * 20 + 20;\n    const width = 20;\n    \n    const obstacle = new PIXI.Graphics();\n    obstacle.beginFill(0xff0000);\n    obstacle.drawRect(0, 0, width, height);\n    obstacle.endFill();\n    obstacle.x = this.app.screen.width;\n    obstacle.y = this.ground.y - height;\n    \n    this.app.stage.addChild(obstacle);\n    \n    this.obstacles.push({\n      graphics: obstacle,\n      x: obstacle.x,\n      width,\n      height\n    });\n  }\n  \n  /**\n   * Handle keyboard input\n   */\n  private handleKeyDown(event: KeyboardEvent): void {\n    if (event.code === 'Space') {\n      if (!this.gameStarted && !this.gameEnded) {\n        this.startGame();\n      } else if (this.gameStarted && !this.isJumping) {\n        this.jump();\n      }\n    }\n  }\n  \n  /**\n   * Handle mouse input\n   */\n  private handleMouseDown(): void {\n    if (!this.gameStarted && !this.gameEnded) {\n      this.startGame();\n    } else if (this.gameStarted && !this.isJumping) {\n      this.jump();\n    }\n  }\n  \n  /**\n   * Handle touch input\n   */\n  private handleTouchStart(): void {\n    if (!this.gameStarted && !this.gameEnded) {\n      this.startGame();\n    } else if (this.gameStarted && !this.isJumping) {\n      this.jump();\n    }\n  }\n  \n  /**\n   * Make the dino jump\n   */\n  private jump(): void {\n    if (!this.dino || this.isJumping) return;\n    \n    this.isJumping = true;\n    this.dinoVelocity = -12;\n  }\n  \n  /**\n   * Start the game\n   */\n  private startGame(): void {\n    if (!this.app || !this.instructionText) return;\n    \n    this.gameStarted = true;\n    this.app.stage.removeChild(this.instructionText);\n    this.instructionText = null;\n  }\n  \n  /**\n   * End the game\n   */\n  private endGame(success: boolean): void {\n    if (!this.app || this.gameEnded) return;\n    \n    this.gameEnded = true;\n    \n    // Create result text\n    const resultText = new PIXI.Text(\n      success ? 'CAPTCHA Passed!' : 'CAPTCHA Failed!',\n      {\n        fontFamily: 'Arial',\n        fontSize: 24,\n        fill: success ? 0x00ff00 : 0xff0000,\n        fontWeight: 'bold'\n      }\n    );\n    \n    resultText.x = this.app.screen.width / 2 - resultText.width / 2;\n    resultText.y = this.app.screen.height / 2 - resultText.height / 2;\n    this.app.stage.addChild(resultText);\n    \n    // Notify completion\n    setTimeout(() => {\n      this.options.onComplete({\n        success,\n        score: this.score\n      });\n    }, 1500);\n  }\n  \n  /**\n   * Game loop\n   */\n  private gameLoop(delta: number): void {\n    if (!this.app || !this.dino || !this.ground || !this.scoreText) return;\n    \n    if (!this.gameStarted || this.gameEnded) return;\n    \n    // Apply gravity to dino\n    this.dinoVelocity += this.gravity;\n    this.dinoY += this.dinoVelocity;\n    \n    // Keep dino above ground\n    if (this.dinoY >= this.ground.y - this.dino.height) {\n      this.dinoY = this.ground.y - this.dino.height;\n      this.dinoVelocity = 0;\n      this.isJumping = false;\n    }\n    \n    // Update dino position\n    this.dino.y = this.dinoY;\n    \n    // Create obstacles\n    this.obstacleTimer += delta;\n    if (this.obstacleTimer > 60) {\n      this.obstacleTimer = 0;\n      if (Math.random() < 0.3) {\n        this.createObstacle();\n      }\n    }\n    \n    // Move obstacles\n    for (let i = 0; i < this.obstacles.length; i++) {\n      const obstacle = this.obstacles[i];\n      obstacle.x -= this.gameSpeed * delta;\n      obstacle.graphics.x = obstacle.x;\n      \n      // Check for collision\n      if (\n        this.dino.x < obstacle.x + obstacle.width &&\n        this.dino.x + this.dino.width > obstacle.x &&\n        this.dino.y < obstacle.graphics.y + obstacle.height &&\n        this.dino.y + this.dino.height > obstacle.graphics.y\n      ) {\n        this.endGame(false);\n        return;\n      }\n      \n      // Remove obstacles that are off-screen\n      if (obstacle.x + obstacle.width < 0) {\n        this.app.stage.removeChild(obstacle.graphics);\n        this.obstacles.splice(i, 1);\n        i--;\n        \n        // Increase score\n        this.score++;\n        this.scoreText.text = `Score: ${this.score}/${this.targetScore}`;\n        \n        // Increase game speed slightly\n        this.gameSpeed += 0.05;\n        \n        // Check if player has won\n        if (this.score >= this.targetScore) {\n          this.endGame(true);\n          return;\n        }\n      }\n    }\n  }\n}\n"],"names":["DinoRunGame","options","container","PIXI.Application","PIXI.Graphics","PIXI.Text","height","width","obstacle","event","success","resultText","delta","i"],"mappings":"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"}