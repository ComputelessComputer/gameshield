{"version":3,"file":"index34.js","sources":["../../../node_modules/.pnpm/@pixi+math@7.4.3/node_modules/@pixi/math/lib/Transform.mjs"],"sourcesContent":["import { Matrix } from \"./Matrix.mjs\";\nimport { ObservablePoint } from \"./ObservablePoint.mjs\";\nconst _Transform = class {\n  constructor() {\n    this.worldTransform = new Matrix(), this.localTransform = new Matrix(), this.position = new ObservablePoint(this.onChange, this, 0, 0), this.scale = new ObservablePoint(this.onChange, this, 1, 1), this.pivot = new ObservablePoint(this.onChange, this, 0, 0), this.skew = new ObservablePoint(this.updateSkew, this, 0, 0), this._rotation = 0, this._cx = 1, this._sx = 0, this._cy = 0, this._sy = 1, this._localID = 0, this._currentLocalID = 0, this._worldID = 0, this._parentID = 0;\n  }\n  /** Called when a value changes. */\n  onChange() {\n    this._localID++;\n  }\n  /** Called when the skew or the rotation changes. */\n  updateSkew() {\n    this._cx = Math.cos(this._rotation + this.skew.y), this._sx = Math.sin(this._rotation + this.skew.y), this._cy = -Math.sin(this._rotation - this.skew.x), this._sy = Math.cos(this._rotation - this.skew.x), this._localID++;\n  }\n  /** Updates the local transformation matrix. */\n  updateLocalTransform() {\n    const lt = this.localTransform;\n    this._localID !== this._currentLocalID && (lt.a = this._cx * this.scale.x, lt.b = this._sx * this.scale.x, lt.c = this._cy * this.scale.y, lt.d = this._sy * this.scale.y, lt.tx = this.position.x - (this.pivot.x * lt.a + this.pivot.y * lt.c), lt.ty = this.position.y - (this.pivot.x * lt.b + this.pivot.y * lt.d), this._currentLocalID = this._localID, this._parentID = -1);\n  }\n  /**\n   * Updates the local and the world transformation matrices.\n   * @param parentTransform - The parent transform\n   */\n  updateTransform(parentTransform) {\n    const lt = this.localTransform;\n    if (this._localID !== this._currentLocalID && (lt.a = this._cx * this.scale.x, lt.b = this._sx * this.scale.x, lt.c = this._cy * this.scale.y, lt.d = this._sy * this.scale.y, lt.tx = this.position.x - (this.pivot.x * lt.a + this.pivot.y * lt.c), lt.ty = this.position.y - (this.pivot.x * lt.b + this.pivot.y * lt.d), this._currentLocalID = this._localID, this._parentID = -1), this._parentID !== parentTransform._worldID) {\n      const pt = parentTransform.worldTransform, wt = this.worldTransform;\n      wt.a = lt.a * pt.a + lt.b * pt.c, wt.b = lt.a * pt.b + lt.b * pt.d, wt.c = lt.c * pt.a + lt.d * pt.c, wt.d = lt.c * pt.b + lt.d * pt.d, wt.tx = lt.tx * pt.a + lt.ty * pt.c + pt.tx, wt.ty = lt.tx * pt.b + lt.ty * pt.d + pt.ty, this._parentID = parentTransform._worldID, this._worldID++;\n    }\n  }\n  /**\n   * Decomposes a matrix and sets the transforms properties based on it.\n   * @param matrix - The matrix to decompose\n   */\n  setFromMatrix(matrix) {\n    matrix.decompose(this), this._localID++;\n  }\n  /** The rotation of the object in radians. */\n  get rotation() {\n    return this._rotation;\n  }\n  set rotation(value) {\n    this._rotation !== value && (this._rotation = value, this.updateSkew());\n  }\n};\n_Transform.IDENTITY = new _Transform();\nlet Transform = _Transform;\nTransform.prototype.toString = function() {\n  return `[@pixi/math:Transform position=(${this.position.x}, ${this.position.y}) rotation=${this.rotation} scale=(${this.scale.x}, ${this.scale.y}) skew=(${this.skew.x}, ${this.skew.y}) ]`;\n};\nexport {\n  Transform\n};\n//# sourceMappingURL=Transform.mjs.map\n"],"names":["_Transform","Matrix","ObservablePoint","lt","parentTransform","pt","wt","matrix","value","Transform"],"mappings":"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","x_google_ignoreList":[0]}