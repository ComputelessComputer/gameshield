{"version":3,"file":"index19.js","sources":["../../../node_modules/.pnpm/@pixi+app@7.4.3_@pixi+core@7.4.3_@pixi+display@7.4.3_@pixi+core@7.4.3_/node_modules/@pixi/app/lib/Application.mjs"],"sourcesContent":["import { autoDetectRenderer, extensions, ExtensionType } from \"@pixi/core\";\nimport { Container } from \"@pixi/display\";\nconst _Application = class _Application2 {\n  /**\n   * @param options - The optional application and renderer parameters.\n   */\n  constructor(options) {\n    this.stage = new Container(), options = Object.assign({\n      forceCanvas: !1\n    }, options), this.renderer = autoDetectRenderer(options), _Application2._plugins.forEach((plugin) => {\n      plugin.init.call(this, options);\n    });\n  }\n  /** Render the current stage. */\n  render() {\n    this.renderer.render(this.stage);\n  }\n  /**\n   * Reference to the renderer's canvas element.\n   * @member {PIXI.ICanvas}\n   * @readonly\n   */\n  get view() {\n    return this.renderer?.view;\n  }\n  /**\n   * Reference to the renderer's screen rectangle. Its safe to use as `filterArea` or `hitArea` for the whole screen.\n   * @member {PIXI.Rectangle}\n   * @readonly\n   */\n  get screen() {\n    return this.renderer?.screen;\n  }\n  /**\n   * Destroy and don't use after this.\n   * @param {boolean} [removeView=false] - Automatically remove canvas from DOM.\n   * @param {object|boolean} [stageOptions] - Options parameter. A boolean will act as if all options\n   *  have been set to that value\n   * @param {boolean} [stageOptions.children=false] - if set to true, all the children will have their destroy\n   *  method called as well. 'stageOptions' will be passed on to those calls.\n   * @param {boolean} [stageOptions.texture=false] - Only used for child Sprites if stageOptions.children is set\n   *  to true. Should it destroy the texture of the child sprite\n   * @param {boolean} [stageOptions.baseTexture=false] - Only used for child Sprites if stageOptions.children is set\n   *  to true. Should it destroy the base texture of the child sprite\n   */\n  destroy(removeView, stageOptions) {\n    const plugins = _Application2._plugins.slice(0);\n    plugins.reverse(), plugins.forEach((plugin) => {\n      plugin.destroy.call(this);\n    }), this.stage.destroy(stageOptions), this.stage = null, this.renderer.destroy(removeView), this.renderer = null;\n  }\n};\n_Application._plugins = [];\nlet Application = _Application;\nextensions.handleByList(ExtensionType.Application, Application._plugins);\nexport {\n  Application\n};\n//# sourceMappingURL=Application.mjs.map\n"],"names":["_Application","_Application2","options","Container","autoDetectRenderer","plugin","_a","removeView","stageOptions","plugins","Application","extensions","ExtensionType"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,MAAMA,IAAe,MAAMC,EAAc;AAAA;AAAA;AAAA;AAAA,EAIvC,YAAYC,GAAS;AACnB,SAAK,QAAQ,IAAIC,EAAW,GAAED,IAAU,OAAO,OAAO;AAAA,MACpD,aAAa;AAAA,IACd,GAAEA,CAAO,GAAG,KAAK,WAAWE,EAAmBF,CAAO,GAAGD,EAAc,SAAS,QAAQ,CAACI,MAAW;AACnG,MAAAA,EAAO,KAAK,KAAK,MAAMH,CAAO;AAAA,IACpC,CAAK;AAAA,EACF;AAAA;AAAA,EAED,SAAS;AACP,SAAK,SAAS,OAAO,KAAK,KAAK;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,IAAI,OAAO;;AACT,YAAOI,IAAA,KAAK,aAAL,gBAAAA,EAAe;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,IAAI,SAAS;;AACX,YAAOA,IAAA,KAAK,aAAL,gBAAAA,EAAe;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaD,QAAQC,GAAYC,GAAc;AAChC,UAAMC,IAAUR,EAAc,SAAS,MAAM,CAAC;AAC9C,IAAAQ,EAAQ,QAAS,GAAEA,EAAQ,QAAQ,CAACJ,MAAW;AAC7C,MAAAA,EAAO,QAAQ,KAAK,IAAI;AAAA,IAC9B,CAAK,GAAG,KAAK,MAAM,QAAQG,CAAY,GAAG,KAAK,QAAQ,MAAM,KAAK,SAAS,QAAQD,CAAU,GAAG,KAAK,WAAW;AAAA,EAC7G;AACH;AACAP,EAAa,WAAW,CAAA;AACrB,IAACU,IAAcV;AAClBW,EAAW,aAAaC,EAAc,aAAaF,EAAY,QAAQ;","x_google_ignoreList":[0]}