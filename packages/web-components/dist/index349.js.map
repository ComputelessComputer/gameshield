{"version":3,"file":"index349.js","sources":["../../../node_modules/.pnpm/pixi.js@8.8.1/node_modules/pixi.js/lib/assets/loader/parsers/loadJson.mjs"],"sourcesContent":["import { DOMAdapter } from '../../../environment/adapter.mjs';\nimport { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { checkDataUrl } from '../../utils/checkDataUrl.mjs';\nimport { checkExtension } from '../../utils/checkExtension.mjs';\nimport { LoaderParserPriority } from './LoaderParser.mjs';\n\n\"use strict\";\nconst validJSONExtension = \".json\";\nconst validJSONMIME = \"application/json\";\nconst loadJson = {\n  extension: {\n    type: ExtensionType.LoadParser,\n    priority: LoaderParserPriority.Low\n  },\n  name: \"loadJson\",\n  test(url) {\n    return checkDataUrl(url, validJSONMIME) || checkExtension(url, validJSONExtension);\n  },\n  async load(url) {\n    const response = await DOMAdapter.get().fetch(url);\n    const json = await response.json();\n    return json;\n  }\n};\n\nexport { loadJson };\n//# sourceMappingURL=loadJson.mjs.map\n"],"names":["validJSONExtension","validJSONMIME","loadJson","ExtensionType","LoaderParserPriority","url","checkDataUrl","checkExtension","DOMAdapter"],"mappings":";;;;;AAOA,MAAMA,IAAqB,SACrBC,IAAgB,oBAChBC,IAAW;AAAA,EACf,WAAW;AAAA,IACT,MAAMC,EAAc;AAAA,IACpB,UAAUC,EAAqB;AAAA,EAChC;AAAA,EACD,MAAM;AAAA,EACN,KAAKC,GAAK;AACR,WAAOC,EAAaD,GAAKJ,CAAa,KAAKM,EAAeF,GAAKL,CAAkB;AAAA,EAClF;AAAA,EACD,MAAM,KAAKK,GAAK;AAGd,WADa,OADI,MAAMG,EAAW,IAAG,EAAG,MAAMH,CAAG,GACrB;EAE7B;AACH;","x_google_ignoreList":[0]}