{"version":3,"file":"index23.js","sources":["../../../node_modules/.pnpm/@pixi+core@7.4.3/node_modules/@pixi/core/lib/settings.mjs"],"sourcesContent":["import { ENV } from \"@pixi/constants\";\nimport { settings } from \"@pixi/settings\";\nimport { deprecation } from \"@pixi/utils\";\nimport { BatchRenderer } from \"./batch/BatchRenderer.mjs\";\nimport { Filter } from \"./filters/Filter.mjs\";\nimport { Program } from \"./shader/Program.mjs\";\nimport \"./systems.mjs\";\nimport { BaseTexture } from \"./textures/BaseTexture.mjs\";\nimport { ContextSystem } from \"./context/ContextSystem.mjs\";\nimport { BackgroundSystem } from \"./background/BackgroundSystem.mjs\";\nimport { ViewSystem } from \"./view/ViewSystem.mjs\";\nimport { StartupSystem } from \"./startup/StartupSystem.mjs\";\nimport { TextureGCSystem } from \"./textures/TextureGCSystem.mjs\";\nsettings.PREFER_ENV = ENV.WEBGL2;\nsettings.STRICT_TEXTURE_CACHE = !1;\nsettings.RENDER_OPTIONS = {\n  ...ContextSystem.defaultOptions,\n  ...BackgroundSystem.defaultOptions,\n  ...ViewSystem.defaultOptions,\n  ...StartupSystem.defaultOptions\n};\nObject.defineProperties(settings, {\n  /**\n   * @static\n   * @name WRAP_MODE\n   * @memberof PIXI.settings\n   * @type {PIXI.WRAP_MODES}\n   * @deprecated since 7.1.0\n   * @see PIXI.BaseTexture.defaultOptions.wrapMode\n   */\n  WRAP_MODE: {\n    get() {\n      return BaseTexture.defaultOptions.wrapMode;\n    },\n    set(value) {\n      deprecation(\"7.1.0\", \"settings.WRAP_MODE is deprecated, use BaseTexture.defaultOptions.wrapMode\"), BaseTexture.defaultOptions.wrapMode = value;\n    }\n  },\n  /**\n   * @static\n   * @name SCALE_MODE\n   * @memberof PIXI.settings\n   * @type {PIXI.SCALE_MODES}\n   * @deprecated since 7.1.0\n   * @see PIXI.BaseTexture.defaultOptions.scaleMode\n   */\n  SCALE_MODE: {\n    get() {\n      return BaseTexture.defaultOptions.scaleMode;\n    },\n    set(value) {\n      deprecation(\"7.1.0\", \"settings.SCALE_MODE is deprecated, use BaseTexture.defaultOptions.scaleMode\"), BaseTexture.defaultOptions.scaleMode = value;\n    }\n  },\n  /**\n   * @static\n   * @name MIPMAP_TEXTURES\n   * @memberof PIXI.settings\n   * @type {PIXI.MIPMAP_MODES}\n   * @deprecated since 7.1.0\n   * @see PIXI.BaseTexture.defaultOptions.mipmap\n   */\n  MIPMAP_TEXTURES: {\n    get() {\n      return BaseTexture.defaultOptions.mipmap;\n    },\n    set(value) {\n      deprecation(\"7.1.0\", \"settings.MIPMAP_TEXTURES is deprecated, use BaseTexture.defaultOptions.mipmap\"), BaseTexture.defaultOptions.mipmap = value;\n    }\n    // MIPMAP_MODES.POW2,\n  },\n  /**\n   * @static\n   * @name ANISOTROPIC_LEVEL\n   * @memberof PIXI.settings\n   * @type {number}\n   * @deprecated since 7.1.0\n   * @see PIXI.BaseTexture.defaultOptions.anisotropicLevel\n   */\n  ANISOTROPIC_LEVEL: {\n    get() {\n      return BaseTexture.defaultOptions.anisotropicLevel;\n    },\n    set(value) {\n      deprecation(\n        \"7.1.0\",\n        \"settings.ANISOTROPIC_LEVEL is deprecated, use BaseTexture.defaultOptions.anisotropicLevel\"\n      ), BaseTexture.defaultOptions.anisotropicLevel = value;\n    }\n  },\n  /**\n   * Default filter resolution.\n   * @static\n   * @name FILTER_RESOLUTION\n   * @memberof PIXI.settings\n   * @deprecated since 7.1.0\n   * @type {number|null}\n   * @see PIXI.Filter.defaultResolution\n   */\n  FILTER_RESOLUTION: {\n    get() {\n      return deprecation(\"7.1.0\", \"settings.FILTER_RESOLUTION is deprecated, use Filter.defaultResolution\"), Filter.defaultResolution;\n    },\n    set(value) {\n      Filter.defaultResolution = value;\n    }\n  },\n  /**\n   * Default filter samples.\n   * @static\n   * @name FILTER_MULTISAMPLE\n   * @memberof PIXI.settings\n   * @deprecated since 7.1.0\n   * @type {PIXI.MSAA_QUALITY}\n   * @see PIXI.Filter.defaultMultisample\n   */\n  FILTER_MULTISAMPLE: {\n    get() {\n      return deprecation(\"7.1.0\", \"settings.FILTER_MULTISAMPLE is deprecated, use Filter.defaultMultisample\"), Filter.defaultMultisample;\n    },\n    set(value) {\n      Filter.defaultMultisample = value;\n    }\n  },\n  /**\n   * The maximum textures that this device supports.\n   * @static\n   * @name SPRITE_MAX_TEXTURES\n   * @memberof PIXI.settings\n   * @deprecated since 7.1.0\n   * @see PIXI.BatchRenderer.defaultMaxTextures\n   * @type {number}\n   */\n  SPRITE_MAX_TEXTURES: {\n    get() {\n      return BatchRenderer.defaultMaxTextures;\n    },\n    set(value) {\n      deprecation(\"7.1.0\", \"settings.SPRITE_MAX_TEXTURES is deprecated, use BatchRenderer.defaultMaxTextures\"), BatchRenderer.defaultMaxTextures = value;\n    }\n  },\n  /**\n   * The default sprite batch size.\n   *\n   * The default aims to balance desktop and mobile devices.\n   * @static\n   * @name SPRITE_BATCH_SIZE\n   * @memberof PIXI.settings\n   * @see PIXI.BatchRenderer.defaultBatchSize\n   * @deprecated since 7.1.0\n   * @type {number}\n   */\n  SPRITE_BATCH_SIZE: {\n    get() {\n      return BatchRenderer.defaultBatchSize;\n    },\n    set(value) {\n      deprecation(\"7.1.0\", \"settings.SPRITE_BATCH_SIZE is deprecated, use BatchRenderer.defaultBatchSize\"), BatchRenderer.defaultBatchSize = value;\n    }\n  },\n  /**\n   * Can we upload the same buffer in a single frame?\n   * @static\n   * @name CAN_UPLOAD_SAME_BUFFER\n   * @memberof PIXI.settings\n   * @see PIXI.BatchRenderer.canUploadSameBuffer\n   * @deprecated since 7.1.0\n   * @type {boolean}\n   */\n  CAN_UPLOAD_SAME_BUFFER: {\n    get() {\n      return BatchRenderer.canUploadSameBuffer;\n    },\n    set(value) {\n      deprecation(\"7.1.0\", \"settings.CAN_UPLOAD_SAME_BUFFER is deprecated, use BatchRenderer.canUploadSameBuffer\"), BatchRenderer.canUploadSameBuffer = value;\n    }\n  },\n  /**\n   * Default Garbage Collection mode.\n   * @static\n   * @name GC_MODE\n   * @memberof PIXI.settings\n   * @type {PIXI.GC_MODES}\n   * @deprecated since 7.1.0\n   * @see PIXI.TextureGCSystem.defaultMode\n   */\n  GC_MODE: {\n    get() {\n      return TextureGCSystem.defaultMode;\n    },\n    set(value) {\n      deprecation(\"7.1.0\", \"settings.GC_MODE is deprecated, use TextureGCSystem.defaultMode\"), TextureGCSystem.defaultMode = value;\n    }\n  },\n  /**\n   * Default Garbage Collection max idle.\n   * @static\n   * @name GC_MAX_IDLE\n   * @memberof PIXI.settings\n   * @type {number}\n   * @deprecated since 7.1.0\n   * @see PIXI.TextureGCSystem.defaultMaxIdle\n   */\n  GC_MAX_IDLE: {\n    get() {\n      return TextureGCSystem.defaultMaxIdle;\n    },\n    set(value) {\n      deprecation(\"7.1.0\", \"settings.GC_MAX_IDLE is deprecated, use TextureGCSystem.defaultMaxIdle\"), TextureGCSystem.defaultMaxIdle = value;\n    }\n  },\n  /**\n   * Default Garbage Collection maximum check count.\n   * @static\n   * @name GC_MAX_CHECK_COUNT\n   * @memberof PIXI.settings\n   * @type {number}\n   * @deprecated since 7.1.0\n   * @see PIXI.TextureGCSystem.defaultCheckCountMax\n   */\n  GC_MAX_CHECK_COUNT: {\n    get() {\n      return TextureGCSystem.defaultCheckCountMax;\n    },\n    set(value) {\n      deprecation(\"7.1.0\", \"settings.GC_MAX_CHECK_COUNT is deprecated, use TextureGCSystem.defaultCheckCountMax\"), TextureGCSystem.defaultCheckCountMax = value;\n    }\n  },\n  /**\n   * Default specify float precision in vertex shader.\n   * @static\n   * @name PRECISION_VERTEX\n   * @memberof PIXI.settings\n   * @type {PIXI.PRECISION}\n   * @deprecated since 7.1.0\n   * @see PIXI.Program.defaultVertexPrecision\n   */\n  PRECISION_VERTEX: {\n    get() {\n      return Program.defaultVertexPrecision;\n    },\n    set(value) {\n      deprecation(\"7.1.0\", \"settings.PRECISION_VERTEX is deprecated, use Program.defaultVertexPrecision\"), Program.defaultVertexPrecision = value;\n    }\n  },\n  /**\n   * Default specify float precision in fragment shader.\n   * @static\n   * @name PRECISION_FRAGMENT\n   * @memberof PIXI.settings\n   * @type {PIXI.PRECISION}\n   * @deprecated since 7.1.0\n   * @see PIXI.Program.defaultFragmentPrecision\n   */\n  PRECISION_FRAGMENT: {\n    get() {\n      return Program.defaultFragmentPrecision;\n    },\n    set(value) {\n      deprecation(\"7.1.0\", \"settings.PRECISION_FRAGMENT is deprecated, use Program.defaultFragmentPrecision\"), Program.defaultFragmentPrecision = value;\n    }\n  }\n});\n//# sourceMappingURL=settings.mjs.map\n"],"names":["settings","ENV","ContextSystem","BackgroundSystem","ViewSystem","StartupSystem","BaseTexture","value","deprecation","Filter","BatchRenderer","TextureGCSystem","Program"],"mappings":"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","x_google_ignoreList":[0]}