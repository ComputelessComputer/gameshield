{"version":3,"file":"index278.js","sources":["../../../node_modules/.pnpm/@pixi+graphics@7.4.3_@pixi+core@7.4.3_@pixi+display@7.4.3_@pixi+core@7.4.3__@pixi+sprit_3c40fa602f454a6b22dad0b27bc41147/node_modules/@pixi/graphics/lib/utils/buildCircle.mjs"],"sourcesContent":["import { SHAPES } from \"@pixi/core\";\nconst buildCircle = {\n  build(graphicsData) {\n    const points = graphicsData.points;\n    let x, y, dx, dy, rx, ry;\n    if (graphicsData.type === SHAPES.CIRC) {\n      const circle = graphicsData.shape;\n      x = circle.x, y = circle.y, rx = ry = circle.radius, dx = dy = 0;\n    } else if (graphicsData.type === SHAPES.ELIP) {\n      const ellipse = graphicsData.shape;\n      x = ellipse.x, y = ellipse.y, rx = ellipse.width, ry = ellipse.height, dx = dy = 0;\n    } else {\n      const roundedRect = graphicsData.shape, halfWidth = roundedRect.width / 2, halfHeight = roundedRect.height / 2;\n      x = roundedRect.x + halfWidth, y = roundedRect.y + halfHeight, rx = ry = Math.max(0, Math.min(roundedRect.radius, Math.min(halfWidth, halfHeight))), dx = halfWidth - rx, dy = halfHeight - ry;\n    }\n    if (!(rx >= 0 && ry >= 0 && dx >= 0 && dy >= 0)) {\n      points.length = 0;\n      return;\n    }\n    const n = Math.ceil(2.3 * Math.sqrt(rx + ry)), m = n * 8 + (dx ? 4 : 0) + (dy ? 4 : 0);\n    if (points.length = m, m === 0)\n      return;\n    if (n === 0) {\n      points.length = 8, points[0] = points[6] = x + dx, points[1] = points[3] = y + dy, points[2] = points[4] = x - dx, points[5] = points[7] = y - dy;\n      return;\n    }\n    let j1 = 0, j2 = n * 4 + (dx ? 2 : 0) + 2, j3 = j2, j4 = m;\n    {\n      const x0 = dx + rx, y0 = dy, x1 = x + x0, x2 = x - x0, y1 = y + y0;\n      if (points[j1++] = x1, points[j1++] = y1, points[--j2] = y1, points[--j2] = x2, dy) {\n        const y2 = y - y0;\n        points[j3++] = x2, points[j3++] = y2, points[--j4] = y2, points[--j4] = x1;\n      }\n    }\n    for (let i = 1; i < n; i++) {\n      const a = Math.PI / 2 * (i / n), x0 = dx + Math.cos(a) * rx, y0 = dy + Math.sin(a) * ry, x1 = x + x0, x2 = x - x0, y1 = y + y0, y2 = y - y0;\n      points[j1++] = x1, points[j1++] = y1, points[--j2] = y1, points[--j2] = x2, points[j3++] = x2, points[j3++] = y2, points[--j4] = y2, points[--j4] = x1;\n    }\n    {\n      const x0 = dx, y0 = dy + ry, x1 = x + x0, x2 = x - x0, y1 = y + y0, y2 = y - y0;\n      points[j1++] = x1, points[j1++] = y1, points[--j4] = y2, points[--j4] = x1, dx && (points[j1++] = x2, points[j1++] = y1, points[--j4] = y2, points[--j4] = x2);\n    }\n  },\n  triangulate(graphicsData, graphicsGeometry) {\n    const points = graphicsData.points, verts = graphicsGeometry.points, indices = graphicsGeometry.indices;\n    if (points.length === 0)\n      return;\n    let vertPos = verts.length / 2;\n    const center = vertPos;\n    let x, y;\n    if (graphicsData.type !== SHAPES.RREC) {\n      const circle = graphicsData.shape;\n      x = circle.x, y = circle.y;\n    } else {\n      const roundedRect = graphicsData.shape;\n      x = roundedRect.x + roundedRect.width / 2, y = roundedRect.y + roundedRect.height / 2;\n    }\n    const matrix = graphicsData.matrix;\n    verts.push(\n      graphicsData.matrix ? matrix.a * x + matrix.c * y + matrix.tx : x,\n      graphicsData.matrix ? matrix.b * x + matrix.d * y + matrix.ty : y\n    ), vertPos++, verts.push(points[0], points[1]);\n    for (let i = 2; i < points.length; i += 2)\n      verts.push(points[i], points[i + 1]), indices.push(vertPos++, center, vertPos);\n    indices.push(center + 1, center, vertPos);\n  }\n};\nexport {\n  buildCircle\n};\n//# sourceMappingURL=buildCircle.mjs.map\n"],"names":["buildCircle","graphicsData","points","x","y","dx","dy","rx","ry","SHAPES","circle","ellipse","roundedRect","halfWidth","halfHeight","n","m","j1","j2","j3","j4","x0","y0","x1","x2","y1","y2","a","graphicsGeometry","verts","indices","vertPos","center","matrix","i"],"mappings":"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","x_google_ignoreList":[0]}