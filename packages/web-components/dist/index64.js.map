{"version":3,"file":"index64.js","sources":["../../../node_modules/.pnpm/@pixi+core@7.4.3/node_modules/@pixi/core/lib/textures/TextureUvs.mjs"],"sourcesContent":["import { groupD8 } from \"@pixi/math\";\nclass TextureUvs {\n  constructor() {\n    this.x0 = 0, this.y0 = 0, this.x1 = 1, this.y1 = 0, this.x2 = 1, this.y2 = 1, this.x3 = 0, this.y3 = 1, this.uvsFloat32 = new Float32Array(8);\n  }\n  /**\n   * Sets the texture Uvs based on the given frame information.\n   * @protected\n   * @param frame - The frame of the texture\n   * @param baseFrame - The base frame of the texture\n   * @param rotate - Rotation of frame, see {@link PIXI.groupD8}\n   */\n  set(frame, baseFrame, rotate) {\n    const tw = baseFrame.width, th = baseFrame.height;\n    if (rotate) {\n      const w2 = frame.width / 2 / tw, h2 = frame.height / 2 / th, cX = frame.x / tw + w2, cY = frame.y / th + h2;\n      rotate = groupD8.add(rotate, groupD8.NW), this.x0 = cX + w2 * groupD8.uX(rotate), this.y0 = cY + h2 * groupD8.uY(rotate), rotate = groupD8.add(rotate, 2), this.x1 = cX + w2 * groupD8.uX(rotate), this.y1 = cY + h2 * groupD8.uY(rotate), rotate = groupD8.add(rotate, 2), this.x2 = cX + w2 * groupD8.uX(rotate), this.y2 = cY + h2 * groupD8.uY(rotate), rotate = groupD8.add(rotate, 2), this.x3 = cX + w2 * groupD8.uX(rotate), this.y3 = cY + h2 * groupD8.uY(rotate);\n    } else\n      this.x0 = frame.x / tw, this.y0 = frame.y / th, this.x1 = (frame.x + frame.width) / tw, this.y1 = frame.y / th, this.x2 = (frame.x + frame.width) / tw, this.y2 = (frame.y + frame.height) / th, this.x3 = frame.x / tw, this.y3 = (frame.y + frame.height) / th;\n    this.uvsFloat32[0] = this.x0, this.uvsFloat32[1] = this.y0, this.uvsFloat32[2] = this.x1, this.uvsFloat32[3] = this.y1, this.uvsFloat32[4] = this.x2, this.uvsFloat32[5] = this.y2, this.uvsFloat32[6] = this.x3, this.uvsFloat32[7] = this.y3;\n  }\n}\nTextureUvs.prototype.toString = function() {\n  return `[@pixi/core:TextureUvs x0=${this.x0} y0=${this.y0} x1=${this.x1} y1=${this.y1} x2=${this.x2} y2=${this.y2} x3=${this.x3} y3=${this.y3}]`;\n};\nexport {\n  TextureUvs\n};\n//# sourceMappingURL=TextureUvs.mjs.map\n"],"names":["TextureUvs","frame","baseFrame","rotate","tw","th","w2","h2","cX","cY","groupD8"],"mappings":";;;;;;;;;;AACA,MAAMA,EAAW;AAAA,EACf,cAAc;AACZ,SAAK,KAAK,GAAG,KAAK,KAAK,GAAG,KAAK,KAAK,GAAG,KAAK,KAAK,GAAG,KAAK,KAAK,GAAG,KAAK,KAAK,GAAG,KAAK,KAAK,GAAG,KAAK,KAAK,GAAG,KAAK,aAAa,IAAI,aAAa,CAAC;AAAA,EAC7I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQD,IAAIC,GAAOC,GAAWC,GAAQ;AAC5B,UAAMC,IAAKF,EAAU,OAAOG,IAAKH,EAAU;AAC3C,QAAIC,GAAQ;AACV,YAAMG,IAAKL,EAAM,QAAQ,IAAIG,GAAIG,IAAKN,EAAM,SAAS,IAAII,GAAIG,IAAKP,EAAM,IAAIG,IAAKE,GAAIG,IAAKR,EAAM,IAAII,IAAKE;AACzG,MAAAJ,IAASO,EAAQ,IAAIP,GAAQO,EAAQ,EAAE,GAAG,KAAK,KAAKF,IAAKF,IAAKI,EAAQ,GAAGP,CAAM,GAAG,KAAK,KAAKM,IAAKF,IAAKG,EAAQ,GAAGP,CAAM,GAAGA,IAASO,EAAQ,IAAIP,GAAQ,CAAC,GAAG,KAAK,KAAKK,IAAKF,IAAKI,EAAQ,GAAGP,CAAM,GAAG,KAAK,KAAKM,IAAKF,IAAKG,EAAQ,GAAGP,CAAM,GAAGA,IAASO,EAAQ,IAAIP,GAAQ,CAAC,GAAG,KAAK,KAAKK,IAAKF,IAAKI,EAAQ,GAAGP,CAAM,GAAG,KAAK,KAAKM,IAAKF,IAAKG,EAAQ,GAAGP,CAAM,GAAGA,IAASO,EAAQ,IAAIP,GAAQ,CAAC,GAAG,KAAK,KAAKK,IAAKF,IAAKI,EAAQ,GAAGP,CAAM,GAAG,KAAK,KAAKM,IAAKF,IAAKG,EAAQ,GAAGP,CAAM;AAAA,IAC3c;AACC,WAAK,KAAKF,EAAM,IAAIG,GAAI,KAAK,KAAKH,EAAM,IAAII,GAAI,KAAK,MAAMJ,EAAM,IAAIA,EAAM,SAASG,GAAI,KAAK,KAAKH,EAAM,IAAII,GAAI,KAAK,MAAMJ,EAAM,IAAIA,EAAM,SAASG,GAAI,KAAK,MAAMH,EAAM,IAAIA,EAAM,UAAUI,GAAI,KAAK,KAAKJ,EAAM,IAAIG,GAAI,KAAK,MAAMH,EAAM,IAAIA,EAAM,UAAUI;AAChQ,SAAK,WAAW,CAAC,IAAI,KAAK,IAAI,KAAK,WAAW,CAAC,IAAI,KAAK,IAAI,KAAK,WAAW,CAAC,IAAI,KAAK,IAAI,KAAK,WAAW,CAAC,IAAI,KAAK,IAAI,KAAK,WAAW,CAAC,IAAI,KAAK,IAAI,KAAK,WAAW,CAAC,IAAI,KAAK,IAAI,KAAK,WAAW,CAAC,IAAI,KAAK,IAAI,KAAK,WAAW,CAAC,IAAI,KAAK;AAAA,EAC7O;AACH;AACAL,EAAW,UAAU,WAAW,WAAW;AACzC,SAAO,6BAA6B,KAAK,EAAE,OAAO,KAAK,EAAE,OAAO,KAAK,EAAE,OAAO,KAAK,EAAE,OAAO,KAAK,EAAE,OAAO,KAAK,EAAE,OAAO,KAAK,EAAE,OAAO,KAAK,EAAE;AAC/I;","x_google_ignoreList":[0]}