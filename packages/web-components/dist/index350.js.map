{"version":3,"file":"index350.js","sources":["../../../node_modules/.pnpm/pixi.js@8.8.1/node_modules/pixi.js/lib/assets/loader/parsers/loadTxt.mjs"],"sourcesContent":["import { DOMAdapter } from '../../../environment/adapter.mjs';\nimport { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { checkDataUrl } from '../../utils/checkDataUrl.mjs';\nimport { checkExtension } from '../../utils/checkExtension.mjs';\nimport { LoaderParserPriority } from './LoaderParser.mjs';\n\n\"use strict\";\nconst validTXTExtension = \".txt\";\nconst validTXTMIME = \"text/plain\";\nconst loadTxt = {\n  name: \"loadTxt\",\n  extension: {\n    type: ExtensionType.LoadParser,\n    priority: LoaderParserPriority.Low,\n    name: \"loadTxt\"\n  },\n  test(url) {\n    return checkDataUrl(url, validTXTMIME) || checkExtension(url, validTXTExtension);\n  },\n  async load(url) {\n    const response = await DOMAdapter.get().fetch(url);\n    const txt = await response.text();\n    return txt;\n  }\n};\n\nexport { loadTxt };\n//# sourceMappingURL=loadTxt.mjs.map\n"],"names":["validTXTExtension","validTXTMIME","loadTxt","ExtensionType","LoaderParserPriority","url","checkDataUrl","checkExtension","DOMAdapter"],"mappings":";;;;;AAOA,MAAMA,IAAoB,QACpBC,IAAe,cACfC,IAAU;AAAA,EACd,MAAM;AAAA,EACN,WAAW;AAAA,IACT,MAAMC,EAAc;AAAA,IACpB,UAAUC,EAAqB;AAAA,IAC/B,MAAM;AAAA,EACP;AAAA,EACD,KAAKC,GAAK;AACR,WAAOC,EAAaD,GAAKJ,CAAY,KAAKM,EAAeF,GAAKL,CAAiB;AAAA,EAChF;AAAA,EACD,MAAM,KAAKK,GAAK;AAGd,WADY,OADK,MAAMG,EAAW,IAAG,EAAG,MAAMH,CAAG,GACtB;EAE5B;AACH;","x_google_ignoreList":[0]}