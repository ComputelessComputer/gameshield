{"version":3,"file":"index210.js","sources":["../../../node_modules/.pnpm/@pixi+core@7.4.3/node_modules/@pixi/core/lib/geometry/utils/interleaveTypedArrays.mjs"],"sourcesContent":["import { getBufferType } from \"@pixi/utils\";\nconst map = {\n  Float32Array,\n  Uint32Array,\n  Int32Array,\n  Uint8Array\n};\nfunction interleaveTypedArrays(arrays, sizes) {\n  let outSize = 0, stride = 0;\n  const views = {};\n  for (let i = 0; i < arrays.length; i++)\n    stride += sizes[i], outSize += arrays[i].length;\n  const buffer = new ArrayBuffer(outSize * 4);\n  let out = null, littleOffset = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const size = sizes[i], array = arrays[i], type = getBufferType(array);\n    views[type] || (views[type] = new map[type](buffer)), out = views[type];\n    for (let j = 0; j < array.length; j++) {\n      const indexStart = (j / size | 0) * stride + littleOffset, index = j % size;\n      out[indexStart + index] = array[j];\n    }\n    littleOffset += size;\n  }\n  return new Float32Array(buffer);\n}\nexport {\n  interleaveTypedArrays\n};\n//# sourceMappingURL=interleaveTypedArrays.mjs.map\n"],"names":["map","interleaveTypedArrays","arrays","sizes","outSize","stride","views","i","buffer","out","littleOffset","size","array","type","getBufferType","j","indexStart","index"],"mappings":";;;;;;;;;AACA,MAAMA,IAAM;AAAA,EACV;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AACA,SAASC,EAAsBC,GAAQC,GAAO;AAC5C,MAAIC,IAAU,GAAGC,IAAS;AAC1B,QAAMC,IAAQ,CAAA;AACd,WAASC,IAAI,GAAGA,IAAIL,EAAO,QAAQK;AACjC,IAAAF,KAAUF,EAAMI,CAAC,GAAGH,KAAWF,EAAOK,CAAC,EAAE;AAC3C,QAAMC,IAAS,IAAI,YAAYJ,IAAU,CAAC;AAC1C,MAAIK,IAAM,MAAMC,IAAe;AAC/B,WAASH,IAAI,GAAGA,IAAIL,EAAO,QAAQK,KAAK;AACtC,UAAMI,IAAOR,EAAMI,CAAC,GAAGK,IAAQV,EAAOK,CAAC,GAAGM,IAAOC,EAAcF,CAAK;AACpE,IAAAN,EAAMO,CAAI,MAAMP,EAAMO,CAAI,IAAI,IAAIb,EAAIa,CAAI,EAAEL,CAAM,IAAIC,IAAMH,EAAMO,CAAI;AACtE,aAASE,IAAI,GAAGA,IAAIH,EAAM,QAAQG,KAAK;AACrC,YAAMC,KAAcD,IAAIJ,IAAO,KAAKN,IAASK,GAAcO,IAAQF,IAAIJ;AACvE,MAAAF,EAAIO,IAAaC,CAAK,IAAIL,EAAMG,CAAC;AAAA,IAClC;AACD,IAAAL,KAAgBC;AAAA,EACjB;AACD,SAAO,IAAI,aAAaH,CAAM;AAChC;","x_google_ignoreList":[0]}