{"version":3,"file":"index21.js","sources":["../../../node_modules/.pnpm/@pixi+assets@7.4.3_@pixi+core@7.4.3/node_modules/@pixi/assets/lib/AssetExtension.mjs"],"sourcesContent":["import { ExtensionType, extensions } from \"@pixi/core\";\nconst assetKeyMap = {\n  loader: ExtensionType.LoadParser,\n  resolver: ExtensionType.ResolveParser,\n  cache: ExtensionType.CacheParser,\n  detection: ExtensionType.DetectionParser\n};\nextensions.handle(ExtensionType.Asset, (extension) => {\n  const ref = extension.ref;\n  Object.entries(assetKeyMap).filter(([key]) => !!ref[key]).forEach(([key, type]) => extensions.add(Object.assign(\n    ref[key],\n    // Allow the function to optionally define it's own\n    // ExtensionMetadata, the use cases here is priority for LoaderParsers\n    { extension: ref[key].extension ?? type }\n  )));\n}, (extension) => {\n  const ref = extension.ref;\n  Object.keys(assetKeyMap).filter((key) => !!ref[key]).forEach((key) => extensions.remove(ref[key]));\n});\n//# sourceMappingURL=AssetExtension.mjs.map\n"],"names":["assetKeyMap","ExtensionType","extensions","extension","ref","key","type"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,MAAMA,IAAc;AAAA,EAClB,QAAQC,EAAc;AAAA,EACtB,UAAUA,EAAc;AAAA,EACxB,OAAOA,EAAc;AAAA,EACrB,WAAWA,EAAc;AAC3B;AACAC,EAAW,OAAOD,EAAc,OAAO,CAACE,MAAc;AACpD,QAAMC,IAAMD,EAAU;AACtB,SAAO,QAAQH,CAAW,EAAE,OAAO,CAAC,CAACK,CAAG,MAAM,CAAC,CAACD,EAAIC,CAAG,CAAC,EAAE,QAAQ,CAAC,CAACA,GAAKC,CAAI,MAAMJ,EAAW,IAAI,OAAO;AAAA,IACvGE,EAAIC,CAAG;AAAA;AAAA;AAAA,IAGP,EAAE,WAAWD,EAAIC,CAAG,EAAE,aAAaC,EAAM;AAAA,EAC1C,CAAA,CAAC;AACJ,GAAG,CAACH,MAAc;AAChB,QAAMC,IAAMD,EAAU;AACtB,SAAO,KAAKH,CAAW,EAAE,OAAO,CAACK,MAAQ,CAAC,CAACD,EAAIC,CAAG,CAAC,EAAE,QAAQ,CAACA,MAAQH,EAAW,OAAOE,EAAIC,CAAG,CAAC,CAAC;AACnG,CAAC;","x_google_ignoreList":[0]}