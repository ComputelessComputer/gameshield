{"version":3,"file":"index417.js","sources":["../../../node_modules/.pnpm/pixi.js@8.8.1/node_modules/pixi.js/lib/utils/data/ViewableBuffer.mjs"],"sourcesContent":["\"use strict\";\nclass ViewableBuffer {\n  constructor(sizeOrBuffer) {\n    if (typeof sizeOrBuffer === \"number\") {\n      this.rawBinaryData = new ArrayBuffer(sizeOrBuffer);\n    } else if (sizeOrBuffer instanceof Uint8Array) {\n      this.rawBinaryData = sizeOrBuffer.buffer;\n    } else {\n      this.rawBinaryData = sizeOrBuffer;\n    }\n    this.uint32View = new Uint32Array(this.rawBinaryData);\n    this.float32View = new Float32Array(this.rawBinaryData);\n    this.size = this.rawBinaryData.byteLength;\n  }\n  /** View on the raw binary data as a `Int8Array`. */\n  get int8View() {\n    if (!this._int8View) {\n      this._int8View = new Int8Array(this.rawBinaryData);\n    }\n    return this._int8View;\n  }\n  /** View on the raw binary data as a `Uint8Array`. */\n  get uint8View() {\n    if (!this._uint8View) {\n      this._uint8View = new Uint8Array(this.rawBinaryData);\n    }\n    return this._uint8View;\n  }\n  /**  View on the raw binary data as a `Int16Array`. */\n  get int16View() {\n    if (!this._int16View) {\n      this._int16View = new Int16Array(this.rawBinaryData);\n    }\n    return this._int16View;\n  }\n  /** View on the raw binary data as a `Int32Array`. */\n  get int32View() {\n    if (!this._int32View) {\n      this._int32View = new Int32Array(this.rawBinaryData);\n    }\n    return this._int32View;\n  }\n  /** View on the raw binary data as a `Float64Array`. */\n  get float64View() {\n    if (!this._float64Array) {\n      this._float64Array = new Float64Array(this.rawBinaryData);\n    }\n    return this._float64Array;\n  }\n  /** View on the raw binary data as a `BigUint64Array`. */\n  get bigUint64View() {\n    if (!this._bigUint64Array) {\n      this._bigUint64Array = new BigUint64Array(this.rawBinaryData);\n    }\n    return this._bigUint64Array;\n  }\n  /**\n   * Returns the view of the given type.\n   * @param type - One of `int8`, `uint8`, `int16`,\n   *    `uint16`, `int32`, `uint32`, and `float32`.\n   * @returns - typed array of given type\n   */\n  view(type) {\n    return this[`${type}View`];\n  }\n  /** Destroys all buffer references. Do not use after calling this. */\n  destroy() {\n    this.rawBinaryData = null;\n    this._int8View = null;\n    this._uint8View = null;\n    this._int16View = null;\n    this.uint16View = null;\n    this._int32View = null;\n    this.uint32View = null;\n    this.float32View = null;\n  }\n  /**\n   * Returns the size of the given type in bytes.\n   * @param type - One of `int8`, `uint8`, `int16`,\n   *   `uint16`, `int32`, `uint32`, and `float32`.\n   * @returns - size of the type in bytes\n   */\n  static sizeOf(type) {\n    switch (type) {\n      case \"int8\":\n      case \"uint8\":\n        return 1;\n      case \"int16\":\n      case \"uint16\":\n        return 2;\n      case \"int32\":\n      case \"uint32\":\n      case \"float32\":\n        return 4;\n      default:\n        throw new Error(`${type} isn't a valid view type`);\n    }\n  }\n}\n\nexport { ViewableBuffer };\n//# sourceMappingURL=ViewableBuffer.mjs.map\n"],"names":["ViewableBuffer","sizeOrBuffer","type"],"mappings":"AACA,MAAMA,EAAe;AAAA,EACnB,YAAYC,GAAc;AACxB,IAAI,OAAOA,KAAiB,WAC1B,KAAK,gBAAgB,IAAI,YAAYA,CAAY,IACxCA,aAAwB,aACjC,KAAK,gBAAgBA,EAAa,SAElC,KAAK,gBAAgBA,GAEvB,KAAK,aAAa,IAAI,YAAY,KAAK,aAAa,GACpD,KAAK,cAAc,IAAI,aAAa,KAAK,aAAa,GACtD,KAAK,OAAO,KAAK,cAAc;AAAA,EAChC;AAAA;AAAA,EAED,IAAI,WAAW;AACb,WAAK,KAAK,cACR,KAAK,YAAY,IAAI,UAAU,KAAK,aAAa,IAE5C,KAAK;AAAA,EACb;AAAA;AAAA,EAED,IAAI,YAAY;AACd,WAAK,KAAK,eACR,KAAK,aAAa,IAAI,WAAW,KAAK,aAAa,IAE9C,KAAK;AAAA,EACb;AAAA;AAAA,EAED,IAAI,YAAY;AACd,WAAK,KAAK,eACR,KAAK,aAAa,IAAI,WAAW,KAAK,aAAa,IAE9C,KAAK;AAAA,EACb;AAAA;AAAA,EAED,IAAI,YAAY;AACd,WAAK,KAAK,eACR,KAAK,aAAa,IAAI,WAAW,KAAK,aAAa,IAE9C,KAAK;AAAA,EACb;AAAA;AAAA,EAED,IAAI,cAAc;AAChB,WAAK,KAAK,kBACR,KAAK,gBAAgB,IAAI,aAAa,KAAK,aAAa,IAEnD,KAAK;AAAA,EACb;AAAA;AAAA,EAED,IAAI,gBAAgB;AAClB,WAAK,KAAK,oBACR,KAAK,kBAAkB,IAAI,eAAe,KAAK,aAAa,IAEvD,KAAK;AAAA,EACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,KAAKC,GAAM;AACT,WAAO,KAAK,GAAGA,CAAI,MAAM;AAAA,EAC1B;AAAA;AAAA,EAED,UAAU;AACR,SAAK,gBAAgB,MACrB,KAAK,YAAY,MACjB,KAAK,aAAa,MAClB,KAAK,aAAa,MAClB,KAAK,aAAa,MAClB,KAAK,aAAa,MAClB,KAAK,aAAa,MAClB,KAAK,cAAc;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,OAAO,OAAOA,GAAM;AAClB,YAAQA,GAAI;AAAA,MACV,KAAK;AAAA,MACL,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AAAA,MACL,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACH,eAAO;AAAA,MACT;AACE,cAAM,IAAI,MAAM,GAAGA,CAAI,0BAA0B;AAAA,IACpD;AAAA,EACF;AACH;","x_google_ignoreList":[0]}