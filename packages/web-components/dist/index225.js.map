{"version":3,"file":"index225.js","sources":["../../../node_modules/.pnpm/@pixi+core@7.4.3/node_modules/@pixi/core/lib/shader/utils/generateUniformBufferSync.mjs"],"sourcesContent":["import \"./index.mjs\";\nimport { uniformParsers } from \"./uniformParsers.mjs\";\nimport { mapSize } from \"./mapSize.mjs\";\nfunction uboUpdate(_ud, _uv, _renderer, _syncData, buffer) {\n  _renderer.buffer.update(buffer);\n}\nconst UBO_TO_SINGLE_SETTERS = {\n  float: `\n        data[offset] = v;\n    `,\n  vec2: `\n        data[offset] = v[0];\n        data[offset+1] = v[1];\n    `,\n  vec3: `\n        data[offset] = v[0];\n        data[offset+1] = v[1];\n        data[offset+2] = v[2];\n\n    `,\n  vec4: `\n        data[offset] = v[0];\n        data[offset+1] = v[1];\n        data[offset+2] = v[2];\n        data[offset+3] = v[3];\n    `,\n  mat2: `\n        data[offset] = v[0];\n        data[offset+1] = v[1];\n\n        data[offset+4] = v[2];\n        data[offset+5] = v[3];\n    `,\n  mat3: `\n        data[offset] = v[0];\n        data[offset+1] = v[1];\n        data[offset+2] = v[2];\n\n        data[offset + 4] = v[3];\n        data[offset + 5] = v[4];\n        data[offset + 6] = v[5];\n\n        data[offset + 8] = v[6];\n        data[offset + 9] = v[7];\n        data[offset + 10] = v[8];\n    `,\n  mat4: `\n        for(var i = 0; i < 16; i++)\n        {\n            data[offset + i] = v[i];\n        }\n    `\n}, GLSL_TO_STD40_SIZE = {\n  float: 4,\n  vec2: 8,\n  vec3: 12,\n  vec4: 16,\n  int: 4,\n  ivec2: 8,\n  ivec3: 12,\n  ivec4: 16,\n  uint: 4,\n  uvec2: 8,\n  uvec3: 12,\n  uvec4: 16,\n  bool: 4,\n  bvec2: 8,\n  bvec3: 12,\n  bvec4: 16,\n  mat2: 16 * 2,\n  mat3: 16 * 3,\n  mat4: 16 * 4\n};\nfunction createUBOElements(uniformData) {\n  const uboElements = uniformData.map((data) => ({\n    data,\n    offset: 0,\n    dataLen: 0,\n    dirty: 0\n  }));\n  let size = 0, chunkSize = 0, offset = 0;\n  for (let i = 0; i < uboElements.length; i++) {\n    const uboElement = uboElements[i];\n    if (size = GLSL_TO_STD40_SIZE[uboElement.data.type], uboElement.data.size > 1 && (size = Math.max(size, 16) * uboElement.data.size), uboElement.dataLen = size, chunkSize % size !== 0 && chunkSize < 16) {\n      const lineUpValue = chunkSize % size % 16;\n      chunkSize += lineUpValue, offset += lineUpValue;\n    }\n    chunkSize + size > 16 ? (offset = Math.ceil(offset / 16) * 16, uboElement.offset = offset, offset += size, chunkSize = size) : (uboElement.offset = offset, chunkSize += size, offset += size);\n  }\n  return offset = Math.ceil(offset / 16) * 16, { uboElements, size: offset };\n}\nfunction getUBOData(uniforms, uniformData) {\n  const usedUniformDatas = [];\n  for (const i in uniforms)\n    uniformData[i] && usedUniformDatas.push(uniformData[i]);\n  return usedUniformDatas.sort((a, b) => a.index - b.index), usedUniformDatas;\n}\nfunction generateUniformBufferSync(group, uniformData) {\n  if (!group.autoManage)\n    return { size: 0, syncFunc: uboUpdate };\n  const usedUniformDatas = getUBOData(group.uniforms, uniformData), { uboElements, size } = createUBOElements(usedUniformDatas), funcFragments = [`\n    var v = null;\n    var v2 = null;\n    var cv = null;\n    var t = 0;\n    var gl = renderer.gl\n    var index = 0;\n    var data = buffer.data;\n    `];\n  for (let i = 0; i < uboElements.length; i++) {\n    const uboElement = uboElements[i], uniform = group.uniforms[uboElement.data.name], name = uboElement.data.name;\n    let parsed = !1;\n    for (let j = 0; j < uniformParsers.length; j++) {\n      const uniformParser = uniformParsers[j];\n      if (uniformParser.codeUbo && uniformParser.test(uboElement.data, uniform)) {\n        funcFragments.push(\n          `offset = ${uboElement.offset / 4};`,\n          uniformParsers[j].codeUbo(uboElement.data.name, uniform)\n        ), parsed = !0;\n        break;\n      }\n    }\n    if (!parsed)\n      if (uboElement.data.size > 1) {\n        const size2 = mapSize(uboElement.data.type), rowSize = Math.max(GLSL_TO_STD40_SIZE[uboElement.data.type] / 16, 1), elementSize = size2 / rowSize, remainder = (4 - elementSize % 4) % 4;\n        funcFragments.push(`\n                cv = ud.${name}.value;\n                v = uv.${name};\n                offset = ${uboElement.offset / 4};\n\n                t = 0;\n\n                for(var i=0; i < ${uboElement.data.size * rowSize}; i++)\n                {\n                    for(var j = 0; j < ${elementSize}; j++)\n                    {\n                        data[offset++] = v[t++];\n                    }\n                    offset += ${remainder};\n                }\n\n                `);\n      } else {\n        const template = UBO_TO_SINGLE_SETTERS[uboElement.data.type];\n        funcFragments.push(`\n                cv = ud.${name}.value;\n                v = uv.${name};\n                offset = ${uboElement.offset / 4};\n                ${template};\n                `);\n      }\n  }\n  return funcFragments.push(`\n       renderer.buffer.update(buffer);\n    `), {\n    size,\n    // eslint-disable-next-line no-new-func\n    syncFunc: new Function(\n      \"ud\",\n      \"uv\",\n      \"renderer\",\n      \"syncData\",\n      \"buffer\",\n      funcFragments.join(`\n`)\n    )\n  };\n}\nexport {\n  createUBOElements,\n  generateUniformBufferSync,\n  getUBOData\n};\n//# sourceMappingURL=generateUniformBufferSync.mjs.map\n"],"names":["uboUpdate","_ud","_uv","_renderer","_syncData","buffer","UBO_TO_SINGLE_SETTERS","GLSL_TO_STD40_SIZE","createUBOElements","uniformData","uboElements","data","size","chunkSize","offset","i","uboElement","lineUpValue","getUBOData","uniforms","usedUniformDatas","a","b","generateUniformBufferSync","group","funcFragments","uniform","name","parsed","j","uniformParsers","uniformParser","size2","mapSize","rowSize","elementSize","remainder","template"],"mappings":"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","x_google_ignoreList":[0]}