{"version":3,"file":"index236.js","sources":["../../../node_modules/.pnpm/@pixi+core@7.4.3/node_modules/@pixi/core/lib/textures/resources/BaseImageResource.mjs"],"sourcesContent":["import { ALPHA_MODES } from \"@pixi/constants\";\nimport { determineCrossOrigin } from \"@pixi/utils\";\nimport { Resource } from \"./Resource.mjs\";\nclass BaseImageResource extends Resource {\n  /**\n   * @param {PIXI.ImageSourcee} source\n   */\n  constructor(source) {\n    const sourceAny = source, width = sourceAny.naturalWidth || sourceAny.videoWidth || sourceAny.displayWidth || sourceAny.width, height = sourceAny.naturalHeight || sourceAny.videoHeight || sourceAny.displayHeight || sourceAny.height;\n    super(width, height), this.source = source, this.noSubImage = !1;\n  }\n  /**\n   * Set cross origin based detecting the url and the crossorigin\n   * @param element - Element to apply crossOrigin\n   * @param url - URL to check\n   * @param crossorigin - Cross origin value to use\n   */\n  static crossOrigin(element, url, crossorigin) {\n    crossorigin === void 0 && !url.startsWith(\"data:\") ? element.crossOrigin = determineCrossOrigin(url) : crossorigin !== !1 && (element.crossOrigin = typeof crossorigin == \"string\" ? crossorigin : \"anonymous\");\n  }\n  /**\n   * Upload the texture to the GPU.\n   * @param renderer - Upload to the renderer\n   * @param baseTexture - Reference to parent texture\n   * @param glTexture\n   * @param {PIXI.ImageSourcee} [source] - (optional)\n   * @returns - true is success\n   */\n  upload(renderer, baseTexture, glTexture, source) {\n    const gl = renderer.gl, width = baseTexture.realWidth, height = baseTexture.realHeight;\n    if (source = source || this.source, typeof HTMLImageElement < \"u\" && source instanceof HTMLImageElement) {\n      if (!source.complete || source.naturalWidth === 0)\n        return !1;\n    } else if (typeof HTMLVideoElement < \"u\" && source instanceof HTMLVideoElement && source.readyState <= 1)\n      return !1;\n    return gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, baseTexture.alphaMode === ALPHA_MODES.UNPACK), !this.noSubImage && baseTexture.target === gl.TEXTURE_2D && glTexture.width === width && glTexture.height === height ? gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, baseTexture.format, glTexture.type, source) : (glTexture.width = width, glTexture.height = height, gl.texImage2D(baseTexture.target, 0, glTexture.internalFormat, baseTexture.format, glTexture.type, source)), !0;\n  }\n  /**\n   * Checks if source width/height was changed, resize can cause extra baseTexture update.\n   * Triggers one update in any case.\n   */\n  update() {\n    if (this.destroyed)\n      return;\n    const source = this.source, width = source.naturalWidth || source.videoWidth || source.width, height = source.naturalHeight || source.videoHeight || source.height;\n    this.resize(width, height), super.update();\n  }\n  /** Destroy this {@link PIXI.BaseImageResource} */\n  dispose() {\n    this.source = null;\n  }\n}\nexport {\n  BaseImageResource\n};\n//# sourceMappingURL=BaseImageResource.mjs.map\n"],"names":["BaseImageResource","Resource","source","sourceAny","width","height","element","url","crossorigin","determineCrossOrigin","renderer","baseTexture","glTexture","gl","ALPHA_MODES"],"mappings":";;;;;;;;;;;AAGA,MAAMA,UAA0BC,EAAS;AAAA;AAAA;AAAA;AAAA,EAIvC,YAAYC,GAAQ;AAClB,UAAMC,IAAYD,GAAQE,IAAQD,EAAU,gBAAgBA,EAAU,cAAcA,EAAU,gBAAgBA,EAAU,OAAOE,IAASF,EAAU,iBAAiBA,EAAU,eAAeA,EAAU,iBAAiBA,EAAU;AACjO,UAAMC,GAAOC,CAAM,GAAG,KAAK,SAASH,GAAQ,KAAK,aAAa;AAAA,EAC/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,OAAO,YAAYI,GAASC,GAAKC,GAAa;AAC5C,IAAAA,MAAgB,UAAU,CAACD,EAAI,WAAW,OAAO,IAAID,EAAQ,cAAcG,EAAqBF,CAAG,IAAIC,MAAgB,OAAOF,EAAQ,cAAc,OAAOE,KAAe,WAAWA,IAAc;AAAA,EACpM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASD,OAAOE,GAAUC,GAAaC,GAAWV,GAAQ;AAC/C,UAAMW,IAAKH,EAAS,IAAIN,IAAQO,EAAY,WAAWN,IAASM,EAAY;AAC5E,QAAIT,IAASA,KAAU,KAAK,QAAQ,OAAO,mBAAmB,OAAOA,aAAkB;AACrF,UAAI,CAACA,EAAO,YAAYA,EAAO,iBAAiB;AAC9C,eAAO;AAAA,eACA,OAAO,mBAAmB,OAAOA,aAAkB,oBAAoBA,EAAO,cAAc;AACrG,aAAO;AACT,WAAOW,EAAG,YAAYA,EAAG,gCAAgCF,EAAY,cAAcG,EAAY,MAAM,GAAG,CAAC,KAAK,cAAcH,EAAY,WAAWE,EAAG,cAAcD,EAAU,UAAUR,KAASQ,EAAU,WAAWP,IAASQ,EAAG,cAAcA,EAAG,YAAY,GAAG,GAAG,GAAGF,EAAY,QAAQC,EAAU,MAAMV,CAAM,KAAKU,EAAU,QAAQR,GAAOQ,EAAU,SAASP,GAAQQ,EAAG,WAAWF,EAAY,QAAQ,GAAGC,EAAU,gBAAgBD,EAAY,QAAQC,EAAU,MAAMV,CAAM,IAAI;AAAA,EACzd;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,SAAS;AACP,QAAI,KAAK;AACP;AACF,UAAMA,IAAS,KAAK,QAAQE,IAAQF,EAAO,gBAAgBA,EAAO,cAAcA,EAAO,OAAOG,IAASH,EAAO,iBAAiBA,EAAO,eAAeA,EAAO;AAC5J,SAAK,OAAOE,GAAOC,CAAM,GAAG,MAAM;EACnC;AAAA;AAAA,EAED,UAAU;AACR,SAAK,SAAS;AAAA,EACf;AACH;","x_google_ignoreList":[0]}