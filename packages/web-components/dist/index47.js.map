{"version":3,"file":"index47.js","sources":["../../../node_modules/.pnpm/@pixi+core@7.4.3/node_modules/@pixi/core/lib/background/BackgroundSystem.mjs"],"sourcesContent":["import { Color } from \"@pixi/color\";\nimport { ExtensionType, extensions } from \"@pixi/extensions\";\nclass BackgroundSystem {\n  constructor() {\n    this.clearBeforeRender = !0, this._backgroundColor = new Color(0), this.alpha = 1;\n  }\n  /**\n   * initiates the background system\n   * @param {PIXI.IRendererOptions} options - the options for the background colors\n   */\n  init(options) {\n    this.clearBeforeRender = options.clearBeforeRender;\n    const { backgroundColor, background, backgroundAlpha } = options, color = background ?? backgroundColor;\n    color !== void 0 && (this.color = color), this.alpha = backgroundAlpha;\n  }\n  /**\n   * The background color to fill if not transparent.\n   * @member {PIXI.ColorSource}\n   */\n  get color() {\n    return this._backgroundColor.value;\n  }\n  set color(value) {\n    this._backgroundColor.setValue(value);\n  }\n  /**\n   * The background color alpha. Setting this to 0 will make the canvas transparent.\n   * @member {number}\n   */\n  get alpha() {\n    return this._backgroundColor.alpha;\n  }\n  set alpha(value) {\n    this._backgroundColor.setAlpha(value);\n  }\n  /** The background color object. */\n  get backgroundColor() {\n    return this._backgroundColor;\n  }\n  destroy() {\n  }\n}\nBackgroundSystem.defaultOptions = {\n  /**\n   * {@link PIXI.IRendererOptions.backgroundAlpha}\n   * @default 1\n   * @memberof PIXI.settings.RENDER_OPTIONS\n   */\n  backgroundAlpha: 1,\n  /**\n   * {@link PIXI.IRendererOptions.backgroundColor}\n   * @default 0x000000\n   * @memberof PIXI.settings.RENDER_OPTIONS\n   */\n  backgroundColor: 0,\n  /**\n   * {@link PIXI.IRendererOptions.clearBeforeRender}\n   * @default true\n   * @memberof PIXI.settings.RENDER_OPTIONS\n   */\n  clearBeforeRender: !0\n}, /** @ignore */\nBackgroundSystem.extension = {\n  type: [\n    ExtensionType.RendererSystem,\n    ExtensionType.CanvasRendererSystem\n  ],\n  name: \"background\"\n};\nextensions.add(BackgroundSystem);\nexport {\n  BackgroundSystem\n};\n//# sourceMappingURL=BackgroundSystem.mjs.map\n"],"names":["BackgroundSystem","Color","options","backgroundColor","background","backgroundAlpha","color","value","ExtensionType","extensions"],"mappings":";;AAEA,MAAMA,EAAiB;AAAA,EACrB,cAAc;AACZ,SAAK,oBAAoB,IAAI,KAAK,mBAAmB,IAAIC,EAAM,CAAC,GAAG,KAAK,QAAQ;AAAA,EACjF;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,KAAKC,GAAS;AACZ,SAAK,oBAAoBA,EAAQ;AACjC,UAAM,EAAE,iBAAAC,GAAiB,YAAAC,GAAY,iBAAAC,EAAe,IAAKH,GAASI,IAAQF,KAAcD;AACxF,IAAAG,MAAU,WAAW,KAAK,QAAQA,IAAQ,KAAK,QAAQD;AAAA,EACxD;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,IAAI,QAAQ;AACV,WAAO,KAAK,iBAAiB;AAAA,EAC9B;AAAA,EACD,IAAI,MAAME,GAAO;AACf,SAAK,iBAAiB,SAASA,CAAK;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,IAAI,QAAQ;AACV,WAAO,KAAK,iBAAiB;AAAA,EAC9B;AAAA,EACD,IAAI,MAAMA,GAAO;AACf,SAAK,iBAAiB,SAASA,CAAK;AAAA,EACrC;AAAA;AAAA,EAED,IAAI,kBAAkB;AACpB,WAAO,KAAK;AAAA,EACb;AAAA,EACD,UAAU;AAAA,EACT;AACH;AACAP,EAAiB,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMhC,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMjB,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMjB,mBAAmB;AACrB;AACAA,EAAiB,YAAY;AAAA,EAC3B,MAAM;AAAA,IACJQ,EAAc;AAAA,IACdA,EAAc;AAAA,EACf;AAAA,EACD,MAAM;AACR;AACAC,EAAW,IAAIT,CAAgB;","x_google_ignoreList":[0]}