{"version":3,"file":"index578.js","sources":["../../../node_modules/.pnpm/pixi.js@8.8.1/node_modules/pixi.js/lib/scene/text-html/utils/textStyleToCSS.mjs"],"sourcesContent":["import { Color } from '../../../color/Color.mjs';\n\n\"use strict\";\nfunction textStyleToCSS(style) {\n  const stroke = style._stroke;\n  const fill = style._fill;\n  const cssStyleString = [\n    `color: ${Color.shared.setValue(fill.color).toHex()}`,\n    `font-size: ${style.fontSize}px`,\n    `font-family: ${style.fontFamily}`,\n    `font-weight: ${style.fontWeight}`,\n    `font-style: ${style.fontStyle}`,\n    `font-variant: ${style.fontVariant}`,\n    `letter-spacing: ${style.letterSpacing}px`,\n    `text-align: ${style.align}`,\n    `padding: ${style.padding}px`,\n    `white-space: ${style.whiteSpace === \"pre\" && style.wordWrap ? \"pre-wrap\" : style.whiteSpace}`,\n    ...style.lineHeight ? [`line-height: ${style.lineHeight}px`] : [],\n    ...style.wordWrap ? [\n      `word-wrap: ${style.breakWords ? \"break-all\" : \"break-word\"}`,\n      `max-width: ${style.wordWrapWidth}px`\n    ] : [],\n    ...stroke ? [strokeToCSS(stroke)] : [],\n    ...style.dropShadow ? [dropShadowToCSS(style.dropShadow)] : [],\n    ...style.cssOverrides\n  ].join(\";\");\n  const cssStyles = [`div { ${cssStyleString} }`];\n  tagStyleToCSS(style.tagStyles, cssStyles);\n  return cssStyles.join(\" \");\n}\nfunction dropShadowToCSS(dropShadowStyle) {\n  const color = Color.shared.setValue(dropShadowStyle.color).setAlpha(dropShadowStyle.alpha).toHexa();\n  const x = Math.round(Math.cos(dropShadowStyle.angle) * dropShadowStyle.distance);\n  const y = Math.round(Math.sin(dropShadowStyle.angle) * dropShadowStyle.distance);\n  const position = `${x}px ${y}px`;\n  if (dropShadowStyle.blur > 0) {\n    return `text-shadow: ${position} ${dropShadowStyle.blur}px ${color}`;\n  }\n  return `text-shadow: ${position} ${color}`;\n}\nfunction strokeToCSS(stroke) {\n  return [\n    `-webkit-text-stroke-width: ${stroke.width}px`,\n    `-webkit-text-stroke-color: ${Color.shared.setValue(stroke.color).toHex()}`,\n    `text-stroke-width: ${stroke.width}px`,\n    `text-stroke-color: ${Color.shared.setValue(stroke.color).toHex()}`,\n    \"paint-order: stroke\"\n  ].join(\";\");\n}\nconst templates = {\n  fontSize: `font-size: {{VALUE}}px`,\n  fontFamily: `font-family: {{VALUE}}`,\n  fontWeight: `font-weight: {{VALUE}}`,\n  fontStyle: `font-style: {{VALUE}}`,\n  fontVariant: `font-variant: {{VALUE}}`,\n  letterSpacing: `letter-spacing: {{VALUE}}px`,\n  align: `text-align: {{VALUE}}`,\n  padding: `padding: {{VALUE}}px`,\n  whiteSpace: `white-space: {{VALUE}}`,\n  lineHeight: `line-height: {{VALUE}}px`,\n  wordWrapWidth: `max-width: {{VALUE}}px`\n};\nconst transform = {\n  fill: (value) => `color: ${Color.shared.setValue(value).toHex()}`,\n  breakWords: (value) => `word-wrap: ${value ? \"break-all\" : \"break-word\"}`,\n  stroke: strokeToCSS,\n  dropShadow: dropShadowToCSS\n};\nfunction tagStyleToCSS(tagStyles, out) {\n  for (const i in tagStyles) {\n    const tagStyle = tagStyles[i];\n    const cssTagStyle = [];\n    for (const j in tagStyle) {\n      if (transform[j]) {\n        cssTagStyle.push(transform[j](tagStyle[j]));\n      } else if (templates[j]) {\n        cssTagStyle.push(templates[j].replace(\"{{VALUE}}\", tagStyle[j]));\n      }\n    }\n    out.push(`${i} { ${cssTagStyle.join(\";\")} }`);\n  }\n}\n\nexport { textStyleToCSS };\n//# sourceMappingURL=textStyleToCSS.mjs.map\n"],"names":["textStyleToCSS","style","stroke","fill","cssStyles","Color","strokeToCSS","dropShadowToCSS","tagStyleToCSS","dropShadowStyle","color","x","y","position","templates","transform","value","tagStyles","out","i","tagStyle","cssTagStyle","j"],"mappings":"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","x_google_ignoreList":[0]}