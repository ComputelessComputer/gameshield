{"version":3,"file":"index339.js","sources":["../../../node_modules/.pnpm/pixi.js@8.8.1/node_modules/pixi.js/lib/assets/BackgroundLoader.mjs"],"sourcesContent":["\"use strict\";\nclass BackgroundLoader {\n  /**\n   * @param loader\n   * @param verbose - should the loader log to the console\n   */\n  constructor(loader, verbose = false) {\n    this._loader = loader;\n    this._assetList = [];\n    this._isLoading = false;\n    this._maxConcurrent = 1;\n    this.verbose = verbose;\n  }\n  /**\n   * Adds an array of assets to load.\n   * @param assetUrls - assets to load\n   */\n  add(assetUrls) {\n    assetUrls.forEach((a) => {\n      this._assetList.push(a);\n    });\n    if (this.verbose) {\n      console.log(\"[BackgroundLoader] assets: \", this._assetList);\n    }\n    if (this._isActive && !this._isLoading) {\n      void this._next();\n    }\n  }\n  /**\n   * Loads the next set of assets. Will try to load as many assets as it can at the same time.\n   *\n   * The max assets it will try to load at one time will be 4.\n   */\n  async _next() {\n    if (this._assetList.length && this._isActive) {\n      this._isLoading = true;\n      const toLoad = [];\n      const toLoadAmount = Math.min(this._assetList.length, this._maxConcurrent);\n      for (let i = 0; i < toLoadAmount; i++) {\n        toLoad.push(this._assetList.pop());\n      }\n      await this._loader.load(toLoad);\n      this._isLoading = false;\n      void this._next();\n    }\n  }\n  /**\n   * Activate/Deactivate the loading. If set to true then it will immediately continue to load the next asset.\n   * @returns whether the class is active\n   */\n  get active() {\n    return this._isActive;\n  }\n  set active(value) {\n    if (this._isActive === value)\n      return;\n    this._isActive = value;\n    if (value && !this._isLoading) {\n      void this._next();\n    }\n  }\n}\n\nexport { BackgroundLoader };\n//# sourceMappingURL=BackgroundLoader.mjs.map\n"],"names":["BackgroundLoader","loader","verbose","assetUrls","a","toLoad","toLoadAmount","value"],"mappings":"AACA,MAAMA,EAAiB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKrB,YAAYC,GAAQC,IAAU,IAAO;AACnC,SAAK,UAAUD,GACf,KAAK,aAAa,IAClB,KAAK,aAAa,IAClB,KAAK,iBAAiB,GACtB,KAAK,UAAUC;AAAA,EAChB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,IAAIC,GAAW;AACb,IAAAA,EAAU,QAAQ,CAACC,MAAM;AACvB,WAAK,WAAW,KAAKA,CAAC;AAAA,IAC5B,CAAK,GACG,KAAK,WACP,QAAQ,IAAI,+BAA+B,KAAK,UAAU,GAExD,KAAK,aAAa,CAAC,KAAK,cACrB,KAAK;EAEb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,MAAM,QAAQ;AACZ,QAAI,KAAK,WAAW,UAAU,KAAK,WAAW;AAC5C,WAAK,aAAa;AAClB,YAAMC,IAAS,CAAA,GACTC,IAAe,KAAK,IAAI,KAAK,WAAW,QAAQ,KAAK,cAAc;AACzE,eAAS,IAAI,GAAG,IAAIA,GAAc;AAChC,QAAAD,EAAO,KAAK,KAAK,WAAW,IAAK,CAAA;AAEnC,YAAM,KAAK,QAAQ,KAAKA,CAAM,GAC9B,KAAK,aAAa,IACb,KAAK;IACX;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,IAAI,SAAS;AACX,WAAO,KAAK;AAAA,EACb;AAAA,EACD,IAAI,OAAOE,GAAO;AAChB,IAAI,KAAK,cAAcA,MAEvB,KAAK,YAAYA,GACbA,KAAS,CAAC,KAAK,cACZ,KAAK;EAEb;AACH;","x_google_ignoreList":[0]}