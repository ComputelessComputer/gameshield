{"version":3,"file":"index273.js","sources":["../../../node_modules/.pnpm/@pixi+particle-container@7.4.3_@pixi+core@7.4.3_@pixi+display@7.4.3_@pixi+core@7.4.3__@_eef2d817d895d9ecb1c87724edb8eaf6/node_modules/@pixi/particle-container/lib/ParticleBuffer.mjs"],"sourcesContent":["import { Geometry, TYPES, Buffer, utils } from \"@pixi/core\";\nclass ParticleBuffer {\n  /**\n   * @param {object} properties - The properties to upload.\n   * @param {boolean[]} dynamicPropertyFlags - Flags for which properties are dynamic.\n   * @param {number} size - The size of the batch.\n   */\n  constructor(properties, dynamicPropertyFlags, size) {\n    this.geometry = new Geometry(), this.indexBuffer = null, this.size = size, this.dynamicProperties = [], this.staticProperties = [];\n    for (let i = 0; i < properties.length; ++i) {\n      let property = properties[i];\n      property = {\n        attributeName: property.attributeName,\n        size: property.size,\n        uploadFunction: property.uploadFunction,\n        type: property.type || TYPES.FLOAT,\n        offset: property.offset\n      }, dynamicPropertyFlags[i] ? this.dynamicProperties.push(property) : this.staticProperties.push(property);\n    }\n    this.staticStride = 0, this.staticBuffer = null, this.staticData = null, this.staticDataUint32 = null, this.dynamicStride = 0, this.dynamicBuffer = null, this.dynamicData = null, this.dynamicDataUint32 = null, this._updateID = 0, this.initBuffers();\n  }\n  /** Sets up the renderer context and necessary buffers. */\n  initBuffers() {\n    const geometry = this.geometry;\n    let dynamicOffset = 0;\n    this.indexBuffer = new Buffer(utils.createIndicesForQuads(this.size), !0, !0), geometry.addIndex(this.indexBuffer), this.dynamicStride = 0;\n    for (let i = 0; i < this.dynamicProperties.length; ++i) {\n      const property = this.dynamicProperties[i];\n      property.offset = dynamicOffset, dynamicOffset += property.size, this.dynamicStride += property.size;\n    }\n    const dynBuffer = new ArrayBuffer(this.size * this.dynamicStride * 4 * 4);\n    this.dynamicData = new Float32Array(dynBuffer), this.dynamicDataUint32 = new Uint32Array(dynBuffer), this.dynamicBuffer = new Buffer(this.dynamicData, !1, !1);\n    let staticOffset = 0;\n    this.staticStride = 0;\n    for (let i = 0; i < this.staticProperties.length; ++i) {\n      const property = this.staticProperties[i];\n      property.offset = staticOffset, staticOffset += property.size, this.staticStride += property.size;\n    }\n    const statBuffer = new ArrayBuffer(this.size * this.staticStride * 4 * 4);\n    this.staticData = new Float32Array(statBuffer), this.staticDataUint32 = new Uint32Array(statBuffer), this.staticBuffer = new Buffer(this.staticData, !0, !1);\n    for (let i = 0; i < this.dynamicProperties.length; ++i) {\n      const property = this.dynamicProperties[i];\n      geometry.addAttribute(\n        property.attributeName,\n        this.dynamicBuffer,\n        0,\n        property.type === TYPES.UNSIGNED_BYTE,\n        property.type,\n        this.dynamicStride * 4,\n        property.offset * 4\n      );\n    }\n    for (let i = 0; i < this.staticProperties.length; ++i) {\n      const property = this.staticProperties[i];\n      geometry.addAttribute(\n        property.attributeName,\n        this.staticBuffer,\n        0,\n        property.type === TYPES.UNSIGNED_BYTE,\n        property.type,\n        this.staticStride * 4,\n        property.offset * 4\n      );\n    }\n  }\n  /**\n   * Uploads the dynamic properties.\n   * @param children - The children to upload.\n   * @param startIndex - The index to start at.\n   * @param amount - The number to upload.\n   */\n  uploadDynamic(children, startIndex, amount) {\n    for (let i = 0; i < this.dynamicProperties.length; i++) {\n      const property = this.dynamicProperties[i];\n      property.uploadFunction(\n        children,\n        startIndex,\n        amount,\n        property.type === TYPES.UNSIGNED_BYTE ? this.dynamicDataUint32 : this.dynamicData,\n        this.dynamicStride,\n        property.offset\n      );\n    }\n    this.dynamicBuffer._updateID++;\n  }\n  /**\n   * Uploads the static properties.\n   * @param children - The children to upload.\n   * @param startIndex - The index to start at.\n   * @param amount - The number to upload.\n   */\n  uploadStatic(children, startIndex, amount) {\n    for (let i = 0; i < this.staticProperties.length; i++) {\n      const property = this.staticProperties[i];\n      property.uploadFunction(\n        children,\n        startIndex,\n        amount,\n        property.type === TYPES.UNSIGNED_BYTE ? this.staticDataUint32 : this.staticData,\n        this.staticStride,\n        property.offset\n      );\n    }\n    this.staticBuffer._updateID++;\n  }\n  /** Destroys the ParticleBuffer. */\n  destroy() {\n    this.indexBuffer = null, this.dynamicProperties = null, this.dynamicBuffer = null, this.dynamicData = null, this.dynamicDataUint32 = null, this.staticProperties = null, this.staticBuffer = null, this.staticData = null, this.staticDataUint32 = null, this.geometry.destroy();\n  }\n}\nexport {\n  ParticleBuffer\n};\n//# sourceMappingURL=ParticleBuffer.mjs.map\n"],"names":["ParticleBuffer","properties","dynamicPropertyFlags","size","Geometry","i","property","TYPES","geometry","dynamicOffset","Buffer","utils.createIndicesForQuads","dynBuffer","staticOffset","statBuffer","children","startIndex","amount"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,MAAMA,GAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMnB,YAAYC,GAAYC,GAAsBC,GAAM;AAClD,SAAK,WAAW,IAAIC,EAAU,GAAE,KAAK,cAAc,MAAM,KAAK,OAAOD,GAAM,KAAK,oBAAoB,CAAE,GAAE,KAAK,mBAAmB;AAChI,aAASE,IAAI,GAAGA,IAAIJ,EAAW,QAAQ,EAAEI,GAAG;AAC1C,UAAIC,IAAWL,EAAWI,CAAC;AAC3B,MAAAC,IAAW;AAAA,QACT,eAAeA,EAAS;AAAA,QACxB,MAAMA,EAAS;AAAA,QACf,gBAAgBA,EAAS;AAAA,QACzB,MAAMA,EAAS,QAAQC,EAAM;AAAA,QAC7B,QAAQD,EAAS;AAAA,MAClB,GAAEJ,EAAqBG,CAAC,IAAI,KAAK,kBAAkB,KAAKC,CAAQ,IAAI,KAAK,iBAAiB,KAAKA,CAAQ;AAAA,IACzG;AACD,SAAK,eAAe,GAAG,KAAK,eAAe,MAAM,KAAK,aAAa,MAAM,KAAK,mBAAmB,MAAM,KAAK,gBAAgB,GAAG,KAAK,gBAAgB,MAAM,KAAK,cAAc,MAAM,KAAK,oBAAoB,MAAM,KAAK,YAAY,GAAG,KAAK,YAAW;AAAA,EACvP;AAAA;AAAA,EAED,cAAc;AACZ,UAAME,IAAW,KAAK;AACtB,QAAIC,IAAgB;AACpB,SAAK,cAAc,IAAIC,EAAOC,EAA4B,KAAK,IAAI,GAAG,IAAI,EAAE,GAAGH,EAAS,SAAS,KAAK,WAAW,GAAG,KAAK,gBAAgB;AACzI,aAASH,IAAI,GAAGA,IAAI,KAAK,kBAAkB,QAAQ,EAAEA,GAAG;AACtD,YAAMC,IAAW,KAAK,kBAAkBD,CAAC;AACzC,MAAAC,EAAS,SAASG,GAAeA,KAAiBH,EAAS,MAAM,KAAK,iBAAiBA,EAAS;AAAA,IACjG;AACD,UAAMM,IAAY,IAAI,YAAY,KAAK,OAAO,KAAK,gBAAgB,IAAI,CAAC;AACxE,SAAK,cAAc,IAAI,aAAaA,CAAS,GAAG,KAAK,oBAAoB,IAAI,YAAYA,CAAS,GAAG,KAAK,gBAAgB,IAAIF,EAAO,KAAK,aAAa,IAAI,EAAE;AAC7J,QAAIG,IAAe;AACnB,SAAK,eAAe;AACpB,aAASR,IAAI,GAAGA,IAAI,KAAK,iBAAiB,QAAQ,EAAEA,GAAG;AACrD,YAAMC,IAAW,KAAK,iBAAiBD,CAAC;AACxC,MAAAC,EAAS,SAASO,GAAcA,KAAgBP,EAAS,MAAM,KAAK,gBAAgBA,EAAS;AAAA,IAC9F;AACD,UAAMQ,IAAa,IAAI,YAAY,KAAK,OAAO,KAAK,eAAe,IAAI,CAAC;AACxE,SAAK,aAAa,IAAI,aAAaA,CAAU,GAAG,KAAK,mBAAmB,IAAI,YAAYA,CAAU,GAAG,KAAK,eAAe,IAAIJ,EAAO,KAAK,YAAY,IAAI,EAAE;AAC3J,aAASL,IAAI,GAAGA,IAAI,KAAK,kBAAkB,QAAQ,EAAEA,GAAG;AACtD,YAAMC,IAAW,KAAK,kBAAkBD,CAAC;AACzC,MAAAG,EAAS;AAAA,QACPF,EAAS;AAAA,QACT,KAAK;AAAA,QACL;AAAA,QACAA,EAAS,SAASC,EAAM;AAAA,QACxBD,EAAS;AAAA,QACT,KAAK,gBAAgB;AAAA,QACrBA,EAAS,SAAS;AAAA,MAC1B;AAAA,IACK;AACD,aAASD,IAAI,GAAGA,IAAI,KAAK,iBAAiB,QAAQ,EAAEA,GAAG;AACrD,YAAMC,IAAW,KAAK,iBAAiBD,CAAC;AACxC,MAAAG,EAAS;AAAA,QACPF,EAAS;AAAA,QACT,KAAK;AAAA,QACL;AAAA,QACAA,EAAS,SAASC,EAAM;AAAA,QACxBD,EAAS;AAAA,QACT,KAAK,eAAe;AAAA,QACpBA,EAAS,SAAS;AAAA,MAC1B;AAAA,IACK;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,cAAcS,GAAUC,GAAYC,GAAQ;AAC1C,aAASZ,IAAI,GAAGA,IAAI,KAAK,kBAAkB,QAAQA,KAAK;AACtD,YAAMC,IAAW,KAAK,kBAAkBD,CAAC;AACzC,MAAAC,EAAS;AAAA,QACPS;AAAA,QACAC;AAAA,QACAC;AAAA,QACAX,EAAS,SAASC,EAAM,gBAAgB,KAAK,oBAAoB,KAAK;AAAA,QACtE,KAAK;AAAA,QACLD,EAAS;AAAA,MACjB;AAAA,IACK;AACD,SAAK,cAAc;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,aAAaS,GAAUC,GAAYC,GAAQ;AACzC,aAASZ,IAAI,GAAGA,IAAI,KAAK,iBAAiB,QAAQA,KAAK;AACrD,YAAMC,IAAW,KAAK,iBAAiBD,CAAC;AACxC,MAAAC,EAAS;AAAA,QACPS;AAAA,QACAC;AAAA,QACAC;AAAA,QACAX,EAAS,SAASC,EAAM,gBAAgB,KAAK,mBAAmB,KAAK;AAAA,QACrE,KAAK;AAAA,QACLD,EAAS;AAAA,MACjB;AAAA,IACK;AACD,SAAK,aAAa;AAAA,EACnB;AAAA;AAAA,EAED,UAAU;AACR,SAAK,cAAc,MAAM,KAAK,oBAAoB,MAAM,KAAK,gBAAgB,MAAM,KAAK,cAAc,MAAM,KAAK,oBAAoB,MAAM,KAAK,mBAAmB,MAAM,KAAK,eAAe,MAAM,KAAK,aAAa,MAAM,KAAK,mBAAmB,MAAM,KAAK,SAAS,QAAO;AAAA,EAC/Q;AACH;","x_google_ignoreList":[0]}