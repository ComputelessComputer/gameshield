{"version":3,"file":"index51.js","sources":["../../../node_modules/.pnpm/@pixi+core@7.4.3/node_modules/@pixi/core/lib/context/ContextSystem.mjs"],"sourcesContent":["import { ENV } from \"@pixi/constants\";\nimport { ExtensionType, extensions } from \"@pixi/extensions\";\nimport { settings } from \"@pixi/settings\";\nlet CONTEXT_UID_COUNTER = 0;\nclass ContextSystem {\n  /** @param renderer - The renderer this System works for. */\n  constructor(renderer) {\n    this.renderer = renderer, this.webGLVersion = 1, this.extensions = {}, this.supports = {\n      uint32Indices: !1\n    }, this.handleContextLost = this.handleContextLost.bind(this), this.handleContextRestored = this.handleContextRestored.bind(this);\n  }\n  /**\n   * `true` if the context is lost\n   * @readonly\n   */\n  get isLost() {\n    return !this.gl || this.gl.isContextLost();\n  }\n  /**\n   * Handles the context change event.\n   * @param {WebGLRenderingContext} gl - New WebGL context.\n   */\n  contextChange(gl) {\n    this.gl = gl, this.renderer.gl = gl, this.renderer.CONTEXT_UID = CONTEXT_UID_COUNTER++;\n  }\n  init(options) {\n    if (options.context)\n      this.initFromContext(options.context);\n    else {\n      const alpha = this.renderer.background.alpha < 1, premultipliedAlpha = options.premultipliedAlpha;\n      this.preserveDrawingBuffer = options.preserveDrawingBuffer, this.useContextAlpha = options.useContextAlpha, this.powerPreference = options.powerPreference, this.initFromOptions({\n        alpha,\n        premultipliedAlpha,\n        antialias: options.antialias,\n        stencil: !0,\n        preserveDrawingBuffer: options.preserveDrawingBuffer,\n        powerPreference: options.powerPreference\n      });\n    }\n  }\n  /**\n   * Initializes the context.\n   * @protected\n   * @param {WebGLRenderingContext} gl - WebGL context\n   */\n  initFromContext(gl) {\n    this.gl = gl, this.validateContext(gl), this.renderer.gl = gl, this.renderer.CONTEXT_UID = CONTEXT_UID_COUNTER++, this.renderer.runners.contextChange.emit(gl);\n    const view = this.renderer.view;\n    view.addEventListener !== void 0 && (view.addEventListener(\"webglcontextlost\", this.handleContextLost, !1), view.addEventListener(\"webglcontextrestored\", this.handleContextRestored, !1));\n  }\n  /**\n   * Initialize from context options\n   * @protected\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/getContext\n   * @param {object} options - context attributes\n   */\n  initFromOptions(options) {\n    const gl = this.createContext(this.renderer.view, options);\n    this.initFromContext(gl);\n  }\n  /**\n   * Helper class to create a WebGL Context\n   * @param canvas - the canvas element that we will get the context from\n   * @param options - An options object that gets passed in to the canvas element containing the\n   *    context attributes\n   * @see https://developer.mozilla.org/en/docs/Web/API/HTMLCanvasElement/getContext\n   * @returns {WebGLRenderingContext} the WebGL context\n   */\n  createContext(canvas, options) {\n    let gl;\n    if (settings.PREFER_ENV >= ENV.WEBGL2 && (gl = canvas.getContext(\"webgl2\", options)), gl)\n      this.webGLVersion = 2;\n    else if (this.webGLVersion = 1, gl = canvas.getContext(\"webgl\", options) || canvas.getContext(\"experimental-webgl\", options), !gl)\n      throw new Error(\"This browser does not support WebGL. Try using the canvas renderer\");\n    return this.gl = gl, this.getExtensions(), this.gl;\n  }\n  /** Auto-populate the {@link PIXI.ContextSystem.extensions extensions}. */\n  getExtensions() {\n    const { gl } = this, common = {\n      loseContext: gl.getExtension(\"WEBGL_lose_context\"),\n      anisotropicFiltering: gl.getExtension(\"EXT_texture_filter_anisotropic\"),\n      floatTextureLinear: gl.getExtension(\"OES_texture_float_linear\"),\n      s3tc: gl.getExtension(\"WEBGL_compressed_texture_s3tc\"),\n      s3tc_sRGB: gl.getExtension(\"WEBGL_compressed_texture_s3tc_srgb\"),\n      // eslint-disable-line camelcase\n      etc: gl.getExtension(\"WEBGL_compressed_texture_etc\"),\n      etc1: gl.getExtension(\"WEBGL_compressed_texture_etc1\"),\n      pvrtc: gl.getExtension(\"WEBGL_compressed_texture_pvrtc\") || gl.getExtension(\"WEBKIT_WEBGL_compressed_texture_pvrtc\"),\n      atc: gl.getExtension(\"WEBGL_compressed_texture_atc\"),\n      astc: gl.getExtension(\"WEBGL_compressed_texture_astc\"),\n      bptc: gl.getExtension(\"EXT_texture_compression_bptc\")\n    };\n    this.webGLVersion === 1 ? Object.assign(this.extensions, common, {\n      drawBuffers: gl.getExtension(\"WEBGL_draw_buffers\"),\n      depthTexture: gl.getExtension(\"WEBGL_depth_texture\"),\n      vertexArrayObject: gl.getExtension(\"OES_vertex_array_object\") || gl.getExtension(\"MOZ_OES_vertex_array_object\") || gl.getExtension(\"WEBKIT_OES_vertex_array_object\"),\n      uint32ElementIndex: gl.getExtension(\"OES_element_index_uint\"),\n      // Floats and half-floats\n      floatTexture: gl.getExtension(\"OES_texture_float\"),\n      floatTextureLinear: gl.getExtension(\"OES_texture_float_linear\"),\n      textureHalfFloat: gl.getExtension(\"OES_texture_half_float\"),\n      textureHalfFloatLinear: gl.getExtension(\"OES_texture_half_float_linear\")\n    }) : this.webGLVersion === 2 && Object.assign(this.extensions, common, {\n      // Floats and half-floats\n      colorBufferFloat: gl.getExtension(\"EXT_color_buffer_float\")\n    });\n  }\n  /**\n   * Handles a lost webgl context\n   * @param {WebGLContextEvent} event - The context lost event.\n   */\n  handleContextLost(event) {\n    event.preventDefault(), setTimeout(() => {\n      this.gl.isContextLost() && this.extensions.loseContext && this.extensions.loseContext.restoreContext();\n    }, 0);\n  }\n  /** Handles a restored webgl context. */\n  handleContextRestored() {\n    this.renderer.runners.contextChange.emit(this.gl);\n  }\n  destroy() {\n    const view = this.renderer.view;\n    this.renderer = null, view.removeEventListener !== void 0 && (view.removeEventListener(\"webglcontextlost\", this.handleContextLost), view.removeEventListener(\"webglcontextrestored\", this.handleContextRestored)), this.gl.useProgram(null), this.extensions.loseContext && this.extensions.loseContext.loseContext();\n  }\n  /** Handle the post-render runner event. */\n  postrender() {\n    this.renderer.objectRenderer.renderingToScreen && this.gl.flush();\n  }\n  /**\n   * Validate context.\n   * @param {WebGLRenderingContext} gl - Render context.\n   */\n  validateContext(gl) {\n    const attributes = gl.getContextAttributes(), isWebGl2 = \"WebGL2RenderingContext\" in globalThis && gl instanceof globalThis.WebGL2RenderingContext;\n    isWebGl2 && (this.webGLVersion = 2), attributes && !attributes.stencil && console.warn(\"Provided WebGL context does not have a stencil buffer, masks may not render correctly\");\n    const hasuint32 = isWebGl2 || !!gl.getExtension(\"OES_element_index_uint\");\n    this.supports.uint32Indices = hasuint32, hasuint32 || console.warn(\"Provided WebGL context does not support 32 index buffer, complex graphics may not render correctly\");\n  }\n}\nContextSystem.defaultOptions = {\n  /**\n   * {@link PIXI.IRendererOptions.context}\n   * @default null\n   * @memberof PIXI.settings.RENDER_OPTIONS\n   */\n  context: null,\n  /**\n   * {@link PIXI.IRendererOptions.antialias}\n   * @default false\n   * @memberof PIXI.settings.RENDER_OPTIONS\n   */\n  antialias: !1,\n  /**\n   * {@link PIXI.IRendererOptions.premultipliedAlpha}\n   * @default true\n   * @memberof PIXI.settings.RENDER_OPTIONS\n   */\n  premultipliedAlpha: !0,\n  /**\n   * {@link PIXI.IRendererOptions.preserveDrawingBuffer}\n   * @default false\n   * @memberof PIXI.settings.RENDER_OPTIONS\n   */\n  preserveDrawingBuffer: !1,\n  /**\n   * {@link PIXI.IRendererOptions.powerPreference}\n   * @default default\n   * @memberof PIXI.settings.RENDER_OPTIONS\n   */\n  powerPreference: \"default\"\n}, /** @ignore */\nContextSystem.extension = {\n  type: ExtensionType.RendererSystem,\n  name: \"context\"\n};\nextensions.add(ContextSystem);\nexport {\n  ContextSystem\n};\n//# sourceMappingURL=ContextSystem.mjs.map\n"],"names":["CONTEXT_UID_COUNTER","ContextSystem","renderer","gl","options","alpha","premultipliedAlpha","view","canvas","settings","ENV","common","event","attributes","isWebGl2","hasuint32","ExtensionType","extensions"],"mappings":"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","x_google_ignoreList":[0]}