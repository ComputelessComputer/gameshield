{"version":3,"file":"index61.js","sources":["../../../node_modules/.pnpm/@pixi+core@7.4.3/node_modules/@pixi/core/lib/render/ObjectRendererSystem.mjs"],"sourcesContent":["import { ExtensionType, extensions } from \"@pixi/extensions\";\nclass ObjectRendererSystem {\n  // renderers scene graph!\n  constructor(renderer) {\n    this.renderer = renderer;\n  }\n  /**\n   * Renders the object to its WebGL view.\n   * @param displayObject - The object to be rendered.\n   * @param options - the options to be passed to the renderer\n   */\n  render(displayObject, options) {\n    const renderer = this.renderer;\n    let renderTexture, clear, transform, skipUpdateTransform;\n    if (options && (renderTexture = options.renderTexture, clear = options.clear, transform = options.transform, skipUpdateTransform = options.skipUpdateTransform), this.renderingToScreen = !renderTexture, renderer.runners.prerender.emit(), renderer.emit(\"prerender\"), renderer.projection.transform = transform, !renderer.context.isLost) {\n      if (renderTexture || (this.lastObjectRendered = displayObject), !skipUpdateTransform) {\n        const cacheParent = displayObject.enableTempParent();\n        displayObject.updateTransform(), displayObject.disableTempParent(cacheParent);\n      }\n      renderer.renderTexture.bind(renderTexture), renderer.batch.currentRenderer.start(), (clear ?? renderer.background.clearBeforeRender) && renderer.renderTexture.clear(), displayObject.render(renderer), renderer.batch.currentRenderer.flush(), renderTexture && (options.blit && renderer.framebuffer.blit(), renderTexture.baseTexture.update()), renderer.runners.postrender.emit(), renderer.projection.transform = null, renderer.emit(\"postrender\");\n    }\n  }\n  destroy() {\n    this.renderer = null, this.lastObjectRendered = null;\n  }\n}\nObjectRendererSystem.extension = {\n  type: ExtensionType.RendererSystem,\n  name: \"objectRenderer\"\n};\nextensions.add(ObjectRendererSystem);\nexport {\n  ObjectRendererSystem\n};\n//# sourceMappingURL=ObjectRendererSystem.mjs.map\n"],"names":["ObjectRendererSystem","renderer","displayObject","options","renderTexture","clear","transform","skipUpdateTransform","cacheParent","ExtensionType","extensions"],"mappings":";AACA,MAAMA,EAAqB;AAAA;AAAA,EAEzB,YAAYC,GAAU;AACpB,SAAK,WAAWA;AAAA,EACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,OAAOC,GAAeC,GAAS;AAC7B,UAAMF,IAAW,KAAK;AACtB,QAAIG,GAAeC,GAAOC,GAAWC;AACrC,QAAIJ,MAAYC,IAAgBD,EAAQ,eAAeE,IAAQF,EAAQ,OAAOG,IAAYH,EAAQ,WAAWI,IAAsBJ,EAAQ,sBAAsB,KAAK,oBAAoB,CAACC,GAAeH,EAAS,QAAQ,UAAU,KAAM,GAAEA,EAAS,KAAK,WAAW,GAAGA,EAAS,WAAW,YAAYK,GAAW,CAACL,EAAS,QAAQ,QAAQ;AAC5U,UAAIG,MAAkB,KAAK,qBAAqBF,IAAgB,CAACK,GAAqB;AACpF,cAAMC,IAAcN,EAAc;AAClC,QAAAA,EAAc,gBAAiB,GAAEA,EAAc,kBAAkBM,CAAW;AAAA,MAC7E;AACD,MAAAP,EAAS,cAAc,KAAKG,CAAa,GAAGH,EAAS,MAAM,gBAAgB,UAAUI,KAASJ,EAAS,WAAW,sBAAsBA,EAAS,cAAc,MAAO,GAAEC,EAAc,OAAOD,CAAQ,GAAGA,EAAS,MAAM,gBAAgB,MAAO,GAAEG,MAAkBD,EAAQ,QAAQF,EAAS,YAAY,KAAI,GAAIG,EAAc,YAAY,WAAWH,EAAS,QAAQ,WAAW,KAAM,GAAEA,EAAS,WAAW,YAAY,MAAMA,EAAS,KAAK,YAAY;AAAA,IACzb;AAAA,EACF;AAAA,EACD,UAAU;AACR,SAAK,WAAW,MAAM,KAAK,qBAAqB;AAAA,EACjD;AACH;AACAD,EAAqB,YAAY;AAAA,EAC/B,MAAMS,EAAc;AAAA,EACpB,MAAM;AACR;AACAC,EAAW,IAAIV,CAAoB;","x_google_ignoreList":[0]}