{"version":3,"file":"index351.js","sources":["../../../node_modules/.pnpm/pixi.js@8.8.1/node_modules/pixi.js/lib/assets/loader/parsers/loadWebFont.mjs"],"sourcesContent":["import { DOMAdapter } from '../../../environment/adapter.mjs';\nimport { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { warn } from '../../../utils/logging/warn.mjs';\nimport { path } from '../../../utils/path.mjs';\nimport { Cache } from '../../cache/Cache.mjs';\nimport { checkDataUrl } from '../../utils/checkDataUrl.mjs';\nimport { checkExtension } from '../../utils/checkExtension.mjs';\nimport { LoaderParserPriority } from './LoaderParser.mjs';\n\n\"use strict\";\nconst validWeights = [\n  \"normal\",\n  \"bold\",\n  \"100\",\n  \"200\",\n  \"300\",\n  \"400\",\n  \"500\",\n  \"600\",\n  \"700\",\n  \"800\",\n  \"900\"\n];\nconst validFontExtensions = [\".ttf\", \".otf\", \".woff\", \".woff2\"];\nconst validFontMIMEs = [\n  \"font/ttf\",\n  \"font/otf\",\n  \"font/woff\",\n  \"font/woff2\"\n];\nconst CSS_IDENT_TOKEN_REGEX = /^(--|-?[A-Z_])[0-9A-Z_-]*$/i;\nfunction getFontFamilyName(url) {\n  const ext = path.extname(url);\n  const name = path.basename(url, ext);\n  const nameWithSpaces = name.replace(/(-|_)/g, \" \");\n  const nameTokens = nameWithSpaces.toLowerCase().split(\" \").map((word) => word.charAt(0).toUpperCase() + word.slice(1));\n  let valid = nameTokens.length > 0;\n  for (const token of nameTokens) {\n    if (!token.match(CSS_IDENT_TOKEN_REGEX)) {\n      valid = false;\n      break;\n    }\n  }\n  let fontFamilyName = nameTokens.join(\" \");\n  if (!valid) {\n    fontFamilyName = `\"${fontFamilyName.replace(/[\\\\\"]/g, \"\\\\$&\")}\"`;\n  }\n  return fontFamilyName;\n}\nconst validURICharactersRegex = /^[0-9A-Za-z%:/?#\\[\\]@!\\$&'()\\*\\+,;=\\-._~]*$/;\nfunction encodeURIWhenNeeded(uri) {\n  if (validURICharactersRegex.test(uri)) {\n    return uri;\n  }\n  return encodeURI(uri);\n}\nconst loadWebFont = {\n  extension: {\n    type: ExtensionType.LoadParser,\n    priority: LoaderParserPriority.Low\n  },\n  name: \"loadWebFont\",\n  test(url) {\n    return checkDataUrl(url, validFontMIMEs) || checkExtension(url, validFontExtensions);\n  },\n  async load(url, options) {\n    const fonts = DOMAdapter.get().getFontFaceSet();\n    if (fonts) {\n      const fontFaces = [];\n      const name = options.data?.family ?? getFontFamilyName(url);\n      const weights = options.data?.weights?.filter((weight) => validWeights.includes(weight)) ?? [\"normal\"];\n      const data = options.data ?? {};\n      for (let i = 0; i < weights.length; i++) {\n        const weight = weights[i];\n        const font = new FontFace(name, `url(${encodeURIWhenNeeded(url)})`, {\n          ...data,\n          weight\n        });\n        await font.load();\n        fonts.add(font);\n        fontFaces.push(font);\n      }\n      Cache.set(`${name}-and-url`, {\n        url,\n        fontFaces\n      });\n      return fontFaces.length === 1 ? fontFaces[0] : fontFaces;\n    }\n    warn(\"[loadWebFont] FontFace API is not supported. Skipping loading font\");\n    return null;\n  },\n  unload(font) {\n    (Array.isArray(font) ? font : [font]).forEach((t) => {\n      Cache.remove(`${t.family}-and-url`);\n      DOMAdapter.get().getFontFaceSet().delete(t);\n    });\n  }\n};\n\nexport { getFontFamilyName, loadWebFont };\n//# sourceMappingURL=loadWebFont.mjs.map\n"],"names":["validWeights","validFontExtensions","validFontMIMEs","CSS_IDENT_TOKEN_REGEX","getFontFamilyName","url","ext","path","nameTokens","word","valid","token","fontFamilyName","validURICharactersRegex","encodeURIWhenNeeded","uri","loadWebFont","ExtensionType","LoaderParserPriority","checkDataUrl","checkExtension","options","fonts","DOMAdapter","fontFaces","name","_a","weights","_c","_b","weight","data","i","font","Cache","warn","t"],"mappings":";;;;;;;;AAUA,MAAMA,IAAe;AAAA,EACnB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GACMC,IAAsB,CAAC,QAAQ,QAAQ,SAAS,QAAQ,GACxDC,IAAiB;AAAA,EACrB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GACMC,IAAwB;AAC9B,SAASC,EAAkBC,GAAK;AAC9B,QAAMC,IAAMC,EAAK,QAAQF,CAAG,GAGtBG,IAFOD,EAAK,SAASF,GAAKC,CAAG,EACP,QAAQ,UAAU,GAAG,EACf,YAAW,EAAG,MAAM,GAAG,EAAE,IAAI,CAACG,MAASA,EAAK,OAAO,CAAC,EAAE,YAAW,IAAKA,EAAK,MAAM,CAAC,CAAC;AACrH,MAAIC,IAAQF,EAAW,SAAS;AAChC,aAAWG,KAASH;AAClB,QAAI,CAACG,EAAM,MAAMR,CAAqB,GAAG;AACvC,MAAAO,IAAQ;AACR;AAAA,IACD;AAEH,MAAIE,IAAiBJ,EAAW,KAAK,GAAG;AACxC,SAAKE,MACHE,IAAiB,IAAIA,EAAe,QAAQ,UAAU,MAAM,CAAC,MAExDA;AACT;AACA,MAAMC,IAA0B;AAChC,SAASC,EAAoBC,GAAK;AAChC,SAAIF,EAAwB,KAAKE,CAAG,IAC3BA,IAEF,UAAUA,CAAG;AACtB;AACK,MAACC,IAAc;AAAA,EAClB,WAAW;AAAA,IACT,MAAMC,EAAc;AAAA,IACpB,UAAUC,EAAqB;AAAA,EAChC;AAAA,EACD,MAAM;AAAA,EACN,KAAKb,GAAK;AACR,WAAOc,EAAad,GAAKH,CAAc,KAAKkB,EAAef,GAAKJ,CAAmB;AAAA,EACpF;AAAA,EACD,MAAM,KAAKI,GAAKgB,GAAS;;AACvB,UAAMC,IAAQC,EAAW,IAAK,EAAC,eAAc;AAC7C,QAAID,GAAO;AACT,YAAME,IAAY,CAAA,GACZC,MAAOC,IAAAL,EAAQ,SAAR,gBAAAK,EAAc,WAAUtB,EAAkBC,CAAG,GACpDsB,MAAUC,KAAAC,IAAAR,EAAQ,SAAR,gBAAAQ,EAAc,YAAd,gBAAAD,EAAuB,OAAO,CAACE,MAAW9B,EAAa,SAAS8B,CAAM,OAAM,CAAC,QAAQ,GAC/FC,IAAOV,EAAQ,QAAQ;AAC7B,eAASW,IAAI,GAAGA,IAAIL,EAAQ,QAAQK,KAAK;AACvC,cAAMF,IAASH,EAAQK,CAAC,GAClBC,IAAO,IAAI,SAASR,GAAM,OAAOX,EAAoBT,CAAG,CAAC,KAAK;AAAA,UAClE,GAAG0B;AAAA,UACH,QAAAD;AAAA,QACV,CAAS;AACD,cAAMG,EAAK,QACXX,EAAM,IAAIW,CAAI,GACdT,EAAU,KAAKS,CAAI;AAAA,MACpB;AACD,aAAAC,EAAM,IAAI,GAAGT,CAAI,YAAY;AAAA,QAC3B,KAAApB;AAAA,QACA,WAAAmB;AAAA,MACR,CAAO,GACMA,EAAU,WAAW,IAAIA,EAAU,CAAC,IAAIA;AAAA,IAChD;AACD,WAAAW,EAAK,oEAAoE,GAClE;AAAA,EACR;AAAA,EACD,OAAOF,GAAM;AACX,KAAC,MAAM,QAAQA,CAAI,IAAIA,IAAO,CAACA,CAAI,GAAG,QAAQ,CAACG,MAAM;AACnD,MAAAF,EAAM,OAAO,GAAGE,EAAE,MAAM,UAAU,GAClCb,EAAW,IAAG,EAAG,eAAgB,EAAC,OAAOa,CAAC;AAAA,IAChD,CAAK;AAAA,EACF;AACH;","x_google_ignoreList":[0]}