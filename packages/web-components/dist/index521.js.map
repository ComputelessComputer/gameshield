{"version":3,"file":"index521.js","sources":["../../../node_modules/.pnpm/pixi.js@8.8.1/node_modules/pixi.js/lib/scene/graphics/shared/svg/SVGParser.mjs"],"sourcesContent":["import { warn } from '../../../../utils/logging/warn.mjs';\nimport { GraphicsPath } from '../path/GraphicsPath.mjs';\nimport { parseSVGDefinitions } from './parseSVGDefinitions.mjs';\nimport { parseSVGFloatAttribute } from './parseSVGFloatAttribute.mjs';\nimport { parseSVGStyle } from './parseSVGStyle.mjs';\n\n\"use strict\";\nfunction SVGParser(svg, graphicsContext) {\n  if (typeof svg === \"string\") {\n    const div = document.createElement(\"div\");\n    div.innerHTML = svg.trim();\n    svg = div.querySelector(\"svg\");\n  }\n  const session = {\n    context: graphicsContext,\n    defs: {},\n    path: new GraphicsPath()\n  };\n  parseSVGDefinitions(svg, session);\n  const children = svg.children;\n  const { fillStyle, strokeStyle } = parseSVGStyle(svg, session);\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    if (child.nodeName.toLowerCase() === \"defs\")\n      continue;\n    renderChildren(child, session, fillStyle, strokeStyle);\n  }\n  return graphicsContext;\n}\nfunction renderChildren(svg, session, fillStyle, strokeStyle) {\n  const children = svg.children;\n  const { fillStyle: f1, strokeStyle: s1 } = parseSVGStyle(svg, session);\n  if (f1 && fillStyle) {\n    fillStyle = { ...fillStyle, ...f1 };\n  } else if (f1) {\n    fillStyle = f1;\n  }\n  if (s1 && strokeStyle) {\n    strokeStyle = { ...strokeStyle, ...s1 };\n  } else if (s1) {\n    strokeStyle = s1;\n  }\n  const noStyle = !fillStyle && !strokeStyle;\n  if (noStyle) {\n    fillStyle = { color: 0 };\n  }\n  let x;\n  let y;\n  let x1;\n  let y1;\n  let x2;\n  let y2;\n  let cx;\n  let cy;\n  let r;\n  let rx;\n  let ry;\n  let points;\n  let pointsString;\n  let d;\n  let graphicsPath;\n  let width;\n  let height;\n  switch (svg.nodeName.toLowerCase()) {\n    case \"path\":\n      d = svg.getAttribute(\"d\");\n      if (svg.getAttribute(\"fill-rule\") === \"evenodd\") {\n        warn(\"SVG Evenodd fill rule not supported, your svg may render incorrectly\");\n      }\n      graphicsPath = new GraphicsPath(d, true);\n      session.context.path(graphicsPath);\n      if (fillStyle)\n        session.context.fill(fillStyle);\n      if (strokeStyle)\n        session.context.stroke(strokeStyle);\n      break;\n    case \"circle\":\n      cx = parseSVGFloatAttribute(svg, \"cx\", 0);\n      cy = parseSVGFloatAttribute(svg, \"cy\", 0);\n      r = parseSVGFloatAttribute(svg, \"r\", 0);\n      session.context.ellipse(cx, cy, r, r);\n      if (fillStyle)\n        session.context.fill(fillStyle);\n      if (strokeStyle)\n        session.context.stroke(strokeStyle);\n      break;\n    case \"rect\":\n      x = parseSVGFloatAttribute(svg, \"x\", 0);\n      y = parseSVGFloatAttribute(svg, \"y\", 0);\n      width = parseSVGFloatAttribute(svg, \"width\", 0);\n      height = parseSVGFloatAttribute(svg, \"height\", 0);\n      rx = parseSVGFloatAttribute(svg, \"rx\", 0);\n      ry = parseSVGFloatAttribute(svg, \"ry\", 0);\n      if (rx || ry) {\n        session.context.roundRect(x, y, width, height, rx || ry);\n      } else {\n        session.context.rect(x, y, width, height);\n      }\n      if (fillStyle)\n        session.context.fill(fillStyle);\n      if (strokeStyle)\n        session.context.stroke(strokeStyle);\n      break;\n    case \"ellipse\":\n      cx = parseSVGFloatAttribute(svg, \"cx\", 0);\n      cy = parseSVGFloatAttribute(svg, \"cy\", 0);\n      rx = parseSVGFloatAttribute(svg, \"rx\", 0);\n      ry = parseSVGFloatAttribute(svg, \"ry\", 0);\n      session.context.beginPath();\n      session.context.ellipse(cx, cy, rx, ry);\n      if (fillStyle)\n        session.context.fill(fillStyle);\n      if (strokeStyle)\n        session.context.stroke(strokeStyle);\n      break;\n    case \"line\":\n      x1 = parseSVGFloatAttribute(svg, \"x1\", 0);\n      y1 = parseSVGFloatAttribute(svg, \"y1\", 0);\n      x2 = parseSVGFloatAttribute(svg, \"x2\", 0);\n      y2 = parseSVGFloatAttribute(svg, \"y2\", 0);\n      session.context.beginPath();\n      session.context.moveTo(x1, y1);\n      session.context.lineTo(x2, y2);\n      if (strokeStyle)\n        session.context.stroke(strokeStyle);\n      break;\n    case \"polygon\":\n      pointsString = svg.getAttribute(\"points\");\n      points = pointsString.match(/\\d+/g).map((n) => parseInt(n, 10));\n      session.context.poly(points, true);\n      if (fillStyle)\n        session.context.fill(fillStyle);\n      if (strokeStyle)\n        session.context.stroke(strokeStyle);\n      break;\n    case \"polyline\":\n      pointsString = svg.getAttribute(\"points\");\n      points = pointsString.match(/\\d+/g).map((n) => parseInt(n, 10));\n      session.context.poly(points, false);\n      if (strokeStyle)\n        session.context.stroke(strokeStyle);\n      break;\n    case \"g\":\n    case \"svg\":\n      break;\n    default: {\n      warn(`[SVG parser] <${svg.nodeName}> elements unsupported`);\n      break;\n    }\n  }\n  if (noStyle) {\n    fillStyle = null;\n  }\n  for (let i = 0; i < children.length; i++) {\n    renderChildren(children[i], session, fillStyle, strokeStyle);\n  }\n}\n\nexport { SVGParser };\n//# sourceMappingURL=SVGParser.mjs.map\n"],"names":["SVGParser","svg","graphicsContext","div","session","GraphicsPath","parseSVGDefinitions","children","fillStyle","strokeStyle","parseSVGStyle","i","child","renderChildren","f1","s1","noStyle","x","y","x1","y1","x2","y2","cx","cy","r","rx","ry","points","pointsString","d","graphicsPath","width","height","warn","parseSVGFloatAttribute","n"],"mappings":"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","x_google_ignoreList":[0]}