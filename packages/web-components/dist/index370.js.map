{"version":3,"file":"index370.js","sources":["../../../node_modules/.pnpm/pixi.js@8.8.1/node_modules/pixi.js/lib/assets/loader/parsers/textures/utils/createTexture.mjs"],"sourcesContent":["import { Texture } from '../../../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { warn } from '../../../../../utils/logging/warn.mjs';\nimport { Cache } from '../../../../cache/Cache.mjs';\n\n\"use strict\";\nfunction createTexture(source, loader, url) {\n  source.label = url;\n  source._sourceOrigin = url;\n  const texture = new Texture({\n    source,\n    label: url\n  });\n  const unload = () => {\n    delete loader.promiseCache[url];\n    if (Cache.has(url)) {\n      Cache.remove(url);\n    }\n  };\n  texture.source.once(\"destroy\", () => {\n    if (loader.promiseCache[url]) {\n      warn(\"[Assets] A TextureSource managed by Assets was destroyed instead of unloaded! Use Assets.unload() instead of destroying the TextureSource.\");\n      unload();\n    }\n  });\n  texture.once(\"destroy\", () => {\n    if (!source.destroyed) {\n      warn(\"[Assets] A Texture managed by Assets was destroyed instead of unloaded! Use Assets.unload() instead of destroying the Texture.\");\n      unload();\n    }\n  });\n  return texture;\n}\n\nexport { createTexture };\n//# sourceMappingURL=createTexture.mjs.map\n"],"names":["createTexture","source","loader","url","texture","Texture","unload","Cache","warn"],"mappings":";;;AAKA,SAASA,EAAcC,GAAQC,GAAQC,GAAK;AAC1C,EAAAF,EAAO,QAAQE,GACfF,EAAO,gBAAgBE;AACvB,QAAMC,IAAU,IAAIC,EAAQ;AAAA,IAC1B,QAAAJ;AAAA,IACA,OAAOE;AAAA,EACX,CAAG,GACKG,IAAS,MAAM;AACnB,WAAOJ,EAAO,aAAaC,CAAG,GAC1BI,EAAM,IAAIJ,CAAG,KACfI,EAAM,OAAOJ,CAAG;AAAA,EAEtB;AACE,SAAAC,EAAQ,OAAO,KAAK,WAAW,MAAM;AACnC,IAAIF,EAAO,aAAaC,CAAG,MACzBK,EAAK,4IAA4I,GACjJF;EAEN,CAAG,GACDF,EAAQ,KAAK,WAAW,MAAM;AAC5B,IAAKH,EAAO,cACVO,EAAK,gIAAgI,GACrIF;EAEN,CAAG,GACMF;AACT;","x_google_ignoreList":[0]}