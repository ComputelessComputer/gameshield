{"version":3,"file":"index386.js","sources":["../../../node_modules/.pnpm/pixi.js@8.8.1/node_modules/pixi.js/lib/events/FederatedPointerEvent.mjs"],"sourcesContent":["import { FederatedMouseEvent } from './FederatedMouseEvent.mjs';\n\n\"use strict\";\nclass FederatedPointerEvent extends FederatedMouseEvent {\n  constructor() {\n    super(...arguments);\n    /**\n     * The width of the pointer's contact along the x-axis, measured in CSS pixels.\n     * radiusX of TouchEvents will be represented by this value.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/width\n     */\n    this.width = 0;\n    /**\n     * The height of the pointer's contact along the y-axis, measured in CSS pixels.\n     * radiusY of TouchEvents will be represented by this value.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/height\n     */\n    this.height = 0;\n    /**\n     * Indicates whether or not the pointer device that created the event is the primary pointer.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/isPrimary\n     */\n    this.isPrimary = false;\n  }\n  // Only included for completeness for now\n  getCoalescedEvents() {\n    if (this.type === \"pointermove\" || this.type === \"mousemove\" || this.type === \"touchmove\") {\n      return [this];\n    }\n    return [];\n  }\n  // Only included for completeness for now\n  getPredictedEvents() {\n    throw new Error(\"getPredictedEvents is not supported!\");\n  }\n}\n\nexport { FederatedPointerEvent };\n//# sourceMappingURL=FederatedPointerEvent.mjs.map\n"],"names":["FederatedPointerEvent","FederatedMouseEvent"],"mappings":";AAGA,MAAMA,UAA8BC,EAAoB;AAAA,EACtD,cAAc;AACZ,UAAM,GAAG,SAAS,GAMlB,KAAK,QAAQ,GAMb,KAAK,SAAS,GAKd,KAAK,YAAY;AAAA,EAClB;AAAA;AAAA,EAED,qBAAqB;AACnB,WAAI,KAAK,SAAS,iBAAiB,KAAK,SAAS,eAAe,KAAK,SAAS,cACrE,CAAC,IAAI,IAEP;EACR;AAAA;AAAA,EAED,qBAAqB;AACnB,UAAM,IAAI,MAAM,sCAAsC;AAAA,EACvD;AACH;","x_google_ignoreList":[0]}