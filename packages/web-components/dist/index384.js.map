{"version":3,"file":"index384.js","sources":["../../../node_modules/.pnpm/pixi.js@8.8.1/node_modules/pixi.js/lib/events/EventTicker.mjs"],"sourcesContent":["import { UPDATE_PRIORITY } from '../ticker/const.mjs';\nimport { Ticker } from '../ticker/Ticker.mjs';\n\n\"use strict\";\nclass EventsTickerClass {\n  constructor() {\n    /** The frequency that fake events will be fired. */\n    this.interactionFrequency = 10;\n    this._deltaTime = 0;\n    this._didMove = false;\n    this._tickerAdded = false;\n    this._pauseUpdate = true;\n  }\n  /**\n   * Initializes the event ticker.\n   * @param events - The event system.\n   */\n  init(events) {\n    this.removeTickerListener();\n    this.events = events;\n    this.interactionFrequency = 10;\n    this._deltaTime = 0;\n    this._didMove = false;\n    this._tickerAdded = false;\n    this._pauseUpdate = true;\n  }\n  /** Whether to pause the update checks or not. */\n  get pauseUpdate() {\n    return this._pauseUpdate;\n  }\n  set pauseUpdate(paused) {\n    this._pauseUpdate = paused;\n  }\n  /** Adds the ticker listener. */\n  addTickerListener() {\n    if (this._tickerAdded || !this.domElement) {\n      return;\n    }\n    Ticker.system.add(this._tickerUpdate, this, UPDATE_PRIORITY.INTERACTION);\n    this._tickerAdded = true;\n  }\n  /** Removes the ticker listener. */\n  removeTickerListener() {\n    if (!this._tickerAdded) {\n      return;\n    }\n    Ticker.system.remove(this._tickerUpdate, this);\n    this._tickerAdded = false;\n  }\n  /** Sets flag to not fire extra events when the user has already moved there mouse */\n  pointerMoved() {\n    this._didMove = true;\n  }\n  /** Updates the state of interactive objects. */\n  _update() {\n    if (!this.domElement || this._pauseUpdate) {\n      return;\n    }\n    if (this._didMove) {\n      this._didMove = false;\n      return;\n    }\n    const rootPointerEvent = this.events[\"_rootPointerEvent\"];\n    if (this.events.supportsTouchEvents && rootPointerEvent.pointerType === \"touch\") {\n      return;\n    }\n    globalThis.document.dispatchEvent(new PointerEvent(\"pointermove\", {\n      clientX: rootPointerEvent.clientX,\n      clientY: rootPointerEvent.clientY,\n      pointerType: rootPointerEvent.pointerType,\n      pointerId: rootPointerEvent.pointerId\n    }));\n  }\n  /**\n   * Updates the state of interactive objects if at least {@link interactionFrequency}\n   * milliseconds have passed since the last invocation.\n   *\n   * Invoked by a throttled ticker update from {@link Ticker.system}.\n   * @param ticker - The throttled ticker.\n   */\n  _tickerUpdate(ticker) {\n    this._deltaTime += ticker.deltaTime;\n    if (this._deltaTime < this.interactionFrequency) {\n      return;\n    }\n    this._deltaTime = 0;\n    this._update();\n  }\n}\nconst EventsTicker = new EventsTickerClass();\n\nexport { EventsTicker };\n//# sourceMappingURL=EventTicker.mjs.map\n"],"names":["EventsTickerClass","events","paused","Ticker","UPDATE_PRIORITY","rootPointerEvent","ticker","EventsTicker"],"mappings":";;AAIA,MAAMA,EAAkB;AAAA,EACtB,cAAc;AAEZ,SAAK,uBAAuB,IAC5B,KAAK,aAAa,GAClB,KAAK,WAAW,IAChB,KAAK,eAAe,IACpB,KAAK,eAAe;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,KAAKC,GAAQ;AACX,SAAK,qBAAoB,GACzB,KAAK,SAASA,GACd,KAAK,uBAAuB,IAC5B,KAAK,aAAa,GAClB,KAAK,WAAW,IAChB,KAAK,eAAe,IACpB,KAAK,eAAe;AAAA,EACrB;AAAA;AAAA,EAED,IAAI,cAAc;AAChB,WAAO,KAAK;AAAA,EACb;AAAA,EACD,IAAI,YAAYC,GAAQ;AACtB,SAAK,eAAeA;AAAA,EACrB;AAAA;AAAA,EAED,oBAAoB;AAClB,IAAI,KAAK,gBAAgB,CAAC,KAAK,eAG/BC,EAAO,OAAO,IAAI,KAAK,eAAe,MAAMC,EAAgB,WAAW,GACvE,KAAK,eAAe;AAAA,EACrB;AAAA;AAAA,EAED,uBAAuB;AACrB,IAAK,KAAK,iBAGVD,EAAO,OAAO,OAAO,KAAK,eAAe,IAAI,GAC7C,KAAK,eAAe;AAAA,EACrB;AAAA;AAAA,EAED,eAAe;AACb,SAAK,WAAW;AAAA,EACjB;AAAA;AAAA,EAED,UAAU;AACR,QAAI,CAAC,KAAK,cAAc,KAAK;AAC3B;AAEF,QAAI,KAAK,UAAU;AACjB,WAAK,WAAW;AAChB;AAAA,IACD;AACD,UAAME,IAAmB,KAAK,OAAO;AACrC,IAAI,KAAK,OAAO,uBAAuBA,EAAiB,gBAAgB,WAGxE,WAAW,SAAS,cAAc,IAAI,aAAa,eAAe;AAAA,MAChE,SAASA,EAAiB;AAAA,MAC1B,SAASA,EAAiB;AAAA,MAC1B,aAAaA,EAAiB;AAAA,MAC9B,WAAWA,EAAiB;AAAA,IAC7B,CAAA,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQD,cAAcC,GAAQ;AAEpB,IADA,KAAK,cAAcA,EAAO,WACtB,OAAK,aAAa,KAAK,0BAG3B,KAAK,aAAa,GAClB,KAAK,QAAO;AAAA,EACb;AACH;AACK,MAACC,IAAe,IAAIP,EAAiB;","x_google_ignoreList":[0]}