{"version":3,"file":"index198.js","sources":["../../../node_modules/.pnpm/@pixi+core@7.4.3/node_modules/@pixi/core/lib/utils/QuadUv.mjs"],"sourcesContent":["import { Buffer } from \"../geometry/Buffer.mjs\";\nimport { Geometry } from \"../geometry/Geometry.mjs\";\nclass QuadUv extends Geometry {\n  constructor() {\n    super(), this.vertices = new Float32Array([\n      -1,\n      -1,\n      1,\n      -1,\n      1,\n      1,\n      -1,\n      1\n    ]), this.uvs = new Float32Array([\n      0,\n      0,\n      1,\n      0,\n      1,\n      1,\n      0,\n      1\n    ]), this.vertexBuffer = new Buffer(this.vertices), this.uvBuffer = new Buffer(this.uvs), this.addAttribute(\"aVertexPosition\", this.vertexBuffer).addAttribute(\"aTextureCoord\", this.uvBuffer).addIndex([0, 1, 2, 0, 2, 3]);\n  }\n  /**\n   * Maps two Rectangle to the quad.\n   * @param targetTextureFrame - The first rectangle\n   * @param destinationFrame - The second rectangle\n   * @returns - Returns itself.\n   */\n  map(targetTextureFrame, destinationFrame) {\n    let x = 0, y = 0;\n    return this.uvs[0] = x, this.uvs[1] = y, this.uvs[2] = x + destinationFrame.width / targetTextureFrame.width, this.uvs[3] = y, this.uvs[4] = x + destinationFrame.width / targetTextureFrame.width, this.uvs[5] = y + destinationFrame.height / targetTextureFrame.height, this.uvs[6] = x, this.uvs[7] = y + destinationFrame.height / targetTextureFrame.height, x = destinationFrame.x, y = destinationFrame.y, this.vertices[0] = x, this.vertices[1] = y, this.vertices[2] = x + destinationFrame.width, this.vertices[3] = y, this.vertices[4] = x + destinationFrame.width, this.vertices[5] = y + destinationFrame.height, this.vertices[6] = x, this.vertices[7] = y + destinationFrame.height, this.invalidate(), this;\n  }\n  /**\n   * Legacy upload method, just marks buffers dirty.\n   * @returns - Returns itself.\n   */\n  invalidate() {\n    return this.vertexBuffer._updateID++, this.uvBuffer._updateID++, this;\n  }\n}\nexport {\n  QuadUv\n};\n//# sourceMappingURL=QuadUv.mjs.map\n"],"names":["QuadUv","Geometry","Buffer","targetTextureFrame","destinationFrame","x","y"],"mappings":";;AAEA,MAAMA,UAAeC,EAAS;AAAA,EAC5B,cAAc;AACZ,aAAS,KAAK,WAAW,IAAI,aAAa;AAAA,MACxC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD,CAAA,GAAG,KAAK,MAAM,IAAI,aAAa;AAAA,MAC9B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACN,CAAK,GAAG,KAAK,eAAe,IAAIC,EAAO,KAAK,QAAQ,GAAG,KAAK,WAAW,IAAIA,EAAO,KAAK,GAAG,GAAG,KAAK,aAAa,mBAAmB,KAAK,YAAY,EAAE,aAAa,iBAAiB,KAAK,QAAQ,EAAE,SAAS,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,EAC1N;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,IAAIC,GAAoBC,GAAkB;AACxC,QAAIC,IAAI,GAAGC,IAAI;AACf,WAAO,KAAK,IAAI,CAAC,IAAID,GAAG,KAAK,IAAI,CAAC,IAAIC,GAAG,KAAK,IAAI,CAAC,IAAID,IAAID,EAAiB,QAAQD,EAAmB,OAAO,KAAK,IAAI,CAAC,IAAIG,GAAG,KAAK,IAAI,CAAC,IAAID,IAAID,EAAiB,QAAQD,EAAmB,OAAO,KAAK,IAAI,CAAC,IAAIG,IAAIF,EAAiB,SAASD,EAAmB,QAAQ,KAAK,IAAI,CAAC,IAAIE,GAAG,KAAK,IAAI,CAAC,IAAIC,IAAIF,EAAiB,SAASD,EAAmB,QAAQE,IAAID,EAAiB,GAAGE,IAAIF,EAAiB,GAAG,KAAK,SAAS,CAAC,IAAIC,GAAG,KAAK,SAAS,CAAC,IAAIC,GAAG,KAAK,SAAS,CAAC,IAAID,IAAID,EAAiB,OAAO,KAAK,SAAS,CAAC,IAAIE,GAAG,KAAK,SAAS,CAAC,IAAID,IAAID,EAAiB,OAAO,KAAK,SAAS,CAAC,IAAIE,IAAIF,EAAiB,QAAQ,KAAK,SAAS,CAAC,IAAIC,GAAG,KAAK,SAAS,CAAC,IAAIC,IAAIF,EAAiB,QAAQ,KAAK,WAAU,GAAI;AAAA,EAC7rB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,aAAa;AACX,WAAO,KAAK,aAAa,aAAa,KAAK,SAAS,aAAa;AAAA,EAClE;AACH;","x_google_ignoreList":[0]}