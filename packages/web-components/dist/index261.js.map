{"version":3,"file":"index261.js","sources":["../../../node_modules/.pnpm/@pixi+graphics@7.4.3_@pixi+core@7.4.3_@pixi+display@7.4.3_@pixi+core@7.4.3__@pixi+sprit_3c40fa602f454a6b22dad0b27bc41147/node_modules/@pixi/graphics/lib/utils/buildPoly.mjs"],"sourcesContent":["import { utils } from \"@pixi/core\";\nfunction fixOrientation(points, hole = !1) {\n  const m = points.length;\n  if (m < 6)\n    return;\n  let area = 0;\n  for (let i = 0, x1 = points[m - 2], y1 = points[m - 1]; i < m; i += 2) {\n    const x2 = points[i], y2 = points[i + 1];\n    area += (x2 - x1) * (y2 + y1), x1 = x2, y1 = y2;\n  }\n  if (!hole && area > 0 || hole && area <= 0) {\n    const n = m / 2;\n    for (let i = n + n % 2; i < m; i += 2) {\n      const i1 = m - i - 2, i2 = m - i - 1, i3 = i, i4 = i + 1;\n      [points[i1], points[i3]] = [points[i3], points[i1]], [points[i2], points[i4]] = [points[i4], points[i2]];\n    }\n  }\n}\nconst buildPoly = {\n  build(graphicsData) {\n    graphicsData.points = graphicsData.shape.points.slice();\n  },\n  triangulate(graphicsData, graphicsGeometry) {\n    let points = graphicsData.points;\n    const holes = graphicsData.holes, verts = graphicsGeometry.points, indices = graphicsGeometry.indices;\n    if (points.length >= 6) {\n      fixOrientation(points, !1);\n      const holeArray = [];\n      for (let i = 0; i < holes.length; i++) {\n        const hole = holes[i];\n        fixOrientation(hole.points, !0), holeArray.push(points.length / 2), points = points.concat(hole.points);\n      }\n      const triangles = utils.earcut(points, holeArray, 2);\n      if (!triangles)\n        return;\n      const vertPos = verts.length / 2;\n      for (let i = 0; i < triangles.length; i += 3)\n        indices.push(triangles[i] + vertPos), indices.push(triangles[i + 1] + vertPos), indices.push(triangles[i + 2] + vertPos);\n      for (let i = 0; i < points.length; i++)\n        verts.push(points[i]);\n    }\n  }\n};\nexport {\n  buildPoly\n};\n//# sourceMappingURL=buildPoly.mjs.map\n"],"names":["fixOrientation","points","hole","m","area","i","x1","y1","x2","y2","n","i1","i2","i3","i4","buildPoly","graphicsData","graphicsGeometry","holes","verts","indices","holeArray","triangles","utils.earcut","vertPos"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAASA,EAAeC,GAAQC,IAAO,IAAI;AACzC,QAAMC,IAAIF,EAAO;AACjB,MAAIE,IAAI;AACN;AACF,MAAIC,IAAO;AACX,WAASC,IAAI,GAAGC,IAAKL,EAAOE,IAAI,CAAC,GAAGI,IAAKN,EAAOE,IAAI,CAAC,GAAGE,IAAIF,GAAGE,KAAK,GAAG;AACrE,UAAMG,IAAKP,EAAOI,CAAC,GAAGI,IAAKR,EAAOI,IAAI,CAAC;AACvC,IAAAD,MAASI,IAAKF,MAAOG,IAAKF,IAAKD,IAAKE,GAAID,IAAKE;AAAA,EAC9C;AACD,MAAI,CAACP,KAAQE,IAAO,KAAKF,KAAQE,KAAQ,GAAG;AAC1C,UAAMM,IAAIP,IAAI;AACd,aAASE,IAAIK,IAAIA,IAAI,GAAGL,IAAIF,GAAGE,KAAK,GAAG;AACrC,YAAMM,IAAKR,IAAIE,IAAI,GAAGO,IAAKT,IAAIE,IAAI,GAAGQ,IAAKR,GAAGS,IAAKT,IAAI;AACvD,OAACJ,EAAOU,CAAE,GAAGV,EAAOY,CAAE,CAAC,IAAI,CAACZ,EAAOY,CAAE,GAAGZ,EAAOU,CAAE,CAAC,GAAG,CAACV,EAAOW,CAAE,GAAGX,EAAOa,CAAE,CAAC,IAAI,CAACb,EAAOa,CAAE,GAAGb,EAAOW,CAAE,CAAC;AAAA,IACxG;AAAA,EACF;AACH;AACK,MAACG,KAAY;AAAA,EAChB,MAAMC,GAAc;AAClB,IAAAA,EAAa,SAASA,EAAa,MAAM,OAAO,MAAK;AAAA,EACtD;AAAA,EACD,YAAYA,GAAcC,GAAkB;AAC1C,QAAIhB,IAASe,EAAa;AAC1B,UAAME,IAAQF,EAAa,OAAOG,IAAQF,EAAiB,QAAQG,IAAUH,EAAiB;AAC9F,QAAIhB,EAAO,UAAU,GAAG;AACtB,MAAAD,EAAeC,GAAQ,EAAE;AACzB,YAAMoB,IAAY,CAAA;AAClB,eAAS,IAAI,GAAG,IAAIH,EAAM,QAAQ,KAAK;AACrC,cAAMhB,IAAOgB,EAAM,CAAC;AACpB,QAAAlB,EAAeE,EAAK,QAAQ,EAAE,GAAGmB,EAAU,KAAKpB,EAAO,SAAS,CAAC,GAAGA,IAASA,EAAO,OAAOC,EAAK,MAAM;AAAA,MACvG;AACD,YAAMoB,IAAYC,EAAatB,GAAQoB,GAAW,CAAC;AACnD,UAAI,CAACC;AACH;AACF,YAAME,IAAUL,EAAM,SAAS;AAC/B,eAAS,IAAI,GAAG,IAAIG,EAAU,QAAQ,KAAK;AACzC,QAAAF,EAAQ,KAAKE,EAAU,CAAC,IAAIE,CAAO,GAAGJ,EAAQ,KAAKE,EAAU,IAAI,CAAC,IAAIE,CAAO,GAAGJ,EAAQ,KAAKE,EAAU,IAAI,CAAC,IAAIE,CAAO;AACzH,eAAS,IAAI,GAAG,IAAIvB,EAAO,QAAQ;AACjC,QAAAkB,EAAM,KAAKlB,EAAO,CAAC,CAAC;AAAA,IACvB;AAAA,EACF;AACH;","x_google_ignoreList":[0]}