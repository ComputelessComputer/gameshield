{"version":3,"file":"index492.js","sources":["../../../node_modules/.pnpm/pixi.js@8.8.1/node_modules/pixi.js/lib/scene/container/container-mixins/measureMixin.mjs"],"sourcesContent":["import { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { Bounds } from '../bounds/Bounds.mjs';\nimport { getGlobalBounds } from '../bounds/getGlobalBounds.mjs';\nimport { getLocalBounds } from '../bounds/getLocalBounds.mjs';\nimport { checkChildrenDidChange } from '../utils/checkChildrenDidChange.mjs';\n\n\"use strict\";\nconst tempMatrix = new Matrix();\nconst measureMixin = {\n  _localBoundsCacheId: -1,\n  _localBoundsCacheData: null,\n  _setWidth(value, localWidth) {\n    const sign = Math.sign(this.scale.x) || 1;\n    if (localWidth !== 0) {\n      this.scale.x = value / localWidth * sign;\n    } else {\n      this.scale.x = sign;\n    }\n  },\n  _setHeight(value, localHeight) {\n    const sign = Math.sign(this.scale.y) || 1;\n    if (localHeight !== 0) {\n      this.scale.y = value / localHeight * sign;\n    } else {\n      this.scale.y = sign;\n    }\n  },\n  /**\n   * Retrieves the local bounds of the container as a Bounds object.\n   * @returns - The bounding area.\n   * @memberof scene.Container#\n   */\n  getLocalBounds() {\n    if (!this._localBoundsCacheData) {\n      this._localBoundsCacheData = {\n        data: [],\n        index: 1,\n        didChange: false,\n        localBounds: new Bounds()\n      };\n    }\n    const localBoundsCacheData = this._localBoundsCacheData;\n    localBoundsCacheData.index = 1;\n    localBoundsCacheData.didChange = false;\n    if (localBoundsCacheData.data[0] !== this._didViewChangeTick) {\n      localBoundsCacheData.didChange = true;\n      localBoundsCacheData.data[0] = this._didViewChangeTick;\n    }\n    checkChildrenDidChange(this, localBoundsCacheData);\n    if (localBoundsCacheData.didChange) {\n      getLocalBounds(this, localBoundsCacheData.localBounds, tempMatrix);\n    }\n    return localBoundsCacheData.localBounds;\n  },\n  /**\n   * Calculates and returns the (world) bounds of the display object as a [Rectangle]{@link Rectangle}.\n   * @param skipUpdate - Setting to `true` will stop the transforms of the scene graph from\n   *  being updated. This means the calculation returned MAY be out of date BUT will give you a\n   *  nice performance boost.\n   * @param bounds - Optional bounds to store the result of the bounds calculation.\n   * @returns - The minimum axis-aligned rectangle in world space that fits around this object.\n   * @memberof scene.Container#\n   */\n  getBounds(skipUpdate, bounds) {\n    return getGlobalBounds(this, skipUpdate, bounds || new Bounds());\n  }\n};\n\nexport { measureMixin };\n//# sourceMappingURL=measureMixin.mjs.map\n"],"names":["tempMatrix","Matrix","measureMixin","value","localWidth","sign","localHeight","Bounds","localBoundsCacheData","checkChildrenDidChange","getLocalBounds","skipUpdate","bounds","getGlobalBounds"],"mappings":";;;;;AAOA,MAAMA,IAAa,IAAIC,KACjBC,IAAe;AAAA,EACnB,qBAAqB;AAAA,EACrB,uBAAuB;AAAA,EACvB,UAAUC,GAAOC,GAAY;AAC3B,UAAMC,IAAO,KAAK,KAAK,KAAK,MAAM,CAAC,KAAK;AACxC,IAAID,MAAe,IACjB,KAAK,MAAM,IAAID,IAAQC,IAAaC,IAEpC,KAAK,MAAM,IAAIA;AAAA,EAElB;AAAA,EACD,WAAWF,GAAOG,GAAa;AAC7B,UAAMD,IAAO,KAAK,KAAK,KAAK,MAAM,CAAC,KAAK;AACxC,IAAIC,MAAgB,IAClB,KAAK,MAAM,IAAIH,IAAQG,IAAcD,IAErC,KAAK,MAAM,IAAIA;AAAA,EAElB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,iBAAiB;AACf,IAAK,KAAK,0BACR,KAAK,wBAAwB;AAAA,MAC3B,MAAM,CAAE;AAAA,MACR,OAAO;AAAA,MACP,WAAW;AAAA,MACX,aAAa,IAAIE,EAAQ;AAAA,IACjC;AAEI,UAAMC,IAAuB,KAAK;AAClC,WAAAA,EAAqB,QAAQ,GAC7BA,EAAqB,YAAY,IAC7BA,EAAqB,KAAK,CAAC,MAAM,KAAK,uBACxCA,EAAqB,YAAY,IACjCA,EAAqB,KAAK,CAAC,IAAI,KAAK,qBAEtCC,EAAuB,MAAMD,CAAoB,GAC7CA,EAAqB,aACvBE,EAAe,MAAMF,EAAqB,aAAaR,CAAU,GAE5DQ,EAAqB;AAAA,EAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUD,UAAUG,GAAYC,GAAQ;AAC5B,WAAOC,EAAgB,MAAMF,GAAYC,KAAU,IAAIL,EAAM,CAAE;AAAA,EAChE;AACH;","x_google_ignoreList":[0]}