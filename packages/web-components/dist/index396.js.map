{"version":3,"file":"index396.js","sources":["../../../node_modules/.pnpm/pixi.js@8.8.1/node_modules/pixi.js/lib/rendering/renderers/shared/shader/UniformGroup.mjs"],"sourcesContent":["import { uid } from '../../../../utils/data/uid.mjs';\nimport { createIdFromString } from '../utils/createIdFromString.mjs';\nimport { UNIFORM_TYPES_MAP, UNIFORM_TYPES_VALUES } from './types.mjs';\nimport { getDefaultUniformValue } from './utils/getDefaultUniformValue.mjs';\n\n\"use strict\";\nconst _UniformGroup = class _UniformGroup {\n  /**\n   * Create a new Uniform group\n   * @param uniformStructures - The structures of the uniform group\n   * @param options - The optional parameters of this uniform group\n   */\n  constructor(uniformStructures, options) {\n    /** used internally to know if a uniform group was used in the last render pass */\n    this._touched = 0;\n    /** a unique id for this uniform group used through the renderer */\n    this.uid = uid(\"uniform\");\n    /** a resource type, used to identify how to handle it when its in a bind group / shader resource */\n    this._resourceType = \"uniformGroup\";\n    /** the resource id used internally by the renderer to build bind group keys */\n    this._resourceId = uid(\"resource\");\n    /** used ito identify if this is a uniform group */\n    this.isUniformGroup = true;\n    /**\n     * used to flag if this Uniform groups data is different from what it has stored in its buffer / on the GPU\n     * @internal\n     * @ignore\n     */\n    this._dirtyId = 0;\n    // implementing the interface - UniformGroup are not destroyed\n    this.destroyed = false;\n    options = { ..._UniformGroup.defaultOptions, ...options };\n    this.uniformStructures = uniformStructures;\n    const uniforms = {};\n    for (const i in uniformStructures) {\n      const uniformData = uniformStructures[i];\n      uniformData.name = i;\n      uniformData.size = uniformData.size ?? 1;\n      if (!UNIFORM_TYPES_MAP[uniformData.type]) {\n        throw new Error(`Uniform type ${uniformData.type} is not supported. Supported uniform types are: ${UNIFORM_TYPES_VALUES.join(\", \")}`);\n      }\n      uniformData.value ?? (uniformData.value = getDefaultUniformValue(uniformData.type, uniformData.size));\n      uniforms[i] = uniformData.value;\n    }\n    this.uniforms = uniforms;\n    this._dirtyId = 1;\n    this.ubo = options.ubo;\n    this.isStatic = options.isStatic;\n    this._signature = createIdFromString(Object.keys(uniforms).map(\n      (i) => `${i}-${uniformStructures[i].type}`\n    ).join(\"-\"), \"uniform-group\");\n  }\n  /** Call this if you want the uniform groups data to be uploaded to the GPU only useful if `isStatic` is true. */\n  update() {\n    this._dirtyId++;\n  }\n};\n/** The default options used by the uniform group. */\n_UniformGroup.defaultOptions = {\n  /** if true the UniformGroup is handled as an Uniform buffer object. */\n  ubo: false,\n  /** if true, then you are responsible for when the data is uploaded to the GPU by calling `update()` */\n  isStatic: false\n};\nlet UniformGroup = _UniformGroup;\n\nexport { UniformGroup };\n//# sourceMappingURL=UniformGroup.mjs.map\n"],"names":["_UniformGroup","uniformStructures","options","uid","uniforms","uniformData","UNIFORM_TYPES_MAP","UNIFORM_TYPES_VALUES","getDefaultUniformValue","createIdFromString","UniformGroup"],"mappings":";;;;AAMA,MAAMA,IAAgB,MAAMA,EAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMxC,YAAYC,GAAmBC,GAAS;AAEtC,SAAK,WAAW,GAEhB,KAAK,MAAMC,EAAI,SAAS,GAExB,KAAK,gBAAgB,gBAErB,KAAK,cAAcA,EAAI,UAAU,GAEjC,KAAK,iBAAiB,IAMtB,KAAK,WAAW,GAEhB,KAAK,YAAY,IACjBD,IAAU,EAAE,GAAGF,EAAc,gBAAgB,GAAGE,EAAO,GACvD,KAAK,oBAAoBD;AACzB,UAAMG,IAAW,CAAA;AACjB,eAAW,KAAKH,GAAmB;AACjC,YAAMI,IAAcJ,EAAkB,CAAC;AAGvC,UAFAI,EAAY,OAAO,GACnBA,EAAY,OAAOA,EAAY,QAAQ,GACnC,CAACC,EAAkBD,EAAY,IAAI;AACrC,cAAM,IAAI,MAAM,gBAAgBA,EAAY,IAAI,mDAAmDE,EAAqB,KAAK,IAAI,CAAC,EAAE;AAEtI,MAAAF,EAAY,UAAUA,EAAY,QAAQG,EAAuBH,EAAY,MAAMA,EAAY,IAAI,IACnGD,EAAS,CAAC,IAAIC,EAAY;AAAA,IAC3B;AACD,SAAK,WAAWD,GAChB,KAAK,WAAW,GAChB,KAAK,MAAMF,EAAQ,KACnB,KAAK,WAAWA,EAAQ,UACxB,KAAK,aAAaO,EAAmB,OAAO,KAAKL,CAAQ,EAAE;AAAA,MACzD,CAAC,MAAM,GAAG,CAAC,IAAIH,EAAkB,CAAC,EAAE,IAAI;AAAA,IACzC,EAAC,KAAK,GAAG,GAAG,eAAe;AAAA,EAC7B;AAAA;AAAA,EAED,SAAS;AACP,SAAK;AAAA,EACN;AACH;AAEAD,EAAc,iBAAiB;AAAA;AAAA,EAE7B,KAAK;AAAA;AAAA,EAEL,UAAU;AACZ;AACG,IAACU,IAAeV;","x_google_ignoreList":[0]}