{"version":3,"file":"index517.js","sources":["../../../node_modules/.pnpm/pixi.js@8.8.1/node_modules/pixi.js/lib/scene/graphics/shared/fill/FillGradient.mjs"],"sourcesContent":["import { Color } from '../../../../color/Color.mjs';\nimport { DOMAdapter } from '../../../../environment/adapter.mjs';\nimport { Matrix } from '../../../../maths/matrix/Matrix.mjs';\nimport { ImageSource } from '../../../../rendering/renderers/shared/texture/sources/ImageSource.mjs';\nimport { Texture } from '../../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { uid } from '../../../../utils/data/uid.mjs';\nimport { deprecation } from '../../../../utils/logging/deprecation.mjs';\nimport { definedProps } from '../../../container/utils/definedProps.mjs';\n\n\"use strict\";\nconst emptyColorStops = [{ offset: 0, color: \"white\" }, { offset: 1, color: \"black\" }];\nconst _FillGradient = class _FillGradient {\n  constructor(...args) {\n    /** Unique identifier for this gradient instance */\n    this.uid = uid(\"fillGradient\");\n    /** Type of gradient - currently only supports 'linear' */\n    this.type = \"linear\";\n    /** Array of color stops defining the gradient */\n    this.colorStops = [];\n    let options = ensureGradientOptions(args);\n    const defaults = options.type === \"radial\" ? _FillGradient.defaultRadialOptions : _FillGradient.defaultLinearOptions;\n    options = { ...defaults, ...definedProps(options) };\n    this._textureSize = options.textureSize;\n    if (options.type === \"radial\") {\n      this.center = options.center;\n      this.outerCenter = options.outerCenter ?? this.center;\n      this.innerRadius = options.innerRadius;\n      this.outerRadius = options.outerRadius;\n      this.scale = options.scale;\n      this.rotation = options.rotation;\n    } else {\n      this.start = options.start;\n      this.end = options.end;\n    }\n    this.textureSpace = options.textureSpace;\n    this.type = options.type;\n    options.colorStops.forEach((stop) => {\n      this.addColorStop(stop.offset, stop.color);\n    });\n  }\n  /**\n   * Adds a color stop to the gradient\n   * @param offset - Position of the stop (0-1)\n   * @param color - Color of the stop\n   * @returns This gradient instance for chaining\n   */\n  addColorStop(offset, color) {\n    this.colorStops.push({ offset, color: Color.shared.setValue(color).toHexa() });\n    return this;\n  }\n  /**\n   * Builds the internal texture and transform for the gradient.\n   * Called automatically when the gradient is first used.\n   * @internal\n   */\n  buildLinearGradient() {\n    if (this.texture)\n      return;\n    const colorStops = this.colorStops.length ? this.colorStops : emptyColorStops;\n    const defaultSize = this._textureSize;\n    const { canvas, context } = getCanvas(defaultSize, 1);\n    const gradient = context.createLinearGradient(0, 0, this._textureSize, 0);\n    addColorStops(gradient, colorStops);\n    context.fillStyle = gradient;\n    context.fillRect(0, 0, defaultSize, 1);\n    this.texture = new Texture({\n      source: new ImageSource({\n        resource: canvas\n      })\n    });\n    const { x: x0, y: y0 } = this.start;\n    const { x: x1, y: y1 } = this.end;\n    const m = new Matrix();\n    const dx = x1 - x0;\n    const dy = y1 - y0;\n    const dist = Math.sqrt(dx * dx + dy * dy);\n    const angle = Math.atan2(dy, dx);\n    m.scale(dist / defaultSize, 1);\n    m.rotate(angle);\n    m.translate(x0, y0);\n    if (this.textureSpace === \"local\") {\n      m.scale(defaultSize, defaultSize);\n    }\n    this.transform = m;\n  }\n  buildGradient() {\n    if (this.type === \"linear\") {\n      this.buildLinearGradient();\n    } else {\n      this.buildRadialGradient();\n    }\n  }\n  buildRadialGradient() {\n    if (this.texture)\n      return;\n    const colorStops = this.colorStops.length ? this.colorStops : emptyColorStops;\n    const defaultSize = this._textureSize;\n    const { canvas, context } = getCanvas(defaultSize, defaultSize);\n    const { x: x0, y: y0 } = this.center;\n    const { x: x1, y: y1 } = this.outerCenter;\n    const r0 = this.innerRadius;\n    const r1 = this.outerRadius;\n    const ox = x1 - r1;\n    const oy = y1 - r1;\n    const scale = defaultSize / (r1 * 2);\n    const cx = (x0 - ox) * scale;\n    const cy = (y0 - oy) * scale;\n    const gradient = context.createRadialGradient(\n      cx,\n      cy,\n      r0 * scale,\n      (x1 - ox) * scale,\n      (y1 - oy) * scale,\n      r1 * scale\n    );\n    addColorStops(gradient, colorStops);\n    context.fillStyle = colorStops[colorStops.length - 1].color;\n    context.fillRect(0, 0, defaultSize, defaultSize);\n    context.fillStyle = gradient;\n    context.translate(cx, cy);\n    context.rotate(this.rotation);\n    context.scale(1, this.scale);\n    context.translate(-cx, -cy);\n    context.fillRect(0, 0, defaultSize, defaultSize);\n    this.texture = new Texture({\n      source: new ImageSource({\n        resource: canvas,\n        addressModeU: \"clamp-to-edge\",\n        addressModeV: \"clamp-to-edge\"\n      })\n    });\n    const m = new Matrix();\n    m.scale(1 / scale, 1 / scale);\n    m.translate(ox, oy);\n    if (this.textureSpace === \"local\") {\n      m.scale(defaultSize, defaultSize);\n    }\n    this.transform = m;\n  }\n  /**\n   * Gets a unique key representing the current state of the gradient.\n   * Used internally for caching.\n   * @returns Unique string key\n   */\n  get styleKey() {\n    return this.uid;\n  }\n  destroy() {\n    this.texture?.destroy(true);\n    this.texture = null;\n  }\n};\n/**\n * Default options for creating a gradient fill\n * @property {PointData} start - Start point of the gradient (default: { x: 0, y: 0 })\n * @property {PointData} end - End point of the gradient (default: { x: 0, y: 1 })\n * @property {TextureSpace} textureSpace - Whether coordinates are 'global' or 'local' (default: 'local')\n * @property {number} textureSize - The size of the texture to use for the gradient (default: 256)\n * @property {Array<{offset: number, color: ColorSource}>} colorStops - Array of color stops (default: empty array)\n * @property {GradientType} type - Type of gradient (default: 'linear')\n */\n_FillGradient.defaultLinearOptions = {\n  start: { x: 0, y: 0 },\n  end: { x: 0, y: 1 },\n  colorStops: [],\n  textureSpace: \"local\",\n  type: \"linear\",\n  textureSize: 256\n};\n/**\n * Default options for creating a radial gradient fill\n * @property {PointData} innerCenter - Center of the inner circle (default: { x: 0.5, y: 0.5 })\n * @property {number} innerRadius - Radius of the inner circle (default: 0)\n * @property {PointData} outerCenter - Center of the outer circle (default: { x: 0.5, y: 0.5 })\n * @property {number} outerRadius - Radius of the outer circle (default: 0.5)\n * @property {TextureSpace} textureSpace - Whether coordinates are 'global' or 'local' (default: 'local')\n * @property {number} textureSize - The size of the texture to use for the gradient (default: 256)\n * @property {Array<{offset: number, color: ColorSource}>} colorStops - Array of color stops (default: empty array)\n * @property {GradientType} type - Type of gradient (default: 'radial')\n */\n_FillGradient.defaultRadialOptions = {\n  center: { x: 0.5, y: 0.5 },\n  innerRadius: 0,\n  outerRadius: 0.5,\n  colorStops: [],\n  scale: 1,\n  textureSpace: \"local\",\n  type: \"radial\",\n  textureSize: 256\n};\nlet FillGradient = _FillGradient;\nfunction addColorStops(gradient, colorStops) {\n  for (let i = 0; i < colorStops.length; i++) {\n    const stop = colorStops[i];\n    gradient.addColorStop(stop.offset, stop.color);\n  }\n}\nfunction getCanvas(width, height) {\n  const canvas = DOMAdapter.get().createCanvas(width, height);\n  const context = canvas.getContext(\"2d\");\n  return { canvas, context };\n}\nfunction ensureGradientOptions(args) {\n  let options = args[0] ?? {};\n  if (typeof options === \"number\" || args[1]) {\n    deprecation(\"8.5.2\", `use options object instead`);\n    options = {\n      type: \"linear\",\n      start: { x: args[0], y: args[1] },\n      end: { x: args[2], y: args[3] },\n      textureSpace: args[4],\n      textureSize: args[5] ?? FillGradient.defaultLinearOptions.textureSize\n    };\n  }\n  return options;\n}\n\nexport { FillGradient };\n//# sourceMappingURL=FillGradient.mjs.map\n"],"names":["emptyColorStops","_FillGradient","args","uid","options","ensureGradientOptions","definedProps","stop","offset","color","Color","colorStops","defaultSize","canvas","context","getCanvas","gradient","addColorStops","Texture","ImageSource","x0","y0","x1","y1","m","Matrix","dx","dy","dist","angle","r0","r1","ox","oy","scale","cx","cy","_a","FillGradient","i","width","height","DOMAdapter","deprecation"],"mappings":";;;;;;;;AAUA,MAAMA,IAAkB,CAAC,EAAE,QAAQ,GAAG,OAAO,WAAW,EAAE,QAAQ,GAAG,OAAO,QAAS,CAAA,GAC/EC,IAAgB,MAAMA,EAAc;AAAA,EACxC,eAAeC,GAAM;AAEnB,SAAK,MAAMC,EAAI,cAAc,GAE7B,KAAK,OAAO,UAEZ,KAAK,aAAa;AAClB,QAAIC,IAAUC,EAAsBH,CAAI;AAExC,IAAAE,IAAU,EAAE,GADKA,EAAQ,SAAS,WAAWH,EAAc,uBAAuBA,EAAc,sBACvE,GAAGK,EAAaF,CAAO,EAAC,GACjD,KAAK,eAAeA,EAAQ,aACxBA,EAAQ,SAAS,YACnB,KAAK,SAASA,EAAQ,QACtB,KAAK,cAAcA,EAAQ,eAAe,KAAK,QAC/C,KAAK,cAAcA,EAAQ,aAC3B,KAAK,cAAcA,EAAQ,aAC3B,KAAK,QAAQA,EAAQ,OACrB,KAAK,WAAWA,EAAQ,aAExB,KAAK,QAAQA,EAAQ,OACrB,KAAK,MAAMA,EAAQ,MAErB,KAAK,eAAeA,EAAQ,cAC5B,KAAK,OAAOA,EAAQ,MACpBA,EAAQ,WAAW,QAAQ,CAACG,MAAS;AACnC,WAAK,aAAaA,EAAK,QAAQA,EAAK,KAAK;AAAA,IAC/C,CAAK;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,aAAaC,GAAQC,GAAO;AAC1B,gBAAK,WAAW,KAAK,EAAE,QAAAD,GAAQ,OAAOE,EAAM,OAAO,SAASD,CAAK,EAAE,OAAM,EAAI,CAAA,GACtE;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,sBAAsB;AACpB,QAAI,KAAK;AACP;AACF,UAAME,IAAa,KAAK,WAAW,SAAS,KAAK,aAAaX,GACxDY,IAAc,KAAK,cACnB,EAAE,QAAAC,GAAQ,SAAAC,EAAO,IAAKC,EAAUH,GAAa,CAAC,GAC9CI,IAAWF,EAAQ,qBAAqB,GAAG,GAAG,KAAK,cAAc,CAAC;AACxE,IAAAG,EAAcD,GAAUL,CAAU,GAClCG,EAAQ,YAAYE,GACpBF,EAAQ,SAAS,GAAG,GAAGF,GAAa,CAAC,GACrC,KAAK,UAAU,IAAIM,EAAQ;AAAA,MACzB,QAAQ,IAAIC,EAAY;AAAA,QACtB,UAAUN;AAAA,MAClB,CAAO;AAAA,IACP,CAAK;AACD,UAAM,EAAE,GAAGO,GAAI,GAAGC,EAAI,IAAG,KAAK,OACxB,EAAE,GAAGC,GAAI,GAAGC,EAAI,IAAG,KAAK,KACxBC,IAAI,IAAIC,KACRC,IAAKJ,IAAKF,GACVO,IAAKJ,IAAKF,GACVO,IAAO,KAAK,KAAKF,IAAKA,IAAKC,IAAKA,CAAE,GAClCE,IAAQ,KAAK,MAAMF,GAAID,CAAE;AAC/B,IAAAF,EAAE,MAAMI,IAAOhB,GAAa,CAAC,GAC7BY,EAAE,OAAOK,CAAK,GACdL,EAAE,UAAUJ,GAAIC,CAAE,GACd,KAAK,iBAAiB,WACxBG,EAAE,MAAMZ,GAAaA,CAAW,GAElC,KAAK,YAAYY;AAAA,EAClB;AAAA,EACD,gBAAgB;AACd,IAAI,KAAK,SAAS,WAChB,KAAK,oBAAmB,IAExB,KAAK,oBAAmB;AAAA,EAE3B;AAAA,EACD,sBAAsB;AACpB,QAAI,KAAK;AACP;AACF,UAAMb,IAAa,KAAK,WAAW,SAAS,KAAK,aAAaX,GACxDY,IAAc,KAAK,cACnB,EAAE,QAAAC,GAAQ,SAAAC,EAAO,IAAKC,EAAUH,GAAaA,CAAW,GACxD,EAAE,GAAGQ,GAAI,GAAGC,EAAI,IAAG,KAAK,QACxB,EAAE,GAAGC,GAAI,GAAGC,EAAI,IAAG,KAAK,aACxBO,IAAK,KAAK,aACVC,IAAK,KAAK,aACVC,IAAKV,IAAKS,GACVE,IAAKV,IAAKQ,GACVG,IAAQtB,KAAemB,IAAK,IAC5BI,KAAMf,IAAKY,KAAME,GACjBE,KAAMf,IAAKY,KAAMC,GACjBlB,IAAWF,EAAQ;AAAA,MACvBqB;AAAA,MACAC;AAAA,MACAN,IAAKI;AAAA,OACJZ,IAAKU,KAAME;AAAA,OACXX,IAAKU,KAAMC;AAAA,MACZH,IAAKG;AAAA,IACX;AACI,IAAAjB,EAAcD,GAAUL,CAAU,GAClCG,EAAQ,YAAYH,EAAWA,EAAW,SAAS,CAAC,EAAE,OACtDG,EAAQ,SAAS,GAAG,GAAGF,GAAaA,CAAW,GAC/CE,EAAQ,YAAYE,GACpBF,EAAQ,UAAUqB,GAAIC,CAAE,GACxBtB,EAAQ,OAAO,KAAK,QAAQ,GAC5BA,EAAQ,MAAM,GAAG,KAAK,KAAK,GAC3BA,EAAQ,UAAU,CAACqB,GAAI,CAACC,CAAE,GAC1BtB,EAAQ,SAAS,GAAG,GAAGF,GAAaA,CAAW,GAC/C,KAAK,UAAU,IAAIM,EAAQ;AAAA,MACzB,QAAQ,IAAIC,EAAY;AAAA,QACtB,UAAUN;AAAA,QACV,cAAc;AAAA,QACd,cAAc;AAAA,MACtB,CAAO;AAAA,IACP,CAAK;AACD,UAAMW,IAAI,IAAIC;AACd,IAAAD,EAAE,MAAM,IAAIU,GAAO,IAAIA,CAAK,GAC5BV,EAAE,UAAUQ,GAAIC,CAAE,GACd,KAAK,iBAAiB,WACxBT,EAAE,MAAMZ,GAAaA,CAAW,GAElC,KAAK,YAAYY;AAAA,EAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,IAAI,WAAW;AACb,WAAO,KAAK;AAAA,EACb;AAAA,EACD,UAAU;;AACR,KAAAa,IAAA,KAAK,YAAL,QAAAA,EAAc,QAAQ,KACtB,KAAK,UAAU;AAAA,EAChB;AACH;AAUApC,EAAc,uBAAuB;AAAA,EACnC,OAAO,EAAE,GAAG,GAAG,GAAG,EAAG;AAAA,EACrB,KAAK,EAAE,GAAG,GAAG,GAAG,EAAG;AAAA,EACnB,YAAY,CAAE;AAAA,EACd,cAAc;AAAA,EACd,MAAM;AAAA,EACN,aAAa;AACf;AAYAA,EAAc,uBAAuB;AAAA,EACnC,QAAQ,EAAE,GAAG,KAAK,GAAG,IAAK;AAAA,EAC1B,aAAa;AAAA,EACb,aAAa;AAAA,EACb,YAAY,CAAE;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,MAAM;AAAA,EACN,aAAa;AACf;AACG,IAACqC,IAAerC;AACnB,SAASgB,EAAcD,GAAUL,GAAY;AAC3C,WAAS4B,IAAI,GAAGA,IAAI5B,EAAW,QAAQ4B,KAAK;AAC1C,UAAMhC,IAAOI,EAAW4B,CAAC;AACzB,IAAAvB,EAAS,aAAaT,EAAK,QAAQA,EAAK,KAAK;AAAA,EAC9C;AACH;AACA,SAASQ,EAAUyB,GAAOC,GAAQ;AAChC,QAAM5B,IAAS6B,EAAW,IAAG,EAAG,aAAaF,GAAOC,CAAM,GACpD3B,IAAUD,EAAO,WAAW,IAAI;AACtC,SAAO,EAAE,QAAAA,GAAQ,SAAAC;AACnB;AACA,SAAST,EAAsBH,GAAM;AACnC,MAAIE,IAAUF,EAAK,CAAC,KAAK,CAAA;AACzB,UAAI,OAAOE,KAAY,YAAYF,EAAK,CAAC,OACvCyC,EAAY,SAAS,4BAA4B,GACjDvC,IAAU;AAAA,IACR,MAAM;AAAA,IACN,OAAO,EAAE,GAAGF,EAAK,CAAC,GAAG,GAAGA,EAAK,CAAC,EAAG;AAAA,IACjC,KAAK,EAAE,GAAGA,EAAK,CAAC,GAAG,GAAGA,EAAK,CAAC,EAAG;AAAA,IAC/B,cAAcA,EAAK,CAAC;AAAA,IACpB,aAAaA,EAAK,CAAC,KAAKoC,EAAa,qBAAqB;AAAA,EAChE,IAESlC;AACT;","x_google_ignoreList":[0]}