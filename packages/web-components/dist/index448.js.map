{"version":3,"file":"index448.js","sources":["../../../node_modules/.pnpm/pixi.js@8.8.1/node_modules/pixi.js/lib/scene/container/bounds/getLocalBounds.mjs"],"sourcesContent":["import { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { warn } from '../../../utils/logging/warn.mjs';\nimport { matrixPool, boundsPool } from './utils/matrixAndBoundsPool.mjs';\n\n\"use strict\";\nfunction getLocalBounds(target, bounds, relativeMatrix) {\n  bounds.clear();\n  relativeMatrix || (relativeMatrix = Matrix.IDENTITY);\n  _getLocalBounds(target, bounds, relativeMatrix, target, true);\n  if (!bounds.isValid) {\n    bounds.set(0, 0, 0, 0);\n  }\n  return bounds;\n}\nfunction _getLocalBounds(target, bounds, parentTransform, rootContainer, isRoot) {\n  let relativeTransform;\n  if (!isRoot) {\n    if (!target.visible || !target.measurable)\n      return;\n    target.updateLocalTransform();\n    const localTransform = target.localTransform;\n    relativeTransform = matrixPool.get();\n    relativeTransform.appendFrom(localTransform, parentTransform);\n  } else {\n    relativeTransform = matrixPool.get();\n    relativeTransform = parentTransform.copyTo(relativeTransform);\n  }\n  const parentBounds = bounds;\n  const preserveBounds = !!target.effects.length;\n  if (preserveBounds) {\n    bounds = boundsPool.get().clear();\n  }\n  if (target.boundsArea) {\n    bounds.addRect(target.boundsArea, relativeTransform);\n  } else {\n    if (target.renderPipeId) {\n      bounds.matrix = relativeTransform;\n      bounds.addBounds(target.bounds);\n    }\n    const children = target.children;\n    for (let i = 0; i < children.length; i++) {\n      _getLocalBounds(children[i], bounds, relativeTransform, rootContainer, false);\n    }\n  }\n  if (preserveBounds) {\n    for (let i = 0; i < target.effects.length; i++) {\n      target.effects[i].addLocalBounds?.(bounds, rootContainer);\n    }\n    parentBounds.addBounds(bounds, Matrix.IDENTITY);\n    boundsPool.return(bounds);\n  }\n  matrixPool.return(relativeTransform);\n}\nfunction getParent(target, root, matrix) {\n  const parent = target.parent;\n  if (!parent) {\n    warn(\"Item is not inside the root container\");\n    return;\n  }\n  if (parent !== root) {\n    getParent(parent, root, matrix);\n    parent.updateLocalTransform();\n    matrix.append(parent.localTransform);\n  }\n}\n\nexport { getLocalBounds, getParent };\n//# sourceMappingURL=getLocalBounds.mjs.map\n"],"names":["getLocalBounds","target","bounds","relativeMatrix","Matrix","_getLocalBounds","parentTransform","rootContainer","isRoot","relativeTransform","matrixPool","localTransform","parentBounds","preserveBounds","boundsPool","children","i","_b","_a"],"mappings":";;AAKA,SAASA,EAAeC,GAAQC,GAAQC,GAAgB;AACtD,SAAAD,EAAO,MAAK,GACZC,MAAmBA,IAAiBC,EAAO,WAC3CC,EAAgBJ,GAAQC,GAAQC,GAAgBF,GAAQ,EAAI,GACvDC,EAAO,WACVA,EAAO,IAAI,GAAG,GAAG,GAAG,CAAC,GAEhBA;AACT;AACA,SAASG,EAAgBJ,GAAQC,GAAQI,GAAiBC,GAAeC,GAAQ;;AAC/E,MAAIC;AACJ,MAAKD;AAQH,IAAAC,IAAoBC,EAAW,OAC/BD,IAAoBH,EAAgB,OAAOG,CAAiB;AAAA,OATjD;AACX,QAAI,CAACR,EAAO,WAAW,CAACA,EAAO;AAC7B;AACF,IAAAA,EAAO,qBAAoB;AAC3B,UAAMU,IAAiBV,EAAO;AAC9B,IAAAQ,IAAoBC,EAAW,OAC/BD,EAAkB,WAAWE,GAAgBL,CAAe;AAAA,EAChE;AAIE,QAAMM,IAAeV,GACfW,IAAiB,CAAC,CAACZ,EAAO,QAAQ;AAIxC,MAHIY,MACFX,IAASY,EAAW,IAAK,EAAC,MAAK,IAE7Bb,EAAO;AACT,IAAAC,EAAO,QAAQD,EAAO,YAAYQ,CAAiB;AAAA,OAC9C;AACL,IAAIR,EAAO,iBACTC,EAAO,SAASO,GAChBP,EAAO,UAAUD,EAAO,MAAM;AAEhC,UAAMc,IAAWd,EAAO;AACxB,aAASe,IAAI,GAAGA,IAAID,EAAS,QAAQC;AACnC,MAAAX,EAAgBU,EAASC,CAAC,GAAGd,GAAQO,GAAmBF,GAAe,EAAK;AAAA,EAE/E;AACD,MAAIM,GAAgB;AAClB,aAASG,IAAI,GAAGA,IAAIf,EAAO,QAAQ,QAAQe;AACzC,OAAAC,KAAAC,IAAAjB,EAAO,QAAQe,CAAC,GAAE,mBAAlB,QAAAC,EAAA,KAAAC,GAAmChB,GAAQK;AAE7C,IAAAK,EAAa,UAAUV,GAAQE,EAAO,QAAQ,GAC9CU,EAAW,OAAOZ,CAAM;AAAA,EACzB;AACD,EAAAQ,EAAW,OAAOD,CAAiB;AACrC;","x_google_ignoreList":[0]}