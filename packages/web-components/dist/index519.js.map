{"version":3,"file":"index519.js","sources":["../../../node_modules/.pnpm/pixi.js@8.8.1/node_modules/pixi.js/lib/scene/view/ViewContainer.mjs"],"sourcesContent":["import { Bounds } from '../container/bounds/Bounds.mjs';\nimport { Container } from '../container/Container.mjs';\n\n\"use strict\";\nclass ViewContainer extends Container {\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(options) {\n    super(options);\n    /** @private */\n    this.canBundle = true;\n    /** @private */\n    this.allowChildren = false;\n    /** @private */\n    this._roundPixels = 0;\n    /** @private */\n    this._lastUsed = -1;\n    this._bounds = new Bounds(0, 1, 0, 0);\n    this._boundsDirty = true;\n  }\n  /**\n   * The local bounds of the view.\n   * @type {rendering.Bounds}\n   */\n  get bounds() {\n    if (!this._boundsDirty)\n      return this._bounds;\n    this.updateBounds();\n    this._boundsDirty = false;\n    return this._bounds;\n  }\n  /**\n   * Whether or not to round the x/y position of the sprite.\n   * @type {boolean}\n   */\n  get roundPixels() {\n    return !!this._roundPixels;\n  }\n  set roundPixels(value) {\n    this._roundPixels = value ? 1 : 0;\n  }\n  /**\n   * Checks if the object contains the given point.\n   * @param point - The point to check\n   */\n  containsPoint(point) {\n    const bounds = this.bounds;\n    const { x, y } = point;\n    return x >= bounds.minX && x <= bounds.maxX && y >= bounds.minY && y <= bounds.maxY;\n  }\n  /** @private */\n  onViewUpdate() {\n    this._didViewChangeTick++;\n    this._boundsDirty = true;\n    if (this.didViewUpdate)\n      return;\n    this.didViewUpdate = true;\n    const renderGroup = this.renderGroup || this.parentRenderGroup;\n    if (renderGroup) {\n      renderGroup.onChildViewUpdate(this);\n    }\n  }\n  destroy(options) {\n    super.destroy(options);\n    this._bounds = null;\n  }\n  collectRenderablesSimple(instructionSet, renderer, currentLayer) {\n    const { renderPipes, renderableGC } = renderer;\n    renderPipes.blendMode.setBlendMode(this, this.groupBlendMode, instructionSet);\n    const rp = renderPipes;\n    rp[this.renderPipeId].addRenderable(this, instructionSet);\n    renderableGC.addRenderable(this);\n    this.didViewUpdate = false;\n    const children = this.children;\n    const length = children.length;\n    for (let i = 0; i < length; i++) {\n      children[i].collectRenderables(instructionSet, renderer, currentLayer);\n    }\n  }\n}\n\nexport { ViewContainer };\n//# sourceMappingURL=ViewContainer.mjs.map\n"],"names":["ViewContainer","Container","options","Bounds","value","point","bounds","x","y","renderGroup","instructionSet","renderer","currentLayer","renderPipes","renderableGC","children","length","i"],"mappings":";;AAIA,MAAMA,UAAsBC,EAAU;AAAA;AAAA,EAEpC,YAAYC,GAAS;AACnB,UAAMA,CAAO,GAEb,KAAK,YAAY,IAEjB,KAAK,gBAAgB,IAErB,KAAK,eAAe,GAEpB,KAAK,YAAY,IACjB,KAAK,UAAU,IAAIC,EAAO,GAAG,GAAG,GAAG,CAAC,GACpC,KAAK,eAAe;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,IAAI,SAAS;AACX,WAAK,KAAK,gBAEV,KAAK,aAAY,GACjB,KAAK,eAAe,IACb,KAAK,WAHH,KAAK;AAAA,EAIf;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,IAAI,cAAc;AAChB,WAAO,CAAC,CAAC,KAAK;AAAA,EACf;AAAA,EACD,IAAI,YAAYC,GAAO;AACrB,SAAK,eAAeA,IAAQ,IAAI;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,cAAcC,GAAO;AACnB,UAAMC,IAAS,KAAK,QACd,EAAE,GAAAC,GAAG,GAAAC,EAAG,IAAGH;AACjB,WAAOE,KAAKD,EAAO,QAAQC,KAAKD,EAAO,QAAQE,KAAKF,EAAO,QAAQE,KAAKF,EAAO;AAAA,EAChF;AAAA;AAAA,EAED,eAAe;AAGb,QAFA,KAAK,sBACL,KAAK,eAAe,IAChB,KAAK;AACP;AACF,SAAK,gBAAgB;AACrB,UAAMG,IAAc,KAAK,eAAe,KAAK;AAC7C,IAAIA,KACFA,EAAY,kBAAkB,IAAI;AAAA,EAErC;AAAA,EACD,QAAQP,GAAS;AACf,UAAM,QAAQA,CAAO,GACrB,KAAK,UAAU;AAAA,EAChB;AAAA,EACD,yBAAyBQ,GAAgBC,GAAUC,GAAc;AAC/D,UAAM,EAAE,aAAAC,GAAa,cAAAC,EAAc,IAAGH;AACtC,IAAAE,EAAY,UAAU,aAAa,MAAM,KAAK,gBAAgBH,CAAc,GACjEG,EACR,KAAK,YAAY,EAAE,cAAc,MAAMH,CAAc,GACxDI,EAAa,cAAc,IAAI,GAC/B,KAAK,gBAAgB;AACrB,UAAMC,IAAW,KAAK,UAChBC,IAASD,EAAS;AACxB,aAASE,IAAI,GAAGA,IAAID,GAAQC;AAC1B,MAAAF,EAASE,CAAC,EAAE,mBAAmBP,GAAgBC,GAAUC,CAAY;AAAA,EAExE;AACH;","x_google_ignoreList":[0]}