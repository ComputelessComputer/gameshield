{"version":3,"file":"index188.js","sources":["../../../node_modules/.pnpm/@pixi+events@7.4.3_@pixi+core@7.4.3_@pixi+display@7.4.3_@pixi+core@7.4.3_/node_modules/@pixi/events/lib/EventTicker.mjs"],"sourcesContent":["import { Ticker, UPDATE_PRIORITY } from \"@pixi/core\";\nclass EventsTickerClass {\n  constructor() {\n    this.interactionFrequency = 10, this._deltaTime = 0, this._didMove = !1, this.tickerAdded = !1, this._pauseUpdate = !0;\n  }\n  /**\n   * Initializes the event ticker.\n   * @param events - The event system.\n   */\n  init(events) {\n    this.removeTickerListener(), this.events = events, this.interactionFrequency = 10, this._deltaTime = 0, this._didMove = !1, this.tickerAdded = !1, this._pauseUpdate = !0;\n  }\n  /** Whether to pause the update checks or not. */\n  get pauseUpdate() {\n    return this._pauseUpdate;\n  }\n  set pauseUpdate(paused) {\n    this._pauseUpdate = paused;\n  }\n  /** Adds the ticker listener. */\n  addTickerListener() {\n    this.tickerAdded || !this.domElement || (Ticker.system.add(this.tickerUpdate, this, UPDATE_PRIORITY.INTERACTION), this.tickerAdded = !0);\n  }\n  /** Removes the ticker listener. */\n  removeTickerListener() {\n    this.tickerAdded && (Ticker.system.remove(this.tickerUpdate, this), this.tickerAdded = !1);\n  }\n  /** Sets flag to not fire extra events when the user has already moved there mouse */\n  pointerMoved() {\n    this._didMove = !0;\n  }\n  /** Updates the state of interactive objects. */\n  update() {\n    if (!this.domElement || this._pauseUpdate)\n      return;\n    if (this._didMove) {\n      this._didMove = !1;\n      return;\n    }\n    const rootPointerEvent = this.events.rootPointerEvent;\n    this.events.supportsTouchEvents && rootPointerEvent.pointerType === \"touch\" || globalThis.document.dispatchEvent(new PointerEvent(\"pointermove\", {\n      clientX: rootPointerEvent.clientX,\n      clientY: rootPointerEvent.clientY\n    }));\n  }\n  /**\n   * Updates the state of interactive objects if at least {@link PIXI.EventsTicker#interactionFrequency}\n   * milliseconds have passed since the last invocation.\n   *\n   * Invoked by a throttled ticker update from {@link PIXI.Ticker.system}.\n   * @param deltaTime - time delta since the last call\n   */\n  tickerUpdate(deltaTime) {\n    this._deltaTime += deltaTime, !(this._deltaTime < this.interactionFrequency) && (this._deltaTime = 0, this.update());\n  }\n}\nconst EventsTicker = new EventsTickerClass();\nexport {\n  EventsTicker\n};\n//# sourceMappingURL=EventTicker.mjs.map\n"],"names":["EventsTickerClass","events","paused","Ticker","UPDATE_PRIORITY","rootPointerEvent","deltaTime","EventsTicker"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,MAAMA,EAAkB;AAAA,EACtB,cAAc;AACZ,SAAK,uBAAuB,IAAI,KAAK,aAAa,GAAG,KAAK,WAAW,IAAI,KAAK,cAAc,IAAI,KAAK,eAAe;AAAA,EACrH;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,KAAKC,GAAQ;AACX,SAAK,wBAAwB,KAAK,SAASA,GAAQ,KAAK,uBAAuB,IAAI,KAAK,aAAa,GAAG,KAAK,WAAW,IAAI,KAAK,cAAc,IAAI,KAAK,eAAe;AAAA,EACxK;AAAA;AAAA,EAED,IAAI,cAAc;AAChB,WAAO,KAAK;AAAA,EACb;AAAA,EACD,IAAI,YAAYC,GAAQ;AACtB,SAAK,eAAeA;AAAA,EACrB;AAAA;AAAA,EAED,oBAAoB;AAClB,SAAK,eAAe,CAAC,KAAK,eAAeC,EAAO,OAAO,IAAI,KAAK,cAAc,MAAMC,EAAgB,WAAW,GAAG,KAAK,cAAc;AAAA,EACtI;AAAA;AAAA,EAED,uBAAuB;AACrB,SAAK,gBAAgBD,EAAO,OAAO,OAAO,KAAK,cAAc,IAAI,GAAG,KAAK,cAAc;AAAA,EACxF;AAAA;AAAA,EAED,eAAe;AACb,SAAK,WAAW;AAAA,EACjB;AAAA;AAAA,EAED,SAAS;AACP,QAAI,CAAC,KAAK,cAAc,KAAK;AAC3B;AACF,QAAI,KAAK,UAAU;AACjB,WAAK,WAAW;AAChB;AAAA,IACD;AACD,UAAME,IAAmB,KAAK,OAAO;AACrC,SAAK,OAAO,uBAAuBA,EAAiB,gBAAgB,WAAW,WAAW,SAAS,cAAc,IAAI,aAAa,eAAe;AAAA,MAC/I,SAASA,EAAiB;AAAA,MAC1B,SAASA,EAAiB;AAAA,IAC3B,CAAA,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQD,aAAaC,GAAW;AACtB,SAAK,cAAcA,GAAW,EAAE,KAAK,aAAa,KAAK,0BAA0B,KAAK,aAAa,GAAG,KAAK,OAAQ;AAAA,EACpH;AACH;AACK,MAACC,KAAe,IAAIP,EAAiB;","x_google_ignoreList":[0]}