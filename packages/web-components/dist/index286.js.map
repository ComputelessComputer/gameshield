{"version":3,"file":"index286.js","sources":["../../../node_modules/.pnpm/@pixi+graphics@7.4.3_@pixi+core@7.4.3_@pixi+display@7.4.3_@pixi+core@7.4.3__@pixi+sprit_3c40fa602f454a6b22dad0b27bc41147/node_modules/@pixi/graphics/lib/utils/BezierUtils.mjs"],"sourcesContent":["import { curves } from \"../const.mjs\";\nclass BezierUtils {\n  /**\n   * Calculate length of bezier curve.\n   * Analytical solution is impossible, since it involves an integral that does not integrate in general.\n   * Therefore numerical solution is used.\n   * @private\n   * @param fromX - Starting point x\n   * @param fromY - Starting point y\n   * @param cpX - Control point x\n   * @param cpY - Control point y\n   * @param cpX2 - Second Control point x\n   * @param cpY2 - Second Control point y\n   * @param toX - Destination point x\n   * @param toY - Destination point y\n   * @returns - Length of bezier curve\n   */\n  static curveLength(fromX, fromY, cpX, cpY, cpX2, cpY2, toX, toY) {\n    let result = 0, t = 0, t2 = 0, t3 = 0, nt = 0, nt2 = 0, nt3 = 0, x = 0, y = 0, dx = 0, dy = 0, prevX = fromX, prevY = fromY;\n    for (let i = 1; i <= 10; ++i)\n      t = i / 10, t2 = t * t, t3 = t2 * t, nt = 1 - t, nt2 = nt * nt, nt3 = nt2 * nt, x = nt3 * fromX + 3 * nt2 * t * cpX + 3 * nt * t2 * cpX2 + t3 * toX, y = nt3 * fromY + 3 * nt2 * t * cpY + 3 * nt * t2 * cpY2 + t3 * toY, dx = prevX - x, dy = prevY - y, prevX = x, prevY = y, result += Math.sqrt(dx * dx + dy * dy);\n    return result;\n  }\n  /**\n   * Calculate the points for a bezier curve and then draws it.\n   *\n   * Ignored from docs since it is not directly exposed.\n   * @ignore\n   * @param cpX - Control point x\n   * @param cpY - Control point y\n   * @param cpX2 - Second Control point x\n   * @param cpY2 - Second Control point y\n   * @param toX - Destination point x\n   * @param toY - Destination point y\n   * @param points - Path array to push points into\n   */\n  static curveTo(cpX, cpY, cpX2, cpY2, toX, toY, points) {\n    const fromX = points[points.length - 2], fromY = points[points.length - 1];\n    points.length -= 2;\n    const n = curves._segmentsCount(\n      BezierUtils.curveLength(fromX, fromY, cpX, cpY, cpX2, cpY2, toX, toY)\n    );\n    let dt = 0, dt2 = 0, dt3 = 0, t2 = 0, t3 = 0;\n    points.push(fromX, fromY);\n    for (let i = 1, j = 0; i <= n; ++i)\n      j = i / n, dt = 1 - j, dt2 = dt * dt, dt3 = dt2 * dt, t2 = j * j, t3 = t2 * j, points.push(\n        dt3 * fromX + 3 * dt2 * j * cpX + 3 * dt * t2 * cpX2 + t3 * toX,\n        dt3 * fromY + 3 * dt2 * j * cpY + 3 * dt * t2 * cpY2 + t3 * toY\n      );\n  }\n}\nexport {\n  BezierUtils\n};\n//# sourceMappingURL=BezierUtils.mjs.map\n"],"names":["BezierUtils","fromX","fromY","cpX","cpY","cpX2","cpY2","toX","toY","result","t","t2","t3","nt","nt2","nt3","x","y","dx","dy","prevX","prevY","i","points","n","curves","dt","dt2","dt3","j"],"mappings":";AACA,MAAMA,EAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBhB,OAAO,YAAYC,GAAOC,GAAOC,GAAKC,GAAKC,GAAMC,GAAMC,GAAKC,GAAK;AAC/D,QAAIC,IAAS,GAAGC,IAAI,GAAGC,IAAK,GAAGC,IAAK,GAAGC,IAAK,GAAGC,IAAM,GAAGC,IAAM,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAK,GAAGC,IAAK,GAAGC,IAAQnB,GAAOoB,IAAQnB;AACtH,aAASoB,IAAI,GAAGA,KAAK,IAAI,EAAEA;AACzB,MAAAZ,IAAIY,IAAI,IAAIX,IAAKD,IAAIA,GAAGE,IAAKD,IAAKD,GAAGG,IAAK,IAAIH,GAAGI,IAAMD,IAAKA,GAAIE,IAAMD,IAAMD,GAAIG,IAAID,IAAMd,IAAQ,IAAIa,IAAMJ,IAAIP,IAAM,IAAIU,IAAKF,IAAKN,IAAOO,IAAKL,GAAKU,IAAIF,IAAMb,IAAQ,IAAIY,IAAMJ,IAAIN,IAAM,IAAIS,IAAKF,IAAKL,IAAOM,IAAKJ,GAAKU,IAAKE,IAAQJ,GAAGG,IAAKE,IAAQJ,GAAGG,IAAQJ,GAAGK,IAAQJ,GAAGR,KAAU,KAAK,KAAKS,IAAKA,IAAKC,IAAKA,CAAE;AACvT,WAAOV;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcD,OAAO,QAAQN,GAAKC,GAAKC,GAAMC,GAAMC,GAAKC,GAAKe,GAAQ;AACrD,UAAMtB,IAAQsB,EAAOA,EAAO,SAAS,CAAC,GAAGrB,IAAQqB,EAAOA,EAAO,SAAS,CAAC;AACzE,IAAAA,EAAO,UAAU;AACjB,UAAMC,IAAIC,EAAO;AAAA,MACfzB,EAAY,YAAYC,GAAOC,GAAOC,GAAKC,GAAKC,GAAMC,GAAMC,GAAKC,CAAG;AAAA,IAC1E;AACI,QAAIkB,IAAK,GAAGC,IAAM,GAAGC,IAAM,GAAGjB,IAAK,GAAGC,IAAK;AAC3C,IAAAW,EAAO,KAAKtB,GAAOC,CAAK;AACxB,aAASoB,IAAI,GAAGO,IAAI,GAAGP,KAAKE,GAAG,EAAEF;AAC/B,MAAAO,IAAIP,IAAIE,GAAGE,IAAK,IAAIG,GAAGF,IAAMD,IAAKA,GAAIE,IAAMD,IAAMD,GAAIf,IAAKkB,IAAIA,GAAGjB,IAAKD,IAAKkB,GAAGN,EAAO;AAAA,QACpFK,IAAM3B,IAAQ,IAAI0B,IAAME,IAAI1B,IAAM,IAAIuB,IAAKf,IAAKN,IAAOO,IAAKL;AAAA,QAC5DqB,IAAM1B,IAAQ,IAAIyB,IAAME,IAAIzB,IAAM,IAAIsB,IAAKf,IAAKL,IAAOM,IAAKJ;AAAA,MACpE;AAAA,EACG;AACH;","x_google_ignoreList":[0]}