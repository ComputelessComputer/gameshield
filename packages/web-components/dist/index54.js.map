{"version":3,"file":"index54.js","sources":["../../../node_modules/.pnpm/@pixi+core@7.4.3/node_modules/@pixi/core/lib/geometry/BufferSystem.mjs"],"sourcesContent":["import { ExtensionType, extensions } from \"@pixi/extensions\";\nimport { GLBuffer } from \"./GLBuffer.mjs\";\nclass BufferSystem {\n  /**\n   * @param {PIXI.Renderer} renderer - The renderer this System works for.\n   */\n  constructor(renderer) {\n    this.renderer = renderer, this.managedBuffers = {}, this.boundBufferBases = {};\n  }\n  /**\n   * @ignore\n   */\n  destroy() {\n    this.renderer = null;\n  }\n  /** Sets up the renderer context and necessary buffers. */\n  contextChange() {\n    this.disposeAll(!0), this.gl = this.renderer.gl, this.CONTEXT_UID = this.renderer.CONTEXT_UID;\n  }\n  /**\n   * This binds specified buffer. On first run, it will create the webGL buffers for the context too\n   * @param buffer - the buffer to bind to the renderer\n   */\n  bind(buffer) {\n    const { gl, CONTEXT_UID } = this, glBuffer = buffer._glBuffers[CONTEXT_UID] || this.createGLBuffer(buffer);\n    gl.bindBuffer(buffer.type, glBuffer.buffer);\n  }\n  unbind(type) {\n    const { gl } = this;\n    gl.bindBuffer(type, null);\n  }\n  /**\n   * Binds an uniform buffer to at the given index.\n   *\n   * A cache is used so a buffer will not be bound again if already bound.\n   * @param buffer - the buffer to bind\n   * @param index - the base index to bind it to.\n   */\n  bindBufferBase(buffer, index) {\n    const { gl, CONTEXT_UID } = this;\n    if (this.boundBufferBases[index] !== buffer) {\n      const glBuffer = buffer._glBuffers[CONTEXT_UID] || this.createGLBuffer(buffer);\n      this.boundBufferBases[index] = buffer, gl.bindBufferBase(gl.UNIFORM_BUFFER, index, glBuffer.buffer);\n    }\n  }\n  /**\n   * Binds a buffer whilst also binding its range.\n   * This will make the buffer start from the offset supplied rather than 0 when it is read.\n   * @param buffer - the buffer to bind\n   * @param index - the base index to bind at, defaults to 0\n   * @param offset - the offset to bind at (this is blocks of 256). 0 = 0, 1 = 256, 2 = 512 etc\n   */\n  bindBufferRange(buffer, index, offset) {\n    const { gl, CONTEXT_UID } = this;\n    offset = offset || 0;\n    const glBuffer = buffer._glBuffers[CONTEXT_UID] || this.createGLBuffer(buffer);\n    gl.bindBufferRange(gl.UNIFORM_BUFFER, index || 0, glBuffer.buffer, offset * 256, 256);\n  }\n  /**\n   * Will ensure the data in the buffer is uploaded to the GPU.\n   * @param {PIXI.Buffer} buffer - the buffer to update\n   */\n  update(buffer) {\n    const { gl, CONTEXT_UID } = this, glBuffer = buffer._glBuffers[CONTEXT_UID] || this.createGLBuffer(buffer);\n    if (buffer._updateID !== glBuffer.updateID)\n      if (glBuffer.updateID = buffer._updateID, gl.bindBuffer(buffer.type, glBuffer.buffer), glBuffer.byteLength >= buffer.data.byteLength)\n        gl.bufferSubData(buffer.type, 0, buffer.data);\n      else {\n        const drawType = buffer.static ? gl.STATIC_DRAW : gl.DYNAMIC_DRAW;\n        glBuffer.byteLength = buffer.data.byteLength, gl.bufferData(buffer.type, buffer.data, drawType);\n      }\n  }\n  /**\n   * Disposes buffer\n   * @param {PIXI.Buffer} buffer - buffer with data\n   * @param {boolean} [contextLost=false] - If context was lost, we suppress deleteVertexArray\n   */\n  dispose(buffer, contextLost) {\n    if (!this.managedBuffers[buffer.id])\n      return;\n    delete this.managedBuffers[buffer.id];\n    const glBuffer = buffer._glBuffers[this.CONTEXT_UID], gl = this.gl;\n    buffer.disposeRunner.remove(this), glBuffer && (contextLost || gl.deleteBuffer(glBuffer.buffer), delete buffer._glBuffers[this.CONTEXT_UID]);\n  }\n  /**\n   * dispose all WebGL resources of all managed buffers\n   * @param {boolean} [contextLost=false] - If context was lost, we suppress `gl.delete` calls\n   */\n  disposeAll(contextLost) {\n    const all = Object.keys(this.managedBuffers);\n    for (let i = 0; i < all.length; i++)\n      this.dispose(this.managedBuffers[all[i]], contextLost);\n  }\n  /**\n   * creates and attaches a GLBuffer object tied to the current context.\n   * @param buffer\n   * @protected\n   */\n  createGLBuffer(buffer) {\n    const { CONTEXT_UID, gl } = this;\n    return buffer._glBuffers[CONTEXT_UID] = new GLBuffer(gl.createBuffer()), this.managedBuffers[buffer.id] = buffer, buffer.disposeRunner.add(this), buffer._glBuffers[CONTEXT_UID];\n  }\n}\nBufferSystem.extension = {\n  type: ExtensionType.RendererSystem,\n  name: \"buffer\"\n};\nextensions.add(BufferSystem);\nexport {\n  BufferSystem\n};\n//# sourceMappingURL=BufferSystem.mjs.map\n"],"names":["BufferSystem","renderer","buffer","gl","CONTEXT_UID","glBuffer","type","index","offset","drawType","contextLost","all","i","GLBuffer","ExtensionType","extensions"],"mappings":"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","x_google_ignoreList":[0]}