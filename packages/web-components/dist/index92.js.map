{"version":3,"file":"index92.js","sources":["../../../node_modules/.pnpm/@pixi+assets@7.4.3_@pixi+core@7.4.3/node_modules/@pixi/assets/lib/loader/parsers/textures/loadSVG.mjs"],"sourcesContent":["import { ExtensionType, SVGResource, BaseTexture, utils, settings, extensions } from \"@pixi/core\";\nimport { checkDataUrl } from \"../../../utils/checkDataUrl.mjs\";\nimport { checkExtension } from \"../../../utils/checkExtension.mjs\";\nimport { LoaderParserPriority } from \"../LoaderParser.mjs\";\nimport { loadTextures } from \"./loadTextures.mjs\";\nimport { createTexture } from \"./utils/createTexture.mjs\";\nconst validSVGExtension = \".svg\", validSVGMIME = \"image/svg+xml\", loadSVG = {\n  extension: {\n    type: ExtensionType.LoadParser,\n    priority: LoaderParserPriority.High\n  },\n  name: \"loadSVG\",\n  test(url) {\n    return checkDataUrl(url, validSVGMIME) || checkExtension(url, validSVGExtension);\n  },\n  async testParse(data) {\n    return SVGResource.test(data);\n  },\n  async parse(asset, data, loader) {\n    const src = new SVGResource(asset, data?.data?.resourceOptions);\n    await src.load();\n    const base = new BaseTexture(src, {\n      resolution: utils.getResolutionOfUrl(asset),\n      ...data?.data\n    });\n    return base.resource.src = data.src, createTexture(base, loader, data.src);\n  },\n  async load(url, _options) {\n    return (await settings.ADAPTER.fetch(url)).text();\n  },\n  unload: loadTextures.unload\n};\nextensions.add(loadSVG);\nexport {\n  loadSVG\n};\n//# sourceMappingURL=loadSVG.mjs.map\n"],"names":["validSVGExtension","validSVGMIME","loadSVG","ExtensionType","LoaderParserPriority","url","checkDataUrl","checkExtension","data","SVGResource","asset","loader","src","_a","base","BaseTexture","utils.getResolutionOfUrl","createTexture","_options","settings","loadTextures","extensions"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMK,MAACA,IAAoB,QAAQC,IAAe,iBAAiBC,IAAU;AAAA,EAC1E,WAAW;AAAA,IACT,MAAMC,EAAc;AAAA,IACpB,UAAUC,EAAqB;AAAA,EAChC;AAAA,EACD,MAAM;AAAA,EACN,KAAKC,GAAK;AACR,WAAOC,EAAaD,GAAKJ,CAAY,KAAKM,EAAeF,GAAKL,CAAiB;AAAA,EAChF;AAAA,EACD,MAAM,UAAUQ,GAAM;AACpB,WAAOC,EAAY,KAAKD,CAAI;AAAA,EAC7B;AAAA,EACD,MAAM,MAAME,GAAOF,GAAMG,GAAQ;;AAC/B,UAAMC,IAAM,IAAIH,EAAYC,IAAOG,IAAAL,KAAA,gBAAAA,EAAM,SAAN,gBAAAK,EAAY,eAAe;AAC9D,UAAMD,EAAI;AACV,UAAME,IAAO,IAAIC,EAAYH,GAAK;AAAA,MAChC,YAAYI,EAAyBN,CAAK;AAAA,MAC1C,GAAGF,KAAA,gBAAAA,EAAM;AAAA,IACf,CAAK;AACD,WAAOM,EAAK,SAAS,MAAMN,EAAK,KAAKS,EAAcH,GAAMH,GAAQH,EAAK,GAAG;AAAA,EAC1E;AAAA,EACD,MAAM,KAAKH,GAAKa,GAAU;AACxB,YAAQ,MAAMC,EAAS,QAAQ,MAAMd,CAAG,GAAG;EAC5C;AAAA,EACD,QAAQe,EAAa;AACvB;AACAC,EAAW,IAAInB,CAAO;","x_google_ignoreList":[0]}