{"version":3,"file":"index73.js","sources":["../../../node_modules/.pnpm/@pixi+core@7.4.3/node_modules/@pixi/core/lib/transformFeedback/TransformFeedbackSystem.mjs"],"sourcesContent":["import { ExtensionType, extensions } from \"@pixi/extensions\";\nclass TransformFeedbackSystem {\n  /**\n   * @param renderer - The renderer this System works for.\n   */\n  constructor(renderer) {\n    this.renderer = renderer;\n  }\n  /** Sets up the renderer context and necessary buffers. */\n  contextChange() {\n    this.gl = this.renderer.gl, this.CONTEXT_UID = this.renderer.CONTEXT_UID;\n  }\n  /**\n   * Bind TransformFeedback and buffers\n   * @param transformFeedback - TransformFeedback to bind\n   */\n  bind(transformFeedback) {\n    const { gl, CONTEXT_UID } = this, glTransformFeedback = transformFeedback._glTransformFeedbacks[CONTEXT_UID] || this.createGLTransformFeedback(transformFeedback);\n    gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, glTransformFeedback);\n  }\n  /** Unbind TransformFeedback */\n  unbind() {\n    const { gl } = this;\n    gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, null);\n  }\n  /**\n   * Begin TransformFeedback\n   * @param drawMode - DrawMode for TransformFeedback\n   * @param shader - A Shader used by TransformFeedback. Current bound shader will be used if not provided.\n   */\n  beginTransformFeedback(drawMode, shader) {\n    const { gl, renderer } = this;\n    shader && renderer.shader.bind(shader), gl.beginTransformFeedback(drawMode);\n  }\n  /** End TransformFeedback */\n  endTransformFeedback() {\n    const { gl } = this;\n    gl.endTransformFeedback();\n  }\n  /**\n   * Create TransformFeedback and bind buffers\n   * @param tf - TransformFeedback\n   * @returns WebGLTransformFeedback\n   */\n  createGLTransformFeedback(tf) {\n    const { gl, renderer, CONTEXT_UID } = this, glTransformFeedback = gl.createTransformFeedback();\n    tf._glTransformFeedbacks[CONTEXT_UID] = glTransformFeedback, gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, glTransformFeedback);\n    for (let i = 0; i < tf.buffers.length; i++) {\n      const buffer = tf.buffers[i];\n      buffer && (renderer.buffer.update(buffer), buffer._glBuffers[CONTEXT_UID].refCount++, gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER, i, buffer._glBuffers[CONTEXT_UID].buffer || null));\n    }\n    return gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, null), tf.disposeRunner.add(this), glTransformFeedback;\n  }\n  /**\n   * Disposes TransfromFeedback\n   * @param {PIXI.TransformFeedback} tf - TransformFeedback\n   * @param {boolean} [contextLost=false] - If context was lost, we suppress delete TransformFeedback\n   */\n  disposeTransformFeedback(tf, contextLost) {\n    const glTF = tf._glTransformFeedbacks[this.CONTEXT_UID], gl = this.gl;\n    tf.disposeRunner.remove(this);\n    const bufferSystem = this.renderer.buffer;\n    if (bufferSystem)\n      for (let i = 0; i < tf.buffers.length; i++) {\n        const buffer = tf.buffers[i];\n        if (!buffer)\n          continue;\n        const buf = buffer._glBuffers[this.CONTEXT_UID];\n        buf && (buf.refCount--, buf.refCount === 0 && !contextLost && bufferSystem.dispose(buffer, contextLost));\n      }\n    glTF && (contextLost || gl.deleteTransformFeedback(glTF), delete tf._glTransformFeedbacks[this.CONTEXT_UID]);\n  }\n  destroy() {\n    this.renderer = null;\n  }\n}\nTransformFeedbackSystem.extension = {\n  type: ExtensionType.RendererSystem,\n  name: \"transformFeedback\"\n};\nextensions.add(TransformFeedbackSystem);\nexport {\n  TransformFeedbackSystem\n};\n//# sourceMappingURL=TransformFeedbackSystem.mjs.map\n"],"names":["TransformFeedbackSystem","renderer","transformFeedback","gl","CONTEXT_UID","glTransformFeedback","drawMode","shader","tf","i","buffer","contextLost","glTF","bufferSystem","buf","ExtensionType","extensions"],"mappings":";AACA,MAAMA,EAAwB;AAAA;AAAA;AAAA;AAAA,EAI5B,YAAYC,GAAU;AACpB,SAAK,WAAWA;AAAA,EACjB;AAAA;AAAA,EAED,gBAAgB;AACd,SAAK,KAAK,KAAK,SAAS,IAAI,KAAK,cAAc,KAAK,SAAS;AAAA,EAC9D;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,KAAKC,GAAmB;AACtB,UAAM,EAAE,IAAAC,GAAI,aAAAC,MAAgB,MAAMC,IAAsBH,EAAkB,sBAAsBE,CAAW,KAAK,KAAK,0BAA0BF,CAAiB;AAChK,IAAAC,EAAG,sBAAsBA,EAAG,oBAAoBE,CAAmB;AAAA,EACpE;AAAA;AAAA,EAED,SAAS;AACP,UAAM,EAAE,IAAAF,EAAI,IAAG;AACf,IAAAA,EAAG,sBAAsBA,EAAG,oBAAoB,IAAI;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,uBAAuBG,GAAUC,GAAQ;AACvC,UAAM,EAAE,IAAAJ,GAAI,UAAAF,EAAU,IAAG;AACzB,IAAAM,KAAUN,EAAS,OAAO,KAAKM,CAAM,GAAGJ,EAAG,uBAAuBG,CAAQ;AAAA,EAC3E;AAAA;AAAA,EAED,uBAAuB;AACrB,UAAM,EAAE,IAAAH,EAAI,IAAG;AACf,IAAAA,EAAG,qBAAoB;AAAA,EACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,0BAA0BK,GAAI;AAC5B,UAAM,EAAE,IAAAL,GAAI,UAAAF,GAAU,aAAAG,EAAW,IAAK,MAAMC,IAAsBF,EAAG;AACrE,IAAAK,EAAG,sBAAsBJ,CAAW,IAAIC,GAAqBF,EAAG,sBAAsBA,EAAG,oBAAoBE,CAAmB;AAChI,aAASI,IAAI,GAAGA,IAAID,EAAG,QAAQ,QAAQC,KAAK;AAC1C,YAAMC,IAASF,EAAG,QAAQC,CAAC;AAC3B,MAAAC,MAAWT,EAAS,OAAO,OAAOS,CAAM,GAAGA,EAAO,WAAWN,CAAW,EAAE,YAAYD,EAAG,eAAeA,EAAG,2BAA2BM,GAAGC,EAAO,WAAWN,CAAW,EAAE,UAAU,IAAI;AAAA,IACvL;AACD,WAAOD,EAAG,sBAAsBA,EAAG,oBAAoB,IAAI,GAAGK,EAAG,cAAc,IAAI,IAAI,GAAGH;AAAA,EAC3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,yBAAyBG,GAAIG,GAAa;AACxC,UAAMC,IAAOJ,EAAG,sBAAsB,KAAK,WAAW,GAAGL,IAAK,KAAK;AACnE,IAAAK,EAAG,cAAc,OAAO,IAAI;AAC5B,UAAMK,IAAe,KAAK,SAAS;AACnC,QAAIA;AACF,eAASJ,IAAI,GAAGA,IAAID,EAAG,QAAQ,QAAQC,KAAK;AAC1C,cAAMC,IAASF,EAAG,QAAQC,CAAC;AAC3B,YAAI,CAACC;AACH;AACF,cAAMI,IAAMJ,EAAO,WAAW,KAAK,WAAW;AAC9C,QAAAI,MAAQA,EAAI,YAAYA,EAAI,aAAa,KAAK,CAACH,KAAeE,EAAa,QAAQH,GAAQC,CAAW;AAAA,MACvG;AACH,IAAAC,MAASD,KAAeR,EAAG,wBAAwBS,CAAI,GAAG,OAAOJ,EAAG,sBAAsB,KAAK,WAAW;AAAA,EAC3G;AAAA,EACD,UAAU;AACR,SAAK,WAAW;AAAA,EACjB;AACH;AACAR,EAAwB,YAAY;AAAA,EAClC,MAAMe,EAAc;AAAA,EACpB,MAAM;AACR;AACAC,EAAW,IAAIhB,CAAuB;","x_google_ignoreList":[0]}