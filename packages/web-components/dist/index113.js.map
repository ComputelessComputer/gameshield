{"version":3,"file":"index113.js","sources":["../../../node_modules/.pnpm/@pixi+prepare@7.4.3_@pixi+core@7.4.3_@pixi+display@7.4.3_@pixi+core@7.4.3__@pixi+graphi_134e55ec709b792305edd8769667f9d1/node_modules/@pixi/prepare/lib/BasePrepare.mjs"],"sourcesContent":["import { Texture, BaseTexture, Ticker, UPDATE_PRIORITY } from \"@pixi/core\";\nimport { Container } from \"@pixi/display\";\nimport { Text, TextStyle, TextMetrics } from \"@pixi/text\";\nimport { CountLimiter } from \"./CountLimiter.mjs\";\nfunction findMultipleBaseTextures(item, queue) {\n  let result = !1;\n  if (item?._textures?.length) {\n    for (let i = 0; i < item._textures.length; i++)\n      if (item._textures[i] instanceof Texture) {\n        const baseTexture = item._textures[i].baseTexture;\n        queue.includes(baseTexture) || (queue.push(baseTexture), result = !0);\n      }\n  }\n  return result;\n}\nfunction findBaseTexture(item, queue) {\n  if (item.baseTexture instanceof BaseTexture) {\n    const texture = item.baseTexture;\n    return queue.includes(texture) || queue.push(texture), !0;\n  }\n  return !1;\n}\nfunction findTexture(item, queue) {\n  if (item._texture && item._texture instanceof Texture) {\n    const texture = item._texture.baseTexture;\n    return queue.includes(texture) || queue.push(texture), !0;\n  }\n  return !1;\n}\nfunction drawText(_helper, item) {\n  return item instanceof Text ? (item.updateText(!0), !0) : !1;\n}\nfunction calculateTextStyle(_helper, item) {\n  if (item instanceof TextStyle) {\n    const font = item.toFontString();\n    return TextMetrics.measureFont(font), !0;\n  }\n  return !1;\n}\nfunction findText(item, queue) {\n  if (item instanceof Text) {\n    queue.includes(item.style) || queue.push(item.style), queue.includes(item) || queue.push(item);\n    const texture = item._texture.baseTexture;\n    return queue.includes(texture) || queue.push(texture), !0;\n  }\n  return !1;\n}\nfunction findTextStyle(item, queue) {\n  return item instanceof TextStyle ? (queue.includes(item) || queue.push(item), !0) : !1;\n}\nconst _BasePrepare = class _BasePrepare2 {\n  /**\n   * @param {PIXI.IRenderer} renderer - A reference to the current renderer\n   */\n  constructor(renderer) {\n    this.limiter = new CountLimiter(_BasePrepare2.uploadsPerFrame), this.renderer = renderer, this.uploadHookHelper = null, this.queue = [], this.addHooks = [], this.uploadHooks = [], this.completes = [], this.ticking = !1, this.delayedTick = () => {\n      this.queue && this.prepareItems();\n    }, this.registerFindHook(findText), this.registerFindHook(findTextStyle), this.registerFindHook(findMultipleBaseTextures), this.registerFindHook(findBaseTexture), this.registerFindHook(findTexture), this.registerUploadHook(drawText), this.registerUploadHook(calculateTextStyle);\n  }\n  /**\n   * Upload all the textures and graphics to the GPU.\n   * @method PIXI.BasePrepare#upload\n   * @param {PIXI.DisplayObject|PIXI.Container|PIXI.BaseTexture|PIXI.Texture|PIXI.Graphics|PIXI.Text} [item] -\n   *        Container or display object to search for items to upload or the items to upload themselves,\n   *        or optionally ommitted, if items have been added using {@link PIXI.BasePrepare#add `prepare.add`}.\n   */\n  upload(item) {\n    return new Promise((resolve) => {\n      item && this.add(item), this.queue.length ? (this.completes.push(resolve), this.ticking || (this.ticking = !0, Ticker.system.addOnce(this.tick, this, UPDATE_PRIORITY.UTILITY))) : resolve();\n    });\n  }\n  /**\n   * Handle tick update\n   * @private\n   */\n  tick() {\n    setTimeout(this.delayedTick, 0);\n  }\n  /**\n   * Actually prepare items. This is handled outside of the tick because it will take a while\n   * and we do NOT want to block the current animation frame from rendering.\n   * @private\n   */\n  prepareItems() {\n    for (this.limiter.beginFrame(); this.queue.length && this.limiter.allowedToUpload(); ) {\n      const item = this.queue[0];\n      let uploaded = !1;\n      if (item && !item._destroyed) {\n        for (let i = 0, len = this.uploadHooks.length; i < len; i++)\n          if (this.uploadHooks[i](this.uploadHookHelper, item)) {\n            this.queue.shift(), uploaded = !0;\n            break;\n          }\n      }\n      uploaded || this.queue.shift();\n    }\n    if (this.queue.length)\n      Ticker.system.addOnce(this.tick, this, UPDATE_PRIORITY.UTILITY);\n    else {\n      this.ticking = !1;\n      const completes = this.completes.slice(0);\n      this.completes.length = 0;\n      for (let i = 0, len = completes.length; i < len; i++)\n        completes[i]();\n    }\n  }\n  /**\n   * Adds hooks for finding items.\n   * @param {Function} addHook - Function call that takes two parameters: `item:*, queue:Array`\n   *          function must return `true` if it was able to add item to the queue.\n   * @returns Instance of plugin for chaining.\n   */\n  registerFindHook(addHook) {\n    return addHook && this.addHooks.push(addHook), this;\n  }\n  /**\n   * Adds hooks for uploading items.\n   * @param {Function} uploadHook - Function call that takes two parameters: `prepare:CanvasPrepare, item:*` and\n   *          function must return `true` if it was able to handle upload of item.\n   * @returns Instance of plugin for chaining.\n   */\n  registerUploadHook(uploadHook) {\n    return uploadHook && this.uploadHooks.push(uploadHook), this;\n  }\n  /**\n   * Manually add an item to the uploading queue.\n   * @param {PIXI.DisplayObject|PIXI.Container|PIXI.BaseTexture|PIXI.Texture|PIXI.Graphics|PIXI.Text|*} item - Object to\n   *        add to the queue\n   * @returns Instance of plugin for chaining.\n   */\n  add(item) {\n    for (let i = 0, len = this.addHooks.length; i < len && !this.addHooks[i](item, this.queue); i++)\n      ;\n    if (item instanceof Container)\n      for (let i = item.children.length - 1; i >= 0; i--)\n        this.add(item.children[i]);\n    return this;\n  }\n  /** Destroys the plugin, don't use after this. */\n  destroy() {\n    this.ticking && Ticker.system.remove(this.tick, this), this.ticking = !1, this.addHooks = null, this.uploadHooks = null, this.renderer = null, this.completes = null, this.queue = null, this.limiter = null, this.uploadHookHelper = null;\n  }\n};\n_BasePrepare.uploadsPerFrame = 4;\nlet BasePrepare = _BasePrepare;\nexport {\n  BasePrepare\n};\n//# sourceMappingURL=BasePrepare.mjs.map\n"],"names":["findMultipleBaseTextures","item","queue","result","_a","i","Texture","baseTexture","findBaseTexture","BaseTexture","texture","findTexture","drawText","_helper","Text","calculateTextStyle","TextStyle","font","TextMetrics","findText","findTextStyle","_BasePrepare","_BasePrepare2","renderer","CountLimiter","resolve","Ticker","UPDATE_PRIORITY","uploaded","len","completes","addHook","uploadHook","Container","BasePrepare"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,SAASA,EAAyBC,GAAMC,GAAO;;AAC7C,MAAIC,IAAS;AACb,OAAIC,IAAAH,KAAA,gBAAAA,EAAM,cAAN,QAAAG,EAAiB;AACnB,aAASC,IAAI,GAAGA,IAAIJ,EAAK,UAAU,QAAQI;AACzC,UAAIJ,EAAK,UAAUI,CAAC,aAAaC,GAAS;AACxC,cAAMC,IAAcN,EAAK,UAAUI,CAAC,EAAE;AACtC,QAAAH,EAAM,SAASK,CAAW,MAAML,EAAM,KAAKK,CAAW,GAAGJ,IAAS;AAAA,MACnE;AAAA;AAEL,SAAOA;AACT;AACA,SAASK,EAAgBP,GAAMC,GAAO;AACpC,MAAID,EAAK,uBAAuBQ,GAAa;AAC3C,UAAMC,IAAUT,EAAK;AACrB,WAAOC,EAAM,SAASQ,CAAO,KAAKR,EAAM,KAAKQ,CAAO,GAAG;AAAA,EACxD;AACD,SAAO;AACT;AACA,SAASC,EAAYV,GAAMC,GAAO;AAChC,MAAID,EAAK,YAAYA,EAAK,oBAAoBK,GAAS;AACrD,UAAMI,IAAUT,EAAK,SAAS;AAC9B,WAAOC,EAAM,SAASQ,CAAO,KAAKR,EAAM,KAAKQ,CAAO,GAAG;AAAA,EACxD;AACD,SAAO;AACT;AACA,SAASE,EAASC,GAASZ,GAAM;AAC/B,SAAOA,aAAgBa,KAAQb,EAAK,WAAW,EAAE,GAAG,MAAM;AAC5D;AACA,SAASc,EAAmBF,GAASZ,GAAM;AACzC,MAAIA,aAAgBe,GAAW;AAC7B,UAAMC,IAAOhB,EAAK;AAClB,WAAOiB,EAAY,YAAYD,CAAI,GAAG;AAAA,EACvC;AACD,SAAO;AACT;AACA,SAASE,EAASlB,GAAMC,GAAO;AAC7B,MAAID,aAAgBa,GAAM;AACxB,IAAAZ,EAAM,SAASD,EAAK,KAAK,KAAKC,EAAM,KAAKD,EAAK,KAAK,GAAGC,EAAM,SAASD,CAAI,KAAKC,EAAM,KAAKD,CAAI;AAC7F,UAAMS,IAAUT,EAAK,SAAS;AAC9B,WAAOC,EAAM,SAASQ,CAAO,KAAKR,EAAM,KAAKQ,CAAO,GAAG;AAAA,EACxD;AACD,SAAO;AACT;AACA,SAASU,EAAcnB,GAAMC,GAAO;AAClC,SAAOD,aAAgBe,KAAad,EAAM,SAASD,CAAI,KAAKC,EAAM,KAAKD,CAAI,GAAG,MAAM;AACtF;AACA,MAAMoB,IAAe,MAAMC,EAAc;AAAA;AAAA;AAAA;AAAA,EAIvC,YAAYC,GAAU;AACpB,SAAK,UAAU,IAAIC,EAAaF,EAAc,eAAe,GAAG,KAAK,WAAWC,GAAU,KAAK,mBAAmB,MAAM,KAAK,QAAQ,CAAA,GAAI,KAAK,WAAW,CAAA,GAAI,KAAK,cAAc,CAAA,GAAI,KAAK,YAAY,CAAA,GAAI,KAAK,UAAU,IAAI,KAAK,cAAc,MAAM;AACnP,WAAK,SAAS,KAAK;IACpB,GAAE,KAAK,iBAAiBJ,CAAQ,GAAG,KAAK,iBAAiBC,CAAa,GAAG,KAAK,iBAAiBpB,CAAwB,GAAG,KAAK,iBAAiBQ,CAAe,GAAG,KAAK,iBAAiBG,CAAW,GAAG,KAAK,mBAAmBC,CAAQ,GAAG,KAAK,mBAAmBG,CAAkB;AAAA,EACrR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQD,OAAOd,GAAM;AACX,WAAO,IAAI,QAAQ,CAACwB,MAAY;AAC9B,MAAAxB,KAAQ,KAAK,IAAIA,CAAI,GAAG,KAAK,MAAM,UAAU,KAAK,UAAU,KAAKwB,CAAO,GAAG,KAAK,YAAY,KAAK,UAAU,IAAIC,EAAO,OAAO,QAAQ,KAAK,MAAM,MAAMC,EAAgB,OAAO,MAAMF,EAAO;AAAA,IAChM,CAAK;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,OAAO;AACL,eAAW,KAAK,aAAa,CAAC;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,eAAe;AACb,SAAK,KAAK,QAAQ,WAAU,GAAI,KAAK,MAAM,UAAU,KAAK,QAAQ,qBAAqB;AACrF,YAAMxB,IAAO,KAAK,MAAM,CAAC;AACzB,UAAI2B,IAAW;AACf,UAAI3B,KAAQ,CAACA,EAAK;AAChB,iBAASI,IAAI,GAAGwB,IAAM,KAAK,YAAY,QAAQxB,IAAIwB,GAAKxB;AACtD,cAAI,KAAK,YAAYA,CAAC,EAAE,KAAK,kBAAkBJ,CAAI,GAAG;AACpD,iBAAK,MAAM,MAAO,GAAE2B,IAAW;AAC/B;AAAA,UACD;AAAA;AAEL,MAAAA,KAAY,KAAK,MAAM;IACxB;AACD,QAAI,KAAK,MAAM;AACb,MAAAF,EAAO,OAAO,QAAQ,KAAK,MAAM,MAAMC,EAAgB,OAAO;AAAA,SAC3D;AACH,WAAK,UAAU;AACf,YAAMG,IAAY,KAAK,UAAU,MAAM,CAAC;AACxC,WAAK,UAAU,SAAS;AACxB,eAAS,IAAI,GAAGD,IAAMC,EAAU,QAAQ,IAAID,GAAK;AAC/C,QAAAC,EAAU,CAAC;IACd;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,iBAAiBC,GAAS;AACxB,WAAOA,KAAW,KAAK,SAAS,KAAKA,CAAO,GAAG;AAAA,EAChD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,mBAAmBC,GAAY;AAC7B,WAAOA,KAAc,KAAK,YAAY,KAAKA,CAAU,GAAG;AAAA,EACzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,IAAI/B,GAAM;AACR,aAAS,IAAI,GAAG4B,IAAM,KAAK,SAAS,QAAQ,IAAIA,KAAO,CAAC,KAAK,SAAS,CAAC,EAAE5B,GAAM,KAAK,KAAK,GAAG;AAC1F;AACF,QAAIA,aAAgBgC;AAClB,eAAS,IAAIhC,EAAK,SAAS,SAAS,GAAG,KAAK,GAAG;AAC7C,aAAK,IAAIA,EAAK,SAAS,CAAC,CAAC;AAC7B,WAAO;AAAA,EACR;AAAA;AAAA,EAED,UAAU;AACR,SAAK,WAAWyB,EAAO,OAAO,OAAO,KAAK,MAAM,IAAI,GAAG,KAAK,UAAU,IAAI,KAAK,WAAW,MAAM,KAAK,cAAc,MAAM,KAAK,WAAW,MAAM,KAAK,YAAY,MAAM,KAAK,QAAQ,MAAM,KAAK,UAAU,MAAM,KAAK,mBAAmB;AAAA,EACvO;AACH;AACAL,EAAa,kBAAkB;AAC5B,IAACa,KAAcb;","x_google_ignoreList":[0]}