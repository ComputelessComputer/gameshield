{"version":3,"file":"index127.js","sources":["../../game-core/dist/src/utils.js"],"sourcesContent":["/**\n * Utility functions for the GameShield Game Core\n *\n * @packageDocumentation\n */\nimport { DEFAULT_ASSETS_PATH } from './constants';\n/**\n * Generate a random number between min and max (inclusive)\n *\n * @param min - Minimum value\n * @param max - Maximum value\n * @returns Random number between min and max\n */\nexport function randomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n/**\n * Generate a random element from an array\n *\n * @param array - Array to select from\n * @returns Random element from the array\n */\nexport function randomElement(array) {\n    return array[Math.floor(Math.random() * array.length)];\n}\n/**\n * Get random game type excluding specified types\n *\n * @param exclude - Array of game types to exclude\n * @returns Random game type\n */\nexport function randomGameType(exclude = []) {\n    const gameTypes = ['puzzle', 'breakout', 'snake', 'pong', 'dino-run'];\n    const availableTypes = gameTypes.filter(type => !exclude.includes(type));\n    if (availableTypes.length === 0) {\n        // If all types are excluded, default to puzzle\n        return 'puzzle';\n    }\n    return randomElement(availableTypes);\n}\n/**\n * Convert difficulty level to numeric value\n *\n * @param difficulty - Difficulty level\n * @returns Numeric difficulty value (0-1)\n */\nexport function difficultyToValue(difficulty) {\n    switch (difficulty) {\n        case 'easy': return 0.25;\n        case 'medium': return 0.5;\n        case 'hard': return 0.85;\n        default: return 0.5;\n    }\n}\n/**\n * Check if an element is visible in the viewport\n *\n * @param element - HTML element to check\n * @returns True if element is visible\n */\nexport function isElementVisible(element) {\n    const rect = element.getBoundingClientRect();\n    return (rect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth));\n}\n/**\n * Load asset from URL with optional timeout\n *\n * @param url - URL of the asset to load\n * @param timeout - Optional timeout in milliseconds\n * @returns Promise resolving to the loaded asset\n */\nexport function loadAsset(url, timeout = 5000) {\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n        const timer = setTimeout(() => {\n            reject(new Error(`Asset load timeout: ${url}`));\n        }, timeout);\n        img.onload = () => {\n            clearTimeout(timer);\n            resolve(img);\n        };\n        img.onerror = () => {\n            clearTimeout(timer);\n            reject(new Error(`Failed to load asset: ${url}`));\n        };\n        img.src = url;\n    });\n}\n/**\n * Get asset URL based on asset name and type\n *\n * @param assetName - Name of the asset\n * @param type - Asset type (png, jpg, svg, etc.)\n * @param assetsPath - Custom assets path (optional)\n * @returns Full URL to the asset\n */\nexport function getAssetUrl(assetName, type = 'png', assetsPath = DEFAULT_ASSETS_PATH) {\n    return `${assetsPath}/${assetName}.${type}`;\n}\n/**\n * Debug logger (only active in development)\n *\n * @param message - Message to log\n * @param data - Optional data to log\n */\nexport function debug(message, data) {\n    if (process.env.NODE_ENV === 'development') {\n        console.log(`[GameShield] ${message}`, data || '');\n    }\n}\n/**\n * Throttle function execution\n *\n * @param fn - Function to throttle\n * @param delay - Delay in milliseconds\n * @returns Throttled function\n */\nexport function throttle(fn, delay) {\n    let lastCall = 0;\n    return (...args) => {\n        const now = Date.now();\n        if (now - lastCall >= delay) {\n            lastCall = now;\n            fn(...args);\n        }\n    };\n}\n"],"names":["randomInt","min","max","randomElement","array","randomGameType","exclude","availableTypes","type","difficultyToValue","difficulty","getAssetUrl","assetName","assetsPath","DEFAULT_ASSETS_PATH"],"mappings":";AAaO,SAASA,EAAUC,GAAKC,GAAK;AAChC,SAAO,KAAK,MAAM,KAAK,OAAM,KAAMA,IAAMD,IAAM,EAAE,IAAIA;AACzD;AAOO,SAASE,EAAcC,GAAO;AACjC,SAAOA,EAAM,KAAK,MAAM,KAAK,WAAWA,EAAM,MAAM,CAAC;AACzD;AAOO,SAASC,EAAeC,IAAU,IAAI;AAEzC,QAAMC,IADY,CAAC,UAAU,YAAY,SAAS,QAAQ,UAAU,EACnC,OAAO,CAAAC,MAAQ,CAACF,EAAQ,SAASE,CAAI,CAAC;AACvE,SAAID,EAAe,WAAW,IAEnB,WAEJJ,EAAcI,CAAc;AACvC;AAOO,SAASE,EAAkBC,GAAY;AAC1C,UAAQA,GAAU;AAAA,IACd,KAAK;AAAQ,aAAO;AAAA,IACpB,KAAK;AAAU,aAAO;AAAA,IACtB,KAAK;AAAQ,aAAO;AAAA,IACpB;AAAS,aAAO;AAAA,EACnB;AACL;AA8CO,SAASC,EAAYC,GAAWJ,IAAO,OAAOK,IAAaC,GAAqB;AACnF,SAAO,GAAGD,CAAU,IAAID,CAAS,IAAIJ,CAAI;AAC7C;"}