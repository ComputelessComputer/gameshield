{"version":3,"file":"index406.js","sources":["../../../node_modules/.pnpm/pixi.js@8.8.1/node_modules/pixi.js/lib/maths/shapes/Circle.mjs"],"sourcesContent":["import { Rectangle } from './Rectangle.mjs';\n\n\"use strict\";\nclass Circle {\n  /**\n   * @param x - The X coordinate of the center of this circle\n   * @param y - The Y coordinate of the center of this circle\n   * @param radius - The radius of the circle\n   */\n  constructor(x = 0, y = 0, radius = 0) {\n    /**\n     * The type of the object, mainly used to avoid `instanceof` checks\n     * @default 'circle'\n     */\n    this.type = \"circle\";\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n  }\n  /**\n   * Creates a clone of this Circle instance\n   * @returns A copy of the Circle\n   */\n  clone() {\n    return new Circle(this.x, this.y, this.radius);\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this circle\n   * @param x - The X coordinate of the point to test\n   * @param y - The Y coordinate of the point to test\n   * @returns Whether the x/y coordinates are within this Circle\n   */\n  contains(x, y) {\n    if (this.radius <= 0)\n      return false;\n    const r2 = this.radius * this.radius;\n    let dx = this.x - x;\n    let dy = this.y - y;\n    dx *= dx;\n    dy *= dy;\n    return dx + dy <= r2;\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this circle including the stroke.\n   * @param x - The X coordinate of the point to test\n   * @param y - The Y coordinate of the point to test\n   * @param width - The width of the line to check\n   * @param alignment - The alignment of the stroke, 0.5 by default\n   * @returns Whether the x/y coordinates are within this Circle\n   */\n  strokeContains(x, y, width, alignment = 0.5) {\n    if (this.radius === 0)\n      return false;\n    const dx = this.x - x;\n    const dy = this.y - y;\n    const radius = this.radius;\n    const outerWidth = (1 - alignment) * width;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    return distance <= radius + outerWidth && distance > radius - (width - outerWidth);\n  }\n  /**\n   * Returns the framing rectangle of the circle as a Rectangle object\n   * @param out\n   * @returns The framing rectangle\n   */\n  getBounds(out) {\n    out || (out = new Rectangle());\n    out.x = this.x - this.radius;\n    out.y = this.y - this.radius;\n    out.width = this.radius * 2;\n    out.height = this.radius * 2;\n    return out;\n  }\n  /**\n   * Copies another circle to this one.\n   * @param circle - The circle to copy from.\n   * @returns Returns itself.\n   */\n  copyFrom(circle) {\n    this.x = circle.x;\n    this.y = circle.y;\n    this.radius = circle.radius;\n    return this;\n  }\n  /**\n   * Copies this circle to another one.\n   * @param circle - The circle to copy to.\n   * @returns Returns given parameter.\n   */\n  copyTo(circle) {\n    circle.copyFrom(this);\n    return circle;\n  }\n  toString() {\n    return `[pixi.js/math:Circle x=${this.x} y=${this.y} radius=${this.radius}]`;\n  }\n}\n\nexport { Circle };\n//# sourceMappingURL=Circle.mjs.map\n"],"names":["Circle","x","y","radius","r2","dx","dy","width","alignment","outerWidth","distance","out","Rectangle","circle"],"mappings":";AAGA,MAAMA,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMX,YAAYC,IAAI,GAAGC,IAAI,GAAGC,IAAS,GAAG;AAKpC,SAAK,OAAO,UACZ,KAAK,IAAIF,GACT,KAAK,IAAIC,GACT,KAAK,SAASC;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,QAAQ;AACN,WAAO,IAAIH,EAAO,KAAK,GAAG,KAAK,GAAG,KAAK,MAAM;AAAA,EAC9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,SAASC,GAAGC,GAAG;AACb,QAAI,KAAK,UAAU;AACjB,aAAO;AACT,UAAME,IAAK,KAAK,SAAS,KAAK;AAC9B,QAAIC,IAAK,KAAK,IAAIJ,GACdK,IAAK,KAAK,IAAIJ;AAClB,WAAAG,KAAMA,GACNC,KAAMA,GACCD,IAAKC,KAAMF;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASD,eAAeH,GAAGC,GAAGK,GAAOC,IAAY,KAAK;AAC3C,QAAI,KAAK,WAAW;AAClB,aAAO;AACT,UAAMH,IAAK,KAAK,IAAIJ,GACdK,IAAK,KAAK,IAAIJ,GACdC,IAAS,KAAK,QACdM,KAAc,IAAID,KAAaD,GAC/BG,IAAW,KAAK,KAAKL,IAAKA,IAAKC,IAAKA,CAAE;AAC5C,WAAOI,KAAYP,IAASM,KAAcC,IAAWP,KAAUI,IAAQE;AAAA,EACxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,UAAUE,GAAK;AACb,WAAAA,MAAQA,IAAM,IAAIC,EAAS,IAC3BD,EAAI,IAAI,KAAK,IAAI,KAAK,QACtBA,EAAI,IAAI,KAAK,IAAI,KAAK,QACtBA,EAAI,QAAQ,KAAK,SAAS,GAC1BA,EAAI,SAAS,KAAK,SAAS,GACpBA;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,SAASE,GAAQ;AACf,gBAAK,IAAIA,EAAO,GAChB,KAAK,IAAIA,EAAO,GAChB,KAAK,SAASA,EAAO,QACd;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,OAAOA,GAAQ;AACb,WAAAA,EAAO,SAAS,IAAI,GACbA;AAAA,EACR;AAAA,EACD,WAAW;AACT,WAAO,0BAA0B,KAAK,CAAC,MAAM,KAAK,CAAC,WAAW,KAAK,MAAM;AAAA,EAC1E;AACH;","x_google_ignoreList":[0]}