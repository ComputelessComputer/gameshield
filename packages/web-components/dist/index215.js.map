{"version":3,"file":"index215.js","sources":["../../../node_modules/.pnpm/@pixi+core@7.4.3/node_modules/@pixi/core/lib/shader/utils/generateProgram.mjs"],"sourcesContent":["import { GLProgram } from \"../GLProgram.mjs\";\nimport { compileShader } from \"./compileShader.mjs\";\nimport { defaultValue } from \"./defaultValue.mjs\";\nimport { getAttributeData } from \"./getAttributeData.mjs\";\nimport { getUniformData } from \"./getUniformData.mjs\";\nimport { logProgramError } from \"./logProgramError.mjs\";\nfunction generateProgram(gl, program) {\n  const glVertShader = compileShader(gl, gl.VERTEX_SHADER, program.vertexSrc), glFragShader = compileShader(gl, gl.FRAGMENT_SHADER, program.fragmentSrc), webGLProgram = gl.createProgram();\n  gl.attachShader(webGLProgram, glVertShader), gl.attachShader(webGLProgram, glFragShader);\n  const transformFeedbackVaryings = program.extra?.transformFeedbackVaryings;\n  if (transformFeedbackVaryings && (typeof gl.transformFeedbackVaryings != \"function\" ? console.warn(\"TransformFeedback is not supported but TransformFeedbackVaryings are given.\") : gl.transformFeedbackVaryings(\n    webGLProgram,\n    transformFeedbackVaryings.names,\n    transformFeedbackVaryings.bufferMode === \"separate\" ? gl.SEPARATE_ATTRIBS : gl.INTERLEAVED_ATTRIBS\n  )), gl.linkProgram(webGLProgram), gl.getProgramParameter(webGLProgram, gl.LINK_STATUS) || logProgramError(gl, webGLProgram, glVertShader, glFragShader), program.attributeData = getAttributeData(webGLProgram, gl), program.uniformData = getUniformData(webGLProgram, gl), !/^[ \\t]*#[ \\t]*version[ \\t]+300[ \\t]+es[ \\t]*$/m.test(program.vertexSrc)) {\n    const keys = Object.keys(program.attributeData);\n    keys.sort((a, b) => a > b ? 1 : -1);\n    for (let i = 0; i < keys.length; i++)\n      program.attributeData[keys[i]].location = i, gl.bindAttribLocation(webGLProgram, i, keys[i]);\n    gl.linkProgram(webGLProgram);\n  }\n  gl.deleteShader(glVertShader), gl.deleteShader(glFragShader);\n  const uniformData = {};\n  for (const i in program.uniformData) {\n    const data = program.uniformData[i];\n    uniformData[i] = {\n      location: gl.getUniformLocation(webGLProgram, i),\n      value: defaultValue(data.type, data.size)\n    };\n  }\n  return new GLProgram(webGLProgram, uniformData);\n}\nexport {\n  generateProgram\n};\n//# sourceMappingURL=generateProgram.mjs.map\n"],"names":["generateProgram","gl","program","glVertShader","compileShader","glFragShader","webGLProgram","transformFeedbackVaryings","_a","logProgramError","getAttributeData","getUniformData","keys","a","b","i","uniformData","data","defaultValue","GLProgram"],"mappings":";;;;;;AAMA,SAASA,EAAgBC,GAAIC,GAAS;;AACpC,QAAMC,IAAeC,EAAcH,GAAIA,EAAG,eAAeC,EAAQ,SAAS,GAAGG,IAAeD,EAAcH,GAAIA,EAAG,iBAAiBC,EAAQ,WAAW,GAAGI,IAAeL,EAAG;AAC1K,EAAAA,EAAG,aAAaK,GAAcH,CAAY,GAAGF,EAAG,aAAaK,GAAcD,CAAY;AACvF,QAAME,KAA4BC,IAAAN,EAAQ,UAAR,gBAAAM,EAAe;AACjD,MAAID,MAA8B,OAAON,EAAG,6BAA6B,aAAa,QAAQ,KAAK,6EAA6E,IAAIA,EAAG;AAAA,IACrLK;AAAA,IACAC,EAA0B;AAAA,IAC1BA,EAA0B,eAAe,aAAaN,EAAG,mBAAmBA,EAAG;AAAA,EACnF,IAAMA,EAAG,YAAYK,CAAY,GAAGL,EAAG,oBAAoBK,GAAcL,EAAG,WAAW,KAAKQ,EAAgBR,GAAIK,GAAcH,GAAcE,CAAY,GAAGH,EAAQ,gBAAgBQ,EAAiBJ,GAAcL,CAAE,GAAGC,EAAQ,cAAcS,EAAeL,GAAcL,CAAE,GAAG,CAAC,iDAAiD,KAAKC,EAAQ,SAAS,GAAG;AACtV,UAAMU,IAAO,OAAO,KAAKV,EAAQ,aAAa;AAC9C,IAAAU,EAAK,KAAK,CAACC,GAAGC,MAAMD,IAAIC,IAAI,IAAI,EAAE;AAClC,aAASC,IAAI,GAAGA,IAAIH,EAAK,QAAQG;AAC/B,MAAAb,EAAQ,cAAcU,EAAKG,CAAC,CAAC,EAAE,WAAWA,GAAGd,EAAG,mBAAmBK,GAAcS,GAAGH,EAAKG,CAAC,CAAC;AAC7F,IAAAd,EAAG,YAAYK,CAAY;AAAA,EAC5B;AACD,EAAAL,EAAG,aAAaE,CAAY,GAAGF,EAAG,aAAaI,CAAY;AAC3D,QAAMW,IAAc,CAAA;AACpB,aAAWD,KAAKb,EAAQ,aAAa;AACnC,UAAMe,IAAOf,EAAQ,YAAYa,CAAC;AAClC,IAAAC,EAAYD,CAAC,IAAI;AAAA,MACf,UAAUd,EAAG,mBAAmBK,GAAcS,CAAC;AAAA,MAC/C,OAAOG,EAAaD,EAAK,MAAMA,EAAK,IAAI;AAAA,IAC9C;AAAA,EACG;AACD,SAAO,IAAIE,EAAUb,GAAcU,CAAW;AAChD;","x_google_ignoreList":[0]}