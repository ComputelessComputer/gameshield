{"version":3,"file":"index29.js","sources":["../../../node_modules/.pnpm/@pixi+math@7.4.3/node_modules/@pixi/math/lib/ObservablePoint.mjs"],"sourcesContent":["class ObservablePoint {\n  /**\n   * Creates a new `ObservablePoint`\n   * @param cb - callback function triggered when `x` and/or `y` are changed\n   * @param scope - owner of callback\n   * @param {number} [x=0] - position of the point on the x axis\n   * @param {number} [y=0] - position of the point on the y axis\n   */\n  constructor(cb, scope, x = 0, y = 0) {\n    this._x = x, this._y = y, this.cb = cb, this.scope = scope;\n  }\n  /**\n   * Creates a clone of this point.\n   * The callback and scope params can be overridden otherwise they will default\n   * to the clone object's values.\n   * @override\n   * @param cb - The callback function triggered when `x` and/or `y` are changed\n   * @param scope - The owner of the callback\n   * @returns a copy of this observable point\n   */\n  clone(cb = this.cb, scope = this.scope) {\n    return new ObservablePoint(cb, scope, this._x, this._y);\n  }\n  /**\n   * Sets the point to a new `x` and `y` position.\n   * If `y` is omitted, both `x` and `y` will be set to `x`.\n   * @param {number} [x=0] - position of the point on the x axis\n   * @param {number} [y=x] - position of the point on the y axis\n   * @returns The observable point instance itself\n   */\n  set(x = 0, y = x) {\n    return (this._x !== x || this._y !== y) && (this._x = x, this._y = y, this.cb.call(this.scope)), this;\n  }\n  /**\n   * Copies x and y from the given point (`p`)\n   * @param p - The point to copy from. Can be any of type that is or extends `IPointData`\n   * @returns The observable point instance itself\n   */\n  copyFrom(p) {\n    return (this._x !== p.x || this._y !== p.y) && (this._x = p.x, this._y = p.y, this.cb.call(this.scope)), this;\n  }\n  /**\n   * Copies this point's x and y into that of the given point (`p`)\n   * @param p - The point to copy to. Can be any of type that is or extends `IPointData`\n   * @returns The point (`p`) with values updated\n   */\n  copyTo(p) {\n    return p.set(this._x, this._y), p;\n  }\n  /**\n   * Accepts another point (`p`) and returns `true` if the given point is equal to this point\n   * @param p - The point to check\n   * @returns Returns `true` if both `x` and `y` are equal\n   */\n  equals(p) {\n    return p.x === this._x && p.y === this._y;\n  }\n  /** Position of the observable point on the x axis. */\n  get x() {\n    return this._x;\n  }\n  set x(value) {\n    this._x !== value && (this._x = value, this.cb.call(this.scope));\n  }\n  /** Position of the observable point on the y axis. */\n  get y() {\n    return this._y;\n  }\n  set y(value) {\n    this._y !== value && (this._y = value, this.cb.call(this.scope));\n  }\n}\nObservablePoint.prototype.toString = function() {\n  return `[@pixi/math:ObservablePoint x=${this.x} y=${this.y} scope=${this.scope}]`;\n};\nexport {\n  ObservablePoint\n};\n//# sourceMappingURL=ObservablePoint.mjs.map\n"],"names":["ObservablePoint","cb","scope","x","y","p","value"],"mappings":"AAAA,MAAMA,EAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQpB,YAAYC,GAAIC,GAAOC,IAAI,GAAGC,IAAI,GAAG;AACnC,SAAK,KAAKD,GAAG,KAAK,KAAKC,GAAG,KAAK,KAAKH,GAAI,KAAK,QAAQC;AAAA,EACtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUD,MAAMD,IAAK,KAAK,IAAIC,IAAQ,KAAK,OAAO;AACtC,WAAO,IAAIF,EAAgBC,GAAIC,GAAO,KAAK,IAAI,KAAK,EAAE;AAAA,EACvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQD,IAAIC,IAAI,GAAGC,IAAID,GAAG;AAChB,YAAQ,KAAK,OAAOA,KAAK,KAAK,OAAOC,OAAO,KAAK,KAAKD,GAAG,KAAK,KAAKC,GAAG,KAAK,GAAG,KAAK,KAAK,KAAK,IAAI;AAAA,EAClG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,SAASC,GAAG;AACV,YAAQ,KAAK,OAAOA,EAAE,KAAK,KAAK,OAAOA,EAAE,OAAO,KAAK,KAAKA,EAAE,GAAG,KAAK,KAAKA,EAAE,GAAG,KAAK,GAAG,KAAK,KAAK,KAAK,IAAI;AAAA,EAC1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,OAAOA,GAAG;AACR,WAAOA,EAAE,IAAI,KAAK,IAAI,KAAK,EAAE,GAAGA;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,OAAOA,GAAG;AACR,WAAOA,EAAE,MAAM,KAAK,MAAMA,EAAE,MAAM,KAAK;AAAA,EACxC;AAAA;AAAA,EAED,IAAI,IAAI;AACN,WAAO,KAAK;AAAA,EACb;AAAA,EACD,IAAI,EAAEC,GAAO;AACX,SAAK,OAAOA,MAAU,KAAK,KAAKA,GAAO,KAAK,GAAG,KAAK,KAAK,KAAK;AAAA,EAC/D;AAAA;AAAA,EAED,IAAI,IAAI;AACN,WAAO,KAAK;AAAA,EACb;AAAA,EACD,IAAI,EAAEA,GAAO;AACX,SAAK,OAAOA,MAAU,KAAK,KAAKA,GAAO,KAAK,GAAG,KAAK,KAAK,KAAK;AAAA,EAC/D;AACH;AACAN,EAAgB,UAAU,WAAW,WAAW;AAC9C,SAAO,iCAAiC,KAAK,CAAC,MAAM,KAAK,CAAC,UAAU,KAAK,KAAK;AAChF;","x_google_ignoreList":[0]}