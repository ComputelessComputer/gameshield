{"version":3,"file":"index525.js","sources":["../../../node_modules/.pnpm/pixi.js@8.8.1/node_modules/pixi.js/lib/scene/graphics/shared/svg/parseSVGPath.mjs"],"sourcesContent":["import parse from 'parse-svg-path';\nimport { warn } from '../../../../utils/logging/warn.mjs';\n\n\"use strict\";\nfunction parseSVGPath(svgPath, path) {\n  const commands = parse(svgPath);\n  const subpaths = [];\n  let currentSubPath = null;\n  let lastX = 0;\n  let lastY = 0;\n  for (let i = 0; i < commands.length; i++) {\n    const command = commands[i];\n    const type = command[0];\n    const data = command;\n    switch (type) {\n      case \"M\":\n        lastX = data[1];\n        lastY = data[2];\n        path.moveTo(lastX, lastY);\n        break;\n      case \"m\":\n        lastX += data[1];\n        lastY += data[2];\n        path.moveTo(lastX, lastY);\n        break;\n      case \"H\":\n        lastX = data[1];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"h\":\n        lastX += data[1];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"V\":\n        lastY = data[1];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"v\":\n        lastY += data[1];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"L\":\n        lastX = data[1];\n        lastY = data[2];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"l\":\n        lastX += data[1];\n        lastY += data[2];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"C\":\n        lastX = data[5];\n        lastY = data[6];\n        path.bezierCurveTo(\n          data[1],\n          data[2],\n          // First control point\n          data[3],\n          data[4],\n          // Second control point\n          lastX,\n          lastY\n          // End point\n        );\n        break;\n      case \"c\":\n        path.bezierCurveTo(\n          lastX + data[1],\n          lastY + data[2],\n          // First control point\n          lastX + data[3],\n          lastY + data[4],\n          // Second control point\n          lastX + data[5],\n          lastY + data[6]\n          // End point\n        );\n        lastX += data[5];\n        lastY += data[6];\n        break;\n      case \"S\":\n        lastX = data[3];\n        lastY = data[4];\n        path.bezierCurveToShort(\n          data[1],\n          data[2],\n          // Control point\n          lastX,\n          lastY\n          // End point\n        );\n        break;\n      case \"s\":\n        path.bezierCurveToShort(\n          lastX + data[1],\n          lastY + data[2],\n          // Control point\n          lastX + data[3],\n          lastY + data[4]\n          // End point\n        );\n        lastX += data[3];\n        lastY += data[4];\n        break;\n      case \"Q\":\n        lastX = data[3];\n        lastY = data[4];\n        path.quadraticCurveTo(\n          data[1],\n          data[2],\n          // Control point\n          lastX,\n          lastY\n          // End point\n        );\n        break;\n      case \"q\":\n        path.quadraticCurveTo(\n          lastX + data[1],\n          lastY + data[2],\n          // Control point\n          lastX + data[3],\n          lastY + data[4]\n          // End point\n        );\n        lastX += data[3];\n        lastY += data[4];\n        break;\n      case \"T\":\n        lastX = data[1];\n        lastY = data[2];\n        path.quadraticCurveToShort(\n          lastX,\n          lastY\n          // End point\n        );\n        break;\n      case \"t\":\n        lastX += data[1];\n        lastY += data[2];\n        path.quadraticCurveToShort(\n          lastX,\n          lastY\n          // End point\n        );\n        break;\n      case \"A\":\n        lastX = data[6];\n        lastY = data[7];\n        path.arcToSvg(\n          data[1],\n          // rx\n          data[2],\n          // ry\n          data[3],\n          // x-axis-rotation\n          data[4],\n          // large-arc-flag\n          data[5],\n          // sweep-flag\n          lastX,\n          lastY\n          // End point\n        );\n        break;\n      case \"a\":\n        lastX += data[6];\n        lastY += data[7];\n        path.arcToSvg(\n          data[1],\n          // rx\n          data[2],\n          // ry\n          data[3],\n          // x-axis-rotation\n          data[4],\n          // large-arc-flag\n          data[5],\n          // sweep-flag\n          lastX,\n          lastY\n          // End point\n        );\n        break;\n      case \"Z\":\n      case \"z\":\n        path.closePath();\n        if (subpaths.length > 0) {\n          currentSubPath = subpaths.pop();\n          if (currentSubPath) {\n            lastX = currentSubPath.startX;\n            lastY = currentSubPath.startY;\n          } else {\n            lastX = 0;\n            lastY = 0;\n          }\n        }\n        currentSubPath = null;\n        break;\n      default:\n        warn(`Unknown SVG path command: ${type}`);\n    }\n    if (type !== \"Z\" && type !== \"z\") {\n      if (currentSubPath === null) {\n        currentSubPath = { startX: lastX, startY: lastY };\n        subpaths.push(currentSubPath);\n      }\n    }\n  }\n  return path;\n}\n\nexport { parseSVGPath };\n//# sourceMappingURL=parseSVGPath.mjs.map\n"],"names":["parseSVGPath","svgPath","path","commands","parse","subpaths","currentSubPath","lastX","lastY","i","command","type","data","warn"],"mappings":"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","x_google_ignoreList":[0]}