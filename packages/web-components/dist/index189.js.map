{"version":3,"file":"index189.js","sources":["../../../node_modules/.pnpm/@pixi+core@7.4.3/node_modules/@pixi/core/lib/batch/ObjectRenderer.mjs"],"sourcesContent":["class ObjectRenderer {\n  /**\n   * @param renderer - The renderer this manager works for.\n   */\n  constructor(renderer) {\n    this.renderer = renderer;\n  }\n  /** Stub method that should be used to empty the current batch by rendering objects now. */\n  flush() {\n  }\n  /** Generic destruction method that frees all resources. This should be called by subclasses. */\n  destroy() {\n    this.renderer = null;\n  }\n  /**\n   * Stub method that initializes any state required before\n   * rendering starts. It is different from the `prerender`\n   * signal, which occurs every frame, in that it is called\n   * whenever an object requests _this_ renderer specifically.\n   */\n  start() {\n  }\n  /** Stops the renderer. It should free up any state and become dormant. */\n  stop() {\n    this.flush();\n  }\n  /**\n   * Keeps the object to render. It doesn't have to be\n   * rendered immediately.\n   * @param {PIXI.DisplayObject} _object - The object to render.\n   */\n  render(_object) {\n  }\n}\nexport {\n  ObjectRenderer\n};\n//# sourceMappingURL=ObjectRenderer.mjs.map\n"],"names":["ObjectRenderer","renderer","_object"],"mappings":"AAAA,MAAMA,EAAe;AAAA;AAAA;AAAA;AAAA,EAInB,YAAYC,GAAU;AACpB,SAAK,WAAWA;AAAA,EACjB;AAAA;AAAA,EAED,QAAQ;AAAA,EACP;AAAA;AAAA,EAED,UAAU;AACR,SAAK,WAAW;AAAA,EACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,QAAQ;AAAA,EACP;AAAA;AAAA,EAED,OAAO;AACL,SAAK,MAAK;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,OAAOC,GAAS;AAAA,EACf;AACH;","x_google_ignoreList":[0]}