import{_ as a,c as i,o as n,ai as e}from"./chunks/framework.DewS4gmp.js";const d=JSON.parse('{"title":"GameShield Architecture","description":"","frontmatter":{},"headers":[],"relativePath":"guide/architecture.md","filePath":"guide/architecture.md"}'),l={name:"guide/architecture.md"};function t(p,s,h,r,k,o){return n(),i("div",null,s[0]||(s[0]=[e(`<h1 id="gameshield-architecture" tabindex="-1">GameShield Architecture <a class="header-anchor" href="#gameshield-architecture" aria-label="Permalink to &quot;GameShield Architecture&quot;">​</a></h1><p>GameShield follows a clean, modular architecture designed to provide flexibility, maintainability, and optimal performance. This document explains the overall architecture and how the different packages work together.</p><h2 id="modular-package-structure" tabindex="-1">Modular Package Structure <a class="header-anchor" href="#modular-package-structure" aria-label="Permalink to &quot;Modular Package Structure&quot;">​</a></h2><p>GameShield is organized into three main packages:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>/gameshield</span></span>
<span class="line"><span>├── packages/</span></span>
<span class="line"><span>│   ├── core/                                 # Core CAPTCHA logic (@gameshield/core)</span></span>
<span class="line"><span>│   ├── react/                                # React UI components (@gameshield/react)</span></span>
<span class="line"><span>│   └── server/                               # Server-side validation (@gameshield/server)</span></span></code></pre></div><p>This modular approach offers several advantages:</p><ul><li><strong>Separation of Concerns</strong>: Each package has a clear, focused responsibility</li><li><strong>Flexibility</strong>: Use only the packages you need for your specific use case</li><li><strong>Maintainability</strong>: Changes to one package don&#39;t necessarily affect others</li><li><strong>Performance</strong>: Bundle only what you need, reducing client-side payload</li></ul><h2 id="package-responsibilities" tabindex="-1">Package Responsibilities <a class="header-anchor" href="#package-responsibilities" aria-label="Permalink to &quot;Package Responsibilities&quot;">​</a></h2><h3 id="gameshield-core" tabindex="-1">@gameshield/core <a class="header-anchor" href="#gameshield-core" aria-label="Permalink to &quot;@gameshield/core&quot;">​</a></h3><p>The core package contains all the essential logic with no UI dependencies:</p><ul><li>Game challenge generation and management</li><li>Behavior analysis algorithms</li><li>Token generation and handling</li><li>Security utilities</li></ul><p>This package can be used directly if you want to build a custom UI or integrate with a different framework.</p><h3 id="gameshield-react" tabindex="-1">@gameshield/react <a class="header-anchor" href="#gameshield-react" aria-label="Permalink to &quot;@gameshield/react&quot;">​</a></h3><p>The React package provides ready-to-use React components:</p><ul><li><code>GameShield</code> main component for easy integration</li><li>Custom hooks for advanced use cases</li><li>Theming and styling utilities</li><li>Event handling for verification lifecycle</li></ul><p>This package depends on <code>@gameshield/core</code> and provides a React-specific implementation.</p><h3 id="gameshield-server" tabindex="-1">@gameshield/server <a class="header-anchor" href="#gameshield-server" aria-label="Permalink to &quot;@gameshield/server&quot;">​</a></h3><p>The server package handles verification and security on the server side:</p><ul><li>Token verification</li><li>Security features (rate limiting, IP protection)</li><li>Configuration options for different environments</li><li>Analytics data processing (optional)</li></ul><h2 id="data-flow" tabindex="-1">Data Flow <a class="header-anchor" href="#data-flow" aria-label="Permalink to &quot;Data Flow&quot;">​</a></h2><p>Here&#39;s how data flows through the GameShield system:</p><ol><li><p><strong>Client Initialization</strong>:</p><ul><li>The React component is rendered in the browser</li><li>It initializes the core game engine and behavior analyzer</li></ul></li><li><p><strong>User Interaction</strong>:</p><ul><li>User plays the game challenge</li><li>Behavior analyzer collects interaction data</li><li>Game engine determines if the challenge is completed successfully</li></ul></li><li><p><strong>Verification</strong>:</p><ul><li>Upon successful completion, core package generates a verification token</li><li>Token contains encrypted game results and behavior analysis data</li><li>React component emits success event with the token</li></ul></li><li><p><strong>Server Validation</strong>:</p><ul><li>Client sends the token to the server</li><li>Server package validates the token</li><li>Server confirms the verification and allows the protected action</li></ul></li></ol><h2 id="technical-implementation" tabindex="-1">Technical Implementation <a class="header-anchor" href="#technical-implementation" aria-label="Permalink to &quot;Technical Implementation&quot;">​</a></h2><h3 id="game-engine" tabindex="-1">Game Engine <a class="header-anchor" href="#game-engine" aria-label="Permalink to &quot;Game Engine&quot;">​</a></h3><p>The game engine uses PixiJS, a fast 2D rendering library, to create interactive game experiences:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>┌─────────────────────┐</span></span>
<span class="line"><span>│    Game Factory     │</span></span>
<span class="line"><span>└─────────────────────┘</span></span>
<span class="line"><span>          │</span></span>
<span class="line"><span>          ▼</span></span>
<span class="line"><span>┌─────────────────────┐</span></span>
<span class="line"><span>│    Game Instance    │</span></span>
<span class="line"><span>└─────────────────────┘</span></span>
<span class="line"><span>          │</span></span>
<span class="line"><span>          ▼</span></span>
<span class="line"><span>┌─────────────────────┐</span></span>
<span class="line"><span>│     PixiJS App      │</span></span>
<span class="line"><span>└─────────────────────┘</span></span></code></pre></div><h3 id="behavior-analysis" tabindex="-1">Behavior Analysis <a class="header-anchor" href="#behavior-analysis" aria-label="Permalink to &quot;Behavior Analysis&quot;">​</a></h3><p>The behavior analyzer uses sophisticated algorithms to detect human vs bot interaction patterns:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>┌─────────────────────┐</span></span>
<span class="line"><span>│  Event Collection   │</span></span>
<span class="line"><span>└─────────────────────┘</span></span>
<span class="line"><span>          │</span></span>
<span class="line"><span>          ▼</span></span>
<span class="line"><span>┌─────────────────────┐</span></span>
<span class="line"><span>│  Pattern Analysis   │</span></span>
<span class="line"><span>└─────────────────────┘</span></span>
<span class="line"><span>          │</span></span>
<span class="line"><span>          ▼</span></span>
<span class="line"><span>┌─────────────────────┐</span></span>
<span class="line"><span>│   Risk Assessment   │</span></span>
<span class="line"><span>└─────────────────────┘</span></span></code></pre></div><h3 id="token-system" tabindex="-1">Token System <a class="header-anchor" href="#token-system" aria-label="Permalink to &quot;Token System&quot;">​</a></h3><p>The token system uses secure cryptographic methods:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>┌─────────────────────┐</span></span>
<span class="line"><span>│   Session Creation  │</span></span>
<span class="line"><span>└─────────────────────┘</span></span>
<span class="line"><span>          │</span></span>
<span class="line"><span>          ▼</span></span>
<span class="line"><span>┌─────────────────────┐</span></span>
<span class="line"><span>│  Data Compilation   │</span></span>
<span class="line"><span>└─────────────────────┘</span></span>
<span class="line"><span>          │</span></span>
<span class="line"><span>          ▼</span></span>
<span class="line"><span>┌─────────────────────┐</span></span>
<span class="line"><span>│  Token Generation   │</span></span>
<span class="line"><span>└─────────────────────┘</span></span></code></pre></div><h2 id="integration-with-frontend" tabindex="-1">Integration with Frontend <a class="header-anchor" href="#integration-with-frontend" aria-label="Permalink to &quot;Integration with Frontend&quot;">​</a></h2><p>The React component seamlessly integrates with any React application:</p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { GameShield } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@gameshield/react&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MyForm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">form</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Form fields */</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GameShield</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        onSuccess</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{handleVerification}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        size</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;400px&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;submit&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Submit&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">form</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="server-side-integration" tabindex="-1">Server-side Integration <a class="header-anchor" href="#server-side-integration" aria-label="Permalink to &quot;Server-side Integration&quot;">​</a></h2><p>The server package can be used with any Node.js server framework:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> express </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;express&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { verifyToken } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@gameshield/server&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> app</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> express</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">post</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/api/verify&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">req</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">token</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> req.body;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> verifyToken</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(token);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (result.valid) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Proceed with protected action</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    res.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ success: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    res.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      success: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      message: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Verification failed&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><ul><li>Learn about the <a href="/guide/packages/core.html">@gameshield/core</a> package</li><li>Explore the <a href="/guide/packages/react.html">@gameshield/react</a> component</li><li>Set up <a href="/guide/packages/server.html">server-side verification</a></li></ul>`,40)]))}const g=a(l,[["render",t]]);export{d as __pageData,g as default};
