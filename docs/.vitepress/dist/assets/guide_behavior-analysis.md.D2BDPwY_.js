import{_ as i,c as s,o as e,ai as t}from"./chunks/framework.DewS4gmp.js";const k=JSON.parse('{"title":"Behavior Analysis","description":"","frontmatter":{},"headers":[],"relativePath":"guide/behavior-analysis.md","filePath":"guide/behavior-analysis.md"}'),n={name:"guide/behavior-analysis.md"};function r(l,a,o,h,c,p){return e(),s("div",null,a[0]||(a[0]=[t(`<h1 id="behavior-analysis" tabindex="-1">Behavior Analysis <a class="header-anchor" href="#behavior-analysis" aria-label="Permalink to &quot;Behavior Analysis&quot;">​</a></h1><p>GameShield uses advanced behavior analysis to distinguish between human users and automated bots. This approach provides a more effective security layer than traditional CAPTCHA methods alone.</p><h2 id="how-it-works" tabindex="-1">How It Works <a class="header-anchor" href="#how-it-works" aria-label="Permalink to &quot;How It Works&quot;">​</a></h2><p>The behavior analysis system works by:</p><ol><li><strong>Collecting Interaction Data</strong>: As users interact with the game challenges, GameShield tracks various interaction patterns</li><li><strong>Analyzing Patterns</strong>: The collected data is analyzed using algorithms designed to identify human vs bot behavior</li><li><strong>Risk Assessment</strong>: A risk score is calculated based on the analysis results</li><li><strong>Verification Decision</strong>: The system uses the risk score to make a final verification decision</li></ol><h2 id="key-metrics" tabindex="-1">Key Metrics <a class="header-anchor" href="#key-metrics" aria-label="Permalink to &quot;Key Metrics&quot;">​</a></h2><p>GameShield analyzes several key metrics to determine if a user is human:</p><h3 id="movement-smoothness" tabindex="-1">Movement Smoothness <a class="header-anchor" href="#movement-smoothness" aria-label="Permalink to &quot;Movement Smoothness&quot;">​</a></h3><p>Human movements typically have natural variations in speed and direction, while bot movements often show unnatural patterns:</p><ul><li><strong>Human Patterns</strong>: Gradual acceleration/deceleration, slight imprecisions, natural curves</li><li><strong>Bot Patterns</strong>: Perfectly straight lines, constant velocity, unnatural precision</li></ul><h3 id="reaction-time" tabindex="-1">Reaction Time <a class="header-anchor" href="#reaction-time" aria-label="Permalink to &quot;Reaction Time&quot;">​</a></h3><p>Humans have typical reaction time ranges that differ from automated systems:</p><ul><li><strong>Human Patterns</strong>: Variable reaction times (typically 200-900ms), occasional delays</li><li><strong>Bot Patterns</strong>: Too fast (&lt; 100ms) or too consistent reaction times</li></ul><h3 id="interaction-density" tabindex="-1">Interaction Density <a class="header-anchor" href="#interaction-density" aria-label="Permalink to &quot;Interaction Density&quot;">​</a></h3><p>The frequency and distribution of interactions can reveal automated behavior:</p><ul><li><strong>Human Patterns</strong>: Natural pauses, varying interaction rates, occasional mistakes</li><li><strong>Bot Patterns</strong>: Perfectly timed interactions, unnaturally consistent patterns</li></ul><h3 id="pattern-variability" tabindex="-1">Pattern Variability <a class="header-anchor" href="#pattern-variability" aria-label="Permalink to &quot;Pattern Variability&quot;">​</a></h3><p>Humans show natural variability in their interaction patterns:</p><ul><li><strong>Human Patterns</strong>: Slight inconsistencies, learning patterns, adaptation</li><li><strong>Bot Patterns</strong>: Repetitive behaviors, lack of adaptation, perfect consistency</li></ul><h2 id="implementation" tabindex="-1">Implementation <a class="header-anchor" href="#implementation" aria-label="Permalink to &quot;Implementation&quot;">​</a></h2><p>The behavior analysis is implemented in the <code>@gameshield/core</code> package through the <code>BehaviorAnalyzer</code> class:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { BehaviorAnalyzer } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@gameshield/core&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Create a new analyzer instance</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> analyzer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BehaviorAnalyzer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Start tracking user behavior</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">analyzer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">startTracking</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Later, analyze the collected data</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> analyzer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">analyze</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Is human:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, result.isHuman);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Confidence:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, result.confidence);</span></span></code></pre></div><h3 id="analysis-result" tabindex="-1">Analysis Result <a class="header-anchor" href="#analysis-result" aria-label="Permalink to &quot;Analysis Result&quot;">​</a></h3><p>The analysis result contains:</p><ul><li><code>isHuman</code> (boolean): Whether the user is likely human</li><li><code>confidence</code> (number): Confidence level (0-1) of the determination</li></ul><h2 id="advanced-configuration" tabindex="-1">Advanced Configuration <a class="header-anchor" href="#advanced-configuration" aria-label="Permalink to &quot;Advanced Configuration&quot;">​</a></h2><p>For advanced use cases, you can configure the behavior analyzer with custom thresholds:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> analyzer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BehaviorAnalyzer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Custom thresholds</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  movementSmoothnessThreshold: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  reactionTimeThreshold: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  interactionDensityThreshold: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  patternVariabilityThreshold: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.6</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="combining-with-game-challenges" tabindex="-1">Combining with Game Challenges <a class="header-anchor" href="#combining-with-game-challenges" aria-label="Permalink to &quot;Combining with Game Challenges&quot;">​</a></h2><p>The behavior analysis works in conjunction with the game challenges to provide a multi-layered verification approach:</p><ol><li><strong>Game Challenge</strong>: Verifies that the user can complete a specific task</li><li><strong>Behavior Analysis</strong>: Verifies that the user&#39;s interaction patterns match human behavior</li></ol><p>This combination makes GameShield significantly more difficult for bots to bypass compared to traditional CAPTCHAs.</p><h2 id="privacy-considerations" tabindex="-1">Privacy Considerations <a class="header-anchor" href="#privacy-considerations" aria-label="Permalink to &quot;Privacy Considerations&quot;">​</a></h2><p>GameShield&#39;s behavior analysis is designed with privacy in mind:</p><ul><li><strong>No Personal Data</strong>: The system doesn&#39;t collect any personally identifiable information</li><li><strong>Local Processing</strong>: Behavior analysis happens in the browser</li><li><strong>Minimal Data Transfer</strong>: Only the verification result is sent to the server, not the raw interaction data</li></ul><h2 id="effectiveness-against-bot-types" tabindex="-1">Effectiveness Against Bot Types <a class="header-anchor" href="#effectiveness-against-bot-types" aria-label="Permalink to &quot;Effectiveness Against Bot Types&quot;">​</a></h2><p>GameShield&#39;s behavior analysis is effective against various types of bots:</p><table tabindex="0"><thead><tr><th>Bot Type</th><th>Effectiveness</th><th>Reason</th></tr></thead><tbody><tr><td>Simple Scripts</td><td>Very High</td><td>Cannot mimic human interaction patterns</td></tr><tr><td>Headless Browsers</td><td>High</td><td>Difficult to simulate natural mouse movements</td></tr><tr><td>AI-based Solvers</td><td>Medium-High</td><td>Even advanced AI has difficulty perfectly mimicking human behavior</td></tr><tr><td>Human Farms</td><td>Medium</td><td>Can detect unusual patterns even with human operators</td></tr></tbody></table><h2 id="continuous-improvement" tabindex="-1">Continuous Improvement <a class="header-anchor" href="#continuous-improvement" aria-label="Permalink to &quot;Continuous Improvement&quot;">​</a></h2><p>The behavior analysis system is continuously improved through:</p><ol><li><strong>Pattern Learning</strong>: The system learns new patterns to better distinguish humans from bots</li><li><strong>Threshold Adjustments</strong>: Thresholds are adjusted based on real-world data</li><li><strong>New Metrics</strong>: Additional metrics are added to improve detection accuracy</li></ol><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h2><p>To maximize the effectiveness of behavior analysis:</p><ol><li><strong>Use Appropriate Game Types</strong>: Different games reveal different behavior patterns</li><li><strong>Combine with Server Verification</strong>: Always verify tokens server-side</li><li><strong>Adjust Difficulty Based on Risk</strong>: Use higher difficulty for high-risk actions</li><li><strong>Monitor Verification Rates</strong>: Watch for unusual changes in verification success rates</li></ol><h2 id="technical-details" tabindex="-1">Technical Details <a class="header-anchor" href="#technical-details" aria-label="Permalink to &quot;Technical Details&quot;">​</a></h2><p>For those interested in the technical implementation, the behavior analyzer:</p><ol><li>Attaches event listeners to track mouse movements, clicks, and keyboard interactions</li><li>Samples these events at appropriate intervals to avoid performance issues</li><li>Calculates statistical measures (variance, standard deviation, etc.) on the collected data</li><li>Applies machine learning algorithms to classify the behavior as human or bot</li><li>Generates a confidence score based on the classification results</li></ol><p>This approach provides a robust security layer that is difficult for automated systems to bypass while maintaining a good user experience.</p><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><ul><li>Learn about <a href="/guide/packages/server.html">server-side verification</a> for complete protection</li><li>Explore <a href="/guide/integration-examples.html">integration examples</a> for common use cases</li></ul>`,50)]))}const m=i(n,[["render",r]]);export{k as __pageData,m as default};
