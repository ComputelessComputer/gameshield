import{_ as a,c as s,o as t,ai as e,j as n}from"./chunks/framework.DewS4gmp.js";const l="/gameshield_how_it_works.png",u=JSON.parse('{"title":"How GameShield Works","description":"","frontmatter":{},"headers":[],"relativePath":"guide/how-it-works.md","filePath":"guide/how-it-works.md"}'),r={name:"guide/how-it-works.md"};function h(o,i,p,k,c,d){return t(),s("div",null,i[0]||(i[0]=[e('<h1 id="how-gameshield-works" tabindex="-1">How GameShield Works <a class="header-anchor" href="#how-gameshield-works" aria-label="Permalink to &quot;How GameShield Works&quot;">​</a></h1><p>This page explains the technical architecture and operational flow of GameShield&#39;s game-based CAPTCHA system.</p><h2 id="architecture-overview" tabindex="-1">Architecture Overview <a class="header-anchor" href="#architecture-overview" aria-label="Permalink to &quot;Architecture Overview&quot;">​</a></h2><p>GameShield follows a modular architecture with three main packages:</p><ol><li><strong>Core Package</strong>: Contains the essential logic for game generation, behavior analysis, and token management</li><li><strong>React Package</strong>: Provides React components for easy integration into React applications</li><li><strong>Server Package</strong>: Handles server-side verification and security features</li></ol>',5),n("img",{src:l,darkSrc:"/gameshield_how_it_works_dark.png",alt:"GameShield Architecture",width:"600px"},null,-1),e(`<h2 id="verification-process" tabindex="-1">Verification Process <a class="header-anchor" href="#verification-process" aria-label="Permalink to &quot;Verification Process&quot;">​</a></h2><h3 id="_1-challenge-generation" tabindex="-1">1. Challenge Generation <a class="header-anchor" href="#_1-challenge-generation" aria-label="Permalink to &quot;1. Challenge Generation&quot;">​</a></h3><p>When a CAPTCHA is requested, the system:</p><ul><li>Generates a unique session ID</li><li>Randomly selects a game type from the available options (Pong, Snake, Breakout, Dino Run)</li><li>Creates game parameters based on the specified difficulty level</li><li>Applies randomization to prevent pattern recognition</li></ul><h3 id="_2-user-interaction" tabindex="-1">2. User Interaction <a class="header-anchor" href="#_2-user-interaction" aria-label="Permalink to &quot;2. User Interaction&quot;">​</a></h3><p>The user is presented with an interactive game that requires human-like decision making and motor skills:</p><ul><li>Each game is designed to be engaging yet simple to understand</li><li>Games require natural interaction patterns that are difficult for bots to simulate</li><li>The 1:1 aspect ratio ensures consistent display across different devices</li><li>The component adapts to different screen sizes while maintaining playability</li></ul><h3 id="_3-behavior-analysis" tabindex="-1">3. Behavior Analysis <a class="header-anchor" href="#_3-behavior-analysis" aria-label="Permalink to &quot;3. Behavior Analysis&quot;">​</a></h3><p>During gameplay, the system analyzes multiple factors:</p><ul><li>Movement patterns (mouse/touch movements)</li><li>Reaction times to game events</li><li>Interaction density and distribution</li><li>Pattern variability and natural inconsistencies</li></ul><p>These factors are analyzed to determine if the user&#39;s behavior matches human patterns.</p><h3 id="_4-token-generation" tabindex="-1">4. Token Generation <a class="header-anchor" href="#_4-token-generation" aria-label="Permalink to &quot;4. Token Generation&quot;">​</a></h3><p>Upon successful completion:</p><ul><li>The system analyzes the collected behavior data</li><li>A verification token is generated containing game results and behavior metrics</li><li>This token is passed to your application via the <code>onSuccess</code> callback</li></ul><h3 id="_5-server-verification" tabindex="-1">5. Server Verification <a class="header-anchor" href="#_5-server-verification" aria-label="Permalink to &quot;5. Server Verification&quot;">​</a></h3><p>For complete security, your server should:</p><ul><li>Receive the token from the client</li><li>Use the server package to verify the token&#39;s validity</li><li>Process the user&#39;s request only after successful verification</li></ul><h2 id="security-measures" tabindex="-1">Security Measures <a class="header-anchor" href="#security-measures" aria-label="Permalink to &quot;Security Measures&quot;">​</a></h2><p>GameShield employs multiple layers of security:</p><h3 id="dynamic-challenges" tabindex="-1">Dynamic Challenges <a class="header-anchor" href="#dynamic-challenges" aria-label="Permalink to &quot;Dynamic Challenges&quot;">​</a></h3><p>Each game instance is uniquely generated, making it impossible to create a database of solutions.</p><h3 id="behavior-analysis" tabindex="-1">Behavior Analysis <a class="header-anchor" href="#behavior-analysis" aria-label="Permalink to &quot;Behavior Analysis&quot;">​</a></h3><p>Beyond just completing the game, the system analyzes how the user interacts with the challenge, detecting automation attempts.</p><h3 id="token-based-verification" tabindex="-1">Token-based Verification <a class="header-anchor" href="#token-based-verification" aria-label="Permalink to &quot;Token-based Verification&quot;">​</a></h3><p>Verification tokens contain encrypted data about the game session and behavior analysis results.</p><h3 id="server-side-validation" tabindex="-1">Server-side Validation <a class="header-anchor" href="#server-side-validation" aria-label="Permalink to &quot;Server-side Validation&quot;">​</a></h3><p>All tokens must be verified on the server side, preventing client-side tampering.</p><h3 id="responsive-design" tabindex="-1">Responsive Design <a class="header-anchor" href="#responsive-design" aria-label="Permalink to &quot;Responsive Design&quot;">​</a></h3><p>The 1:1 aspect ratio ensures consistent gameplay across different devices, preventing exploits based on screen size variations.</p><h2 id="technical-implementation" tabindex="-1">Technical Implementation <a class="header-anchor" href="#technical-implementation" aria-label="Permalink to &quot;Technical Implementation&quot;">​</a></h2><h3 id="game-engine" tabindex="-1">Game Engine <a class="header-anchor" href="#game-engine" aria-label="Permalink to &quot;Game Engine&quot;">​</a></h3><p>GameShield uses PixiJS, a fast 2D rendering library, to create interactive game experiences:</p><p>┌─────────────────────┐ │ Game Factory │ └─────────────────────┘ │ ▼ ┌─────────────────────┐ │ Game Instance │ └─────────────────────┘ │ ▼ ┌─────────────────────┐ │ PixiJS App │ └─────────────────────┘</p><h3 id="react-integration" tabindex="-1">React Integration <a class="header-anchor" href="#react-integration" aria-label="Permalink to &quot;React Integration&quot;">​</a></h3><p>The React component provides a seamless integration experience:</p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GameShield</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  size</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;400px&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  gameType</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;random&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  difficulty</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;medium&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  onSuccess</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">token</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> verifyToken</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(token)}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span></code></pre></div><h3 id="server-verification" tabindex="-1">Server Verification <a class="header-anchor" href="#server-verification" aria-label="Permalink to &quot;Server Verification&quot;">​</a></h3><p>The server package makes it easy to verify tokens:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { verifyToken } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@gameshield/server&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">post</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/api/verify&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">req</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">token</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> req.body;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> verifyToken</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(token);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (result.valid) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Token is valid, proceed with protected action</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    res.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ success: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Token is invalid, reject the request</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    res.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ success: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="performance-optimization" tabindex="-1">Performance Optimization <a class="header-anchor" href="#performance-optimization" aria-label="Permalink to &quot;Performance Optimization&quot;">​</a></h2><p>GameShield is designed for minimal impact on user experience:</p><ul><li>Lightweight implementation with minimal dependencies</li><li>Efficient rendering using PixiJS</li><li>Responsive design that adapts to different screen sizes</li><li>Optimized game logic for smooth performance</li></ul><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><ul><li>Learn about the <a href="/guide/architecture.html">modular architecture</a> in detail</li><li>Explore the <a href="/guide/packages/core.html">@gameshield/core</a> package</li><li>Integrate the <a href="/guide/packages/react.html">React component</a> into your application</li><li>Set up <a href="/guide/packages/server.html">server-side verification</a></li></ul>`,44)]))}const m=a(r,[["render",h]]);export{u as __pageData,m as default};
