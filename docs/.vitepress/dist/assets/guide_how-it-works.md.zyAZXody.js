import{_ as a,c as t,o as r,aj as i,j as n}from"./chunks/framework.BEJz7Xfi.js";const o="/gameshield_how_it_works.png",g=JSON.parse('{"title":"How Gameshield Works","description":"","frontmatter":{},"headers":[],"relativePath":"guide/how-it-works.md","filePath":"guide/how-it-works.md"}'),s={name:"guide/how-it-works.md"};function l(h,e,c,d,m,u){return r(),t("div",null,e[0]||(e[0]=[i('<h1 id="how-gameshield-works" tabindex="-1">How Gameshield Works <a class="header-anchor" href="#how-gameshield-works" aria-label="Permalink to &quot;How Gameshield Works&quot;">​</a></h1><p>This page explains the technical architecture and operational flow of Gameshield&#39;s game-based CAPTCHA system.</p><h2 id="architecture-overview" tabindex="-1">Architecture Overview <a class="header-anchor" href="#architecture-overview" aria-label="Permalink to &quot;Architecture Overview&quot;">​</a></h2><p>Gameshield consists of three main components:</p><ol><li><strong>Client SDK</strong>: A JavaScript library that renders the game interface and handles user interactions</li><li><strong>Game Engine</strong>: A WebGL-powered engine that generates and runs the verification games</li><li><strong>Verification API</strong>: A server-side component that validates the authenticity of completed challenges</li></ol>',5),n("img",{src:o,darkSrc:"/gameshield_how_it_works_dark.png",alt:"Gameshield Architecture",width:"300px"},null,-1),i('<h2 id="verification-process" tabindex="-1">Verification Process <a class="header-anchor" href="#verification-process" aria-label="Permalink to &quot;Verification Process&quot;">​</a></h2><h3 id="_1-challenge-generation" tabindex="-1">1. Challenge Generation <a class="header-anchor" href="#_1-challenge-generation" aria-label="Permalink to &quot;1. Challenge Generation&quot;">​</a></h3><p>When a CAPTCHA is requested, the system:</p><ul><li>Generates a unique challenge ID</li><li>Randomly selects a game type from the available options</li><li>Creates game parameters with varying difficulty levels</li><li>Applies randomization to prevent pattern recognition</li></ul><h3 id="_2-user-interaction" tabindex="-1">2. User Interaction <a class="header-anchor" href="#_2-user-interaction" aria-label="Permalink to &quot;2. User Interaction&quot;">​</a></h3><p>The user is presented with an interactive game that requires human-like decision making and motor skills:</p><ul><li>Puzzle games require spatial reasoning</li><li>Pattern recognition games test visual processing</li><li>Timing-based games measure reaction time</li><li>Physics-based games leverage intuitive understanding of motion</li></ul><h3 id="_3-behavior-analysis" tabindex="-1">3. Behavior Analysis <a class="header-anchor" href="#_3-behavior-analysis" aria-label="Permalink to &quot;3. Behavior Analysis&quot;">​</a></h3><p>During gameplay, the system analyzes multiple factors:</p><ul><li>Interaction patterns (mouse/touch movements)</li><li>Timing of actions</li><li>Decision-making process</li><li>Solution approach</li></ul><p>These factors are compared against known human behavior patterns to determine authenticity.</p><h3 id="_4-token-generation" tabindex="-1">4. Token Generation <a class="header-anchor" href="#_4-token-generation" aria-label="Permalink to &quot;4. Token Generation&quot;">​</a></h3><p>Upon successful completion:</p><ul><li>The client generates a cryptographically signed token</li><li>This token contains the challenge ID, completion data, and a timestamp</li><li>The token is passed to your application for server-side verification</li></ul><h3 id="_5-server-verification" tabindex="-1">5. Server Verification <a class="header-anchor" href="#_5-server-verification" aria-label="Permalink to &quot;5. Server Verification&quot;">​</a></h3><p>For complete security, your server should:</p><ul><li>Send the token to Gameshield&#39;s verification API</li><li>Receive confirmation of validity</li><li>Process the user&#39;s request only after verification</li></ul><h2 id="security-measures" tabindex="-1">Security Measures <a class="header-anchor" href="#security-measures" aria-label="Permalink to &quot;Security Measures&quot;">​</a></h2><p>Gameshield employs multiple layers of security:</p><h3 id="dynamic-challenges" tabindex="-1">Dynamic Challenges <a class="header-anchor" href="#dynamic-challenges" aria-label="Permalink to &quot;Dynamic Challenges&quot;">​</a></h3><p>Each game is uniquely generated with randomized parameters, making it impossible to create a database of solutions.</p><h3 id="behavior-analysis" tabindex="-1">Behavior Analysis <a class="header-anchor" href="#behavior-analysis" aria-label="Permalink to &quot;Behavior Analysis&quot;">​</a></h3><p>Beyond just completing the game, the system analyzes how the user interacts with the challenge, detecting automation attempts.</p><h3 id="time-limited-tokens" tabindex="-1">Time-Limited Tokens <a class="header-anchor" href="#time-limited-tokens" aria-label="Permalink to &quot;Time-Limited Tokens&quot;">​</a></h3><p>Verification tokens expire after a short period, preventing replay attacks.</p><h3 id="server-side-verification" tabindex="-1">Server-Side Verification <a class="header-anchor" href="#server-side-verification" aria-label="Permalink to &quot;Server-Side Verification&quot;">​</a></h3><p>All tokens must be verified on the server side, preventing client-side tampering.</p><h3 id="continuous-learning" tabindex="-1">Continuous Learning <a class="header-anchor" href="#continuous-learning" aria-label="Permalink to &quot;Continuous Learning&quot;">​</a></h3><p>The system continuously improves by learning from new attack patterns and evolving its detection mechanisms.</p><h2 id="performance-optimization" tabindex="-1">Performance Optimization <a class="header-anchor" href="#performance-optimization" aria-label="Permalink to &quot;Performance Optimization&quot;">​</a></h2><p>Gameshield is designed for minimal impact on user experience:</p><ul><li>Lightweight client SDK (&lt;50KB gzipped)</li><li>Efficient WebGL rendering</li><li>Adaptive difficulty based on device capabilities</li><li>Preloading of game assets during idle page time</li></ul><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><ul><li>Learn about the different <a href="/guide/game-types.html">Game Types</a> available</li><li>Explore <a href="/guide/integration-examples.html">Integration Examples</a> for implementation guidance</li><li>Check out the <a href="/api/">API Reference</a> for detailed configuration options</li></ul>',34)]))}const f=a(s,[["render",l]]);export{g as __pageData,f as default};
