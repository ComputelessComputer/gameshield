import{_ as i,c as a,o as e,aj as t}from"./chunks/framework.BEJz7Xfi.js";const c=JSON.parse('{"title":"Testing GameShield","description":"","frontmatter":{},"headers":[],"relativePath":"guide/testing.md","filePath":"guide/testing.md"}'),n={name:"guide/testing.md"};function l(h,s,p,r,o,k){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="testing-gameshield" tabindex="-1">Testing GameShield <a class="header-anchor" href="#testing-gameshield" aria-label="Permalink to &quot;Testing GameShield&quot;">​</a></h1><p>This guide provides comprehensive instructions for testing the GameShield project, including unit tests, integration tests, and manual testing procedures.</p><h2 id="testing-setup" tabindex="-1">Testing Setup <a class="header-anchor" href="#testing-setup" aria-label="Permalink to &quot;Testing Setup&quot;">​</a></h2><p>GameShield uses Jest as its primary testing framework across all packages in the monorepo. The testing infrastructure is set up to work with Turborepo for efficient test execution.</p><h2 id="running-tests" tabindex="-1">Running Tests <a class="header-anchor" href="#running-tests" aria-label="Permalink to &quot;Running Tests&quot;">​</a></h2><h3 id="running-all-tests" tabindex="-1">Running All Tests <a class="header-anchor" href="#running-all-tests" aria-label="Permalink to &quot;Running All Tests&quot;">​</a></h3><p>To run all tests across the monorepo:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span></span></code></pre></div><p>This command will execute tests for all packages in parallel, leveraging Turborepo&#39;s caching capabilities for faster subsequent runs.</p><h3 id="testing-specific-packages" tabindex="-1">Testing Specific Packages <a class="header-anchor" href="#testing-specific-packages" aria-label="Permalink to &quot;Testing Specific Packages&quot;">​</a></h3><p>To test individual packages:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Test the captcha-sdk</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --filter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> captcha-sdk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Test the game-core</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --filter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> game-core</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Test the API</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --filter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> api</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span></span></code></pre></div><h3 id="watch-mode" tabindex="-1">Watch Mode <a class="header-anchor" href="#watch-mode" aria-label="Permalink to &quot;Watch Mode&quot;">​</a></h3><p>During development, you can use watch mode to automatically re-run tests when files change:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Run all tests in watch mode</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test:watch</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Run specific package tests in watch mode</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --filter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> captcha-sdk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test:watch</span></span></code></pre></div><h3 id="coverage-reports" tabindex="-1">Coverage Reports <a class="header-anchor" href="#coverage-reports" aria-label="Permalink to &quot;Coverage Reports&quot;">​</a></h3><p>To generate test coverage reports:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Generate coverage for all packages</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test:coverage</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Generate coverage for a specific package</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --filter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> game-core</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test:coverage</span></span></code></pre></div><p>Coverage reports are generated in the <code>coverage</code> directory of each package.</p><h2 id="test-types" tabindex="-1">Test Types <a class="header-anchor" href="#test-types" aria-label="Permalink to &quot;Test Types&quot;">​</a></h2><h3 id="unit-tests" tabindex="-1">Unit Tests <a class="header-anchor" href="#unit-tests" aria-label="Permalink to &quot;Unit Tests&quot;">​</a></h3><p>Unit tests focus on testing individual components and functions in isolation. These tests are located in the <code>tests</code> directory of each package.</p><p>Key unit test areas include:</p><ul><li>SDK API functionality</li><li>Game mechanics</li><li>Token generation and validation</li><li>UI component rendering</li></ul><h3 id="integration-tests" tabindex="-1">Integration Tests <a class="header-anchor" href="#integration-tests" aria-label="Permalink to &quot;Integration Tests&quot;">​</a></h3><p>Integration tests verify that different components work together correctly. These tests focus on:</p><ul><li>SDK integration with the game engine</li><li>API interaction with the verification service</li><li>End-to-end user flows</li></ul><h3 id="browser-tests" tabindex="-1">Browser Tests <a class="header-anchor" href="#browser-tests" aria-label="Permalink to &quot;Browser Tests&quot;">​</a></h3><p>For testing browser-specific functionality:</p><ul><li>Tests run in a JSDOM environment that simulates browser APIs</li><li>Canvas and WebGL operations are mocked</li><li>Event handling and user interactions are simulated</li></ul><h2 id="manual-testing" tabindex="-1">Manual Testing <a class="header-anchor" href="#manual-testing" aria-label="Permalink to &quot;Manual Testing&quot;">​</a></h2><h3 id="local-development-environment" tabindex="-1">Local Development Environment <a class="header-anchor" href="#local-development-environment" aria-label="Permalink to &quot;Local Development Environment&quot;">​</a></h3><ol><li><p>Start the development environment:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div></li><li><p>This will start:</p><ul><li>Frontend at <a href="http://localhost:3000" target="_blank" rel="noreferrer">http://localhost:3000</a></li><li>API server at <a href="http://localhost:3001" target="_blank" rel="noreferrer">http://localhost:3001</a></li></ul></li><li><p>Test the CAPTCHA challenges by:</p><ul><li>Completing different game types</li><li>Testing on different screen sizes</li><li>Verifying token generation</li></ul></li></ol><h3 id="testing-the-sdk-integration" tabindex="-1">Testing the SDK Integration <a class="header-anchor" href="#testing-the-sdk-integration" aria-label="Permalink to &quot;Testing the SDK Integration&quot;">​</a></h3><ol><li><p>Build the SDK:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --filter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> captcha-sdk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div></li><li><p>Create a test HTML file that includes the SDK:</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;GameShield Test&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;captcha-container&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;path/to/captcha-sdk.min.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> captcha</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GameshieldCaptcha.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generateCaptcha</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      container: document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;captcha-container&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></li><li><p>Open the HTML file in different browsers to test compatibility</p></li></ol><h2 id="testing-game-types" tabindex="-1">Testing Game Types <a class="header-anchor" href="#testing-game-types" aria-label="Permalink to &quot;Testing Game Types&quot;">​</a></h2><p>Each game type requires specific testing approaches:</p><h3 id="puzzle-games" tabindex="-1">Puzzle Games <a class="header-anchor" href="#puzzle-games" aria-label="Permalink to &quot;Puzzle Games&quot;">​</a></h3><ul><li>Test piece movement and placement</li><li>Verify completion detection</li><li>Test different difficulty levels</li></ul><h3 id="pattern-recognition" tabindex="-1">Pattern Recognition <a class="header-anchor" href="#pattern-recognition" aria-label="Permalink to &quot;Pattern Recognition&quot;">​</a></h3><ul><li>Test pattern matching accuracy</li><li>Verify timing constraints</li><li>Test with different visual patterns</li></ul><h3 id="timing-based-games" tabindex="-1">Timing-Based Games <a class="header-anchor" href="#timing-based-games" aria-label="Permalink to &quot;Timing-Based Games&quot;">​</a></h3><ul><li>Test reaction time measurement</li><li>Verify scoring mechanism</li><li>Test difficulty progression</li></ul><h3 id="physics-based-games" tabindex="-1">Physics-Based Games <a class="header-anchor" href="#physics-based-games" aria-label="Permalink to &quot;Physics-Based Games&quot;">​</a></h3><ul><li>Test physics simulation</li><li>Verify collision detection</li><li>Test user interaction with physics objects</li></ul><h2 id="testing-accessibility" tabindex="-1">Testing Accessibility <a class="header-anchor" href="#testing-accessibility" aria-label="Permalink to &quot;Testing Accessibility&quot;">​</a></h2><p>Verify that games are accessible:</p><ul><li>Test keyboard navigation</li><li>Verify color contrast</li><li>Test with screen readers</li><li>Ensure alternative challenges are available</li></ul><h2 id="performance-testing" tabindex="-1">Performance Testing <a class="header-anchor" href="#performance-testing" aria-label="Permalink to &quot;Performance Testing&quot;">​</a></h2><p>Monitor performance metrics:</p><ul><li>Load time</li><li>Frame rate during gameplay</li><li>Memory usage</li><li>Network requests</li></ul><h2 id="security-testing" tabindex="-1">Security Testing <a class="header-anchor" href="#security-testing" aria-label="Permalink to &quot;Security Testing&quot;">​</a></h2><p>Verify security measures:</p><ul><li>Token validation</li><li>Protection against automated solvers</li><li>Rate limiting</li><li>Server-side verification</li></ul><h2 id="troubleshooting-tests" tabindex="-1">Troubleshooting Tests <a class="header-anchor" href="#troubleshooting-tests" aria-label="Permalink to &quot;Troubleshooting Tests&quot;">​</a></h2><p>If tests are failing:</p><ol><li><p>Check that all dependencies are installed:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div></li><li><p>Ensure test environment is properly set up:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --filter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> captcha-sdk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div></li><li><p>Check for environment-specific issues:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">NODE_ENV</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">test</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span></span></code></pre></div></li><li><p>Look for specific test failures in the output and debug individual tests:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --filter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> game-core</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;should handle difficulty levels&quot;</span></span></code></pre></div></li></ol><h2 id="continuous-integration" tabindex="-1">Continuous Integration <a class="header-anchor" href="#continuous-integration" aria-label="Permalink to &quot;Continuous Integration&quot;">​</a></h2><p>GameShield uses GitHub Actions for continuous integration testing. On each pull request and push to main:</p><ul><li>All tests are run</li><li>Coverage reports are generated</li><li>Build artifacts are created and verified</li></ul><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><ul><li>Check out the <a href="/guide/integration-examples.html">Integration Examples</a> for implementation guidance</li><li>Review the <a href="/guide/troubleshooting.html">Troubleshooting</a> guide for common issues</li><li>Explore the <a href="/api/">API Reference</a> for detailed configuration options</li></ul>`,62)]))}const g=i(n,[["render",l]]);export{c as __pageData,g as default};
